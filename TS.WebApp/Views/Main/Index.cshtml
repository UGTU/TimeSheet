@using System
@using System.Linq
@using TimeSheetMvc4WebApplication.ClassesDTO
@model DtoApprover
@{
    Layout = "~/Views/Shared/TimeSheetLayout.cshtml";
    var approver = ViewBag.approver as DtoApprover;
    var pageCount = (int)ViewBag.DepartmentsPageCount;
    var currentPage = (int)ViewBag.CurrentPage;
    var departments = ViewBag.Departments as IEnumerable<DtoDepartment>;
    const int charCountForDepFullName = 70;
}


@if (User.Identity.IsAuthenticated && User.IsInRole("TabelAdmin"))
{
    <div id="searchResult" class="row" ng-app ng-controller="searchDepartment">

        <div class="input-group input-group-sm" ng-hide="HideSearchPanel">
            <input type="text" ng-model="query" class="form-control " placeholder="Введите отдел" ng-change="Search()">
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-search"></span>
            </span>
        </div>

        <div id="depList" class="list-group">
            <a class="list-group-item" style="cursor: pointer; padding: 7px 10px; background-color: #f5f5f5;" ng-class="empl.css" ng-click="Back()" ng-hide="BackHide()">
                <h4 class=" list-group-item-heading" style="font-size: 16px;">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                    {{CurrentDepartment.DepartmentSmallName}}
                </h4>
                <p class="list-group-item-text"> На уровень вверх</p>
            </a>
            <a class="list-group-item" style="cursor: pointer;padding: 7px 10px;" ng-repeat="dep in CerrentDepartments| filter:query" ng-click="SelectDepartment(dep)" ng-class="dep.css" @*ng-class="empl.css"*@>
                
                <span ng-hide="CanSetAsCurrentDepartment(dep.IdDepartment)" class="badge" ng-click="SetCurrentDepartment(dep.IdDepartment)" data-toggle="tooltip" title="Раскрыть" data-placement="bottom"><span class="glyphicon glyphicon-chevron-right"></span></span>
                
                <span class="badge" ng-click="GoToTSDepartment(dep.IdDepartment)" data-toggle="tooltip" title="Перейти к табелям" data-placement="bottom"><span class="glyphicon glyphicon-th"></span></span>
                
                <h4 class=" list-group-item-heading" style="font-size: 16px;">
                    {{dep.DepartmentSmallName}}
                </h4>
                <p class="list-group-item-text">{{dep.DepartmentFullName}} </p>
            </a>
            <div class="progress progress-striped active" id="deparmentsLoad" style="margin: 20px 20px;">
                <div class="progress-bar" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                </div>
            </div>
        </div>

    </div>

    <script>
        function searchDepartment($scope, $http) {
            $scope.HideSearchPanel = true;
        $http.get('@Html.Raw(@Url.Action("GetDepartment", "Admin", new { idTimeSheet = @Model }))').success(function (data) {
            $scope.Departments = data;
            $scope.DepIdList = [];
            $scope.SetCurrentDepartment(null);
            $scope.CurrentDepartment = null;
            $scope.HideSearchPanel = false;
            $('#deparmentsLoad').remove();
        });

        $scope.SetCurrentDepartment = function (idMenagDepartnent) {
            if ($scope.DepIdList.indexOf(idMenagDepartnent) === -1) {
                $scope.DepIdList.push(idMenagDepartnent);
            }
            var deps = [];
            $scope.CurrentDepartment = null;
            angular.forEach($scope.Departments, function (dep) {
                if (dep.IdManagerDepartment == idMenagDepartnent)
                    deps.push(dep);
                if (dep.IdDepartment == idMenagDepartnent) {
                    $scope.CurrentDepartment = dep;
                }
            });
            $scope.CerrentDepartments = deps;
            $scope.SelectDepartment(deps[0]);
        };

        $scope.GoToTSDepartment = function (idDepartment) {
            //$window.location.href = "";
            //$location.path('/video')
            var link = '@Html.Raw(@Url.Action("TimeSheetList", "Main", new { id = "idDepartmentReplace" }))';
            link = link.replace("idDepartmentReplace", idDepartment);
            window.location.href = link;
            //$location.path(link);
        };

        $scope.Search = function () {
            if ($scope.query != '') {
                $scope.CerrentDepartments = $scope.Departments;
            } else
                $scope.SetCurrentDepartment(null);
        };

        $scope.Back = function () {
            $scope.DepIdList.splice($scope.DepIdList.length - 1, 1);
            $scope.SetCurrentDepartment($scope.DepIdList[$scope.DepIdList.length - 1]);
        };

        $scope.BackHide = function () {
            return $scope.CurrentDepartment == null ? true : false;
        };

        $scope.SelectDepartment = function (department) {
            $scope.ClearCss();
            department.css = "active";
            $scope.SelectedDepartment = department;
            $scope.SelectedDepartmentEtalon = angular.copy($scope.SelectedDepartment);
        };

        $scope.ClearCss = function () {
            angular.forEach($scope.Departments, function (dep) {
                dep.css = "";
            });
        };


        $scope.CanSetAsCurrentDepartment = function (idDepartment) {
            var result = true;
            angular.forEach($scope.Departments, function (dep) {
                if (dep.IdManagerDepartment == idDepartment)
                    result = false;
            });
            return result;
        };


    };
    </script>

}


@if (Model.GetApproverDepartments() != null && Model.GetApproverDepartments().Any())
{   
    const int itemsInRow = 4;
    //var rowColl = Math.Ceiling((double)Model.GetApproverDepartments().Count() / (double)itemsInRow);
    //var departments = Model.GetApproverDepartments().OrderBy(o => o.DepartmentSmallName);
    var rowColl = Math.Ceiling((double) departments.Count()/(double) itemsInRow);
    
    for (var i = 0; i < rowColl; i++)
    {
        var rowItems = departments.Skip(i * itemsInRow).Take(itemsInRow);
        var span = Math.Floor(12 / (double)itemsInRow);
        <div class="row">
            @foreach (var item in rowItems)
            {
                <div class="@string.Format("col-sm-6 col-md-{0}", span)">
                    <h3>@item.DepartmentSmallName</h3>
                    <p style="height: 50px;">@(item.DepartmentFullName.Count() > charCountForDepFullName ? item.DepartmentFullName.Substring(0, charCountForDepFullName) + "..." : item.DepartmentFullName)</p>
                    <p style="color: darkgray">
                        @{
                            var roles = Model.GetDepartmentApproverNumbers(item.IdDepartment).Select(s => s.ApproveTypeName).ToArray();
                            for (var i1 = 0; i1 < roles.Count() - 1; i1++)
                            {
                                @Html.Raw(string.Format("{0}, ", roles[i1]))
                            }
                            @Html.Raw(string.Format("{0}", roles.Last()))
                        }
                    </p>
                    <p><a class="btn btn-default btn-sm" href="@Url.Action("TimeSheetList", "Main", new { id = item.IdDepartment })">Перейти к табелям <span class="glyphicon glyphicon-th"></span></a></p>
                </div>
            }
        </div>
    }
}
else
{
    <div class="alert alert-error">
        <p>За вами не закреплено ни одного структурного подразделения.</p>
    </div>
}

@if (pageCount > 1)
{
    @Helpers.Pagenator(Url.Action("Index", new {page = "pageReplace"}), currentPage, pageCount);
}

@if (approver != null && (User.IsInRole("TabelAdmin") || approver.Allowed(ApproverType.РаботникКадров)))
{
    <script>
        $('#HeaderLiBox').append("<li id=\"111\" class=\"active\"><a href=\"@Url.Action("Index", "Main")\" style=\"cursor:pointer;cursor:hand\" ><span class=\"glyphicon glyphicon-th-large\"></span> Подразделения</a></li>");
        $('#HeaderLiBox').append("<li id=\"111\" ><a href=\"@Url.Action("Index", "Register")\" style=\"cursor:pointer;cursor:hand\" ><span class=\"glyphicon glyphicon-align-justify\"></span> Табеля</a></li>");
        
        @*$('#HeaderLiBox').append("<li id=\"111\">" +
            "<div class=\"btn-group navbar-form form-inline\">" +
            "<a class=\"btn btn-default\" href=\"@Url.Action("Index", "Register")\">" +
            "<span class=\"glyphicon glyphicon-align-justify\"></span> Табеля" +
            "</a>" +
            "<a class=\"btn btn-default active\" href=\"@Url.Action("Index", "Main")\">" +
            "<span class=\"glyphicon glyphicon-th-large\"></span> Подразделения" +
            "</a>" +
            "</div></li>");*@
    </script>
}