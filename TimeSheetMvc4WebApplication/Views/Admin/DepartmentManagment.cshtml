@using TimeSheetMvc4WebApplication.Models
@{
    ViewBag.Title = "Структурные подразделения";
    Layout = "~/Views/Shared/TimeSheetLayout.cshtml";
}

<h2>Структурные подразделения</h2>
<div class="row " ng-app ng-controller="Department">
    <div class="col-md-4">
        <div class="input-group input-group-sm" style="margin-bottom: 10px;">
            <input type="text" ng-model="query" class="form-control ">
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-search"></span>
            </span>
        </div>

        <div id="employeeList" class="list-group" style=" overflow: auto; border: 1px solid #dddddd; min-height: 100px; border-radius: 5px;" >
            <a class="list-group-item" style="cursor: pointer; padding: 7px 10px; background-color: #f5f5f5;" ng-class="empl.css" ng-click="Back()"  ng-hide="BackHide()">
                <h4 class=" list-group-item-heading" style="font-size: 16px;">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                    {{CurrentDepartment.DepartmentSmallName}}
                </h4>
                <p class="list-group-item-text"> На уровень вверх</p>
            </a>
            <a class="list-group-item" style="cursor: pointer;padding: 7px 10px;" ng-repeat="dep in CerrentDepartments| filter:query" ng-click="SelectDepartment(dep)" ng-class="dep.css" @*ng-class="empl.css"*@>
                <span ng-hide="CanSetAsCurrentDepartment(dep.IdDepartment)" class="badge" ng-click="SetCurrentDepartment(dep.IdDepartment)"><span class="glyphicon glyphicon-chevron-right"></span></span>
                <h4 class=" list-group-item-heading" style="font-size: 16px;">
                    {{dep.DepartmentSmallName}}
                </h4>
                <p class="list-group-item-text">{{dep.DepartmentFullName}} </p>
            </a>
        </div>
    </div>
    <div class="col-md-8">
        <h3 style="margin-top: 3px;">Согласователи для {{SelectedDepartment.DepartmentSmallName}}</h3>
        <hr style="margin-top: 0;"/>
        <h4>Табельщик</h4>
        <div class="row">
            <div class="col-lg-5">
                <input type="text" ng-model="sdApprover1.EmployeeLogin" class="form-control">
            </div>
            <div class="col-lg-7">
                <select class="form-control" ng-model="sdApprover1" ng-options="empl as GetEmployeeName(empl) for empl in sdEmployees"></select>
            </div>
        </div>
        
        <h4>Начальник отдела кадров</h4>
        <div class="row">
            <div class="col-lg-5">
                <input type="text" ng-model="sdApprover2.EmployeeLogin" class="form-control">
            </div>
            <div class="col-lg-7">
                <select class="form-control" ng-model="sdApprover2" ng-options="empl as GetEmployeeName(empl) for empl in sdEmployees"></select>
            </div>
        </div>
        
        <h4>Работник отдела кадров</h4>
        <div class="row">
            <div class="col-lg-5">
                <input type="text" ng-model="sdApprover3.EmployeeLogin" class="form-control">
            </div>
            <div class="col-lg-7">
                <select class="form-control" ng-model="sdApprover3" ng-options="empl as GetEmployeeName(empl) for empl in sdEmployees"></select>
            </div>
        </div>
        <br/>
        <pre>{{d}}</pre>
    </div>
</div>



<script>
    function Department($scope, $http) {
        $http.get('@Html.Raw(@Url.Action("GetDepartment", "Admin", new { idTimeSheet = @Model }))').success(function (data) {
            $scope.Departments = data;
            $scope.DepIdList = [];
            $scope.SetCurrentDepartment(null);
            $scope.CurrentDepartment = null;
        });

        $scope.SetCurrentDepartment = function (idMenagDepartnent) {
            if ($scope.DepIdList.indexOf(idMenagDepartnent) === -1) {
                $scope.DepIdList.push(idMenagDepartnent);
            }
            var deps = []; 
            $scope.CurrentDepartment = null;
            angular.forEach($scope.Departments, function (dep) {
                if (dep.IdManagerDepartment == idMenagDepartnent)
                    deps.push(dep);
                if (dep.IdDepartment == idMenagDepartnent) {
                    $scope.CurrentDepartment = dep;
                }
            });
            $scope.CerrentDepartments = deps;
            $scope.SelectDepartment(deps[0]);
        };

        $scope.Back = function() {
            $scope.DepIdList.splice($scope.DepIdList.length - 1, 1);
            $scope.SetCurrentDepartment($scope.DepIdList[$scope.DepIdList.length - 1]);
        };
        
        $scope.BackHide = function () {
            return $scope.CurrentDepartment == null?true:false;
        };
        
        $scope.SelectDepartment = function (department) {
            $scope.ClearCss();
            department.css = "active";
            $scope.SelectedDepartment = department;
            console.log(department.IdDepartment);
            $scope.GetApprovers(department.IdDepartment);
        };

        $scope.ClearCss = function() {
            angular.forEach($scope.Departments, function (dep) {
                dep.css = "";
            });
        };

        $scope.GetApprovers = function (idDepartment) {
            var link = '@Html.Raw(@Url.Action("GetApproverForDepartment", "Admin", new { id = "replaceId" }))';
            link = link.replace("replaceId", idDepartment);
            $http.get(link).success(function (data) {
                $scope.d = data;
                $scope.sdEmployees = data.employees;
                $scope.sdApprover1 = $scope.InitApprover(data.approver1);
                $scope.sdApprover2 = $scope.InitApprover(data.approver2);
                //выбирать среди работников отдела кадров
                $scope.sdApprover3 = $scope.InitApprover(data.approver3);
                //$scope.sdApprover1 = data.approver1;
                //$scope.sdApprover2 = data.approver2;
                //$scope.sdApprover3 = data.approver3;
                 
            });
        };

        $scope.InitApprover = function (approver) {
            var empl;
            angular.forEach($scope.sdEmployees, function (employee) {
                if (approver.IdEmployee == employee.IdEmployee)
                {
                    empl = employee;
                    return;
                }
            });
            //console.log(app.Name);
            return empl;
        };

        $scope.GetEmployeeName = function (employee) {
            return employee.Surname + ' ' + employee.Name + ' ' + employee.Patronymic;
        };

        
        $scope.CanSetAsCurrentDepartment = function (idDepartment) {
            var result = true;
            angular.forEach($scope.Departments, function (dep) {
                if (dep.IdManagerDepartment == idDepartment)
                    result = false;
            });
            return result;
        };

    };
</script>















<script>
    $(window).load(function () {
        employeeListResize();
    });
    $(window).resize(function () {
        employeeListResize();
    });

    function employeeListResize() {
        var maxHeight = $(window).height();
        maxHeight = maxHeight - 200;
        $('#employeeList').css('max-height', maxHeight);
    }
</script>

@{
    Html.RenderPartial("HeaderLinks", new HeaderLinckModel
    {
        Links = new HeaderLink[2] { HeaderLink.ExceptionDay, HeaderLink.Department },
        CurrentLink = HeaderLink.Department
    });
}

