#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeSheetMvc4WebApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Kadr")]
	public partial class KadrDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertApproverType(ApproverType instance);
    partial void UpdateApproverType(ApproverType instance);
    partial void DeleteApproverType(ApproverType instance);
    partial void InsertEmployeeEvent(EmployeeEvent instance);
    partial void UpdateEmployeeEvent(EmployeeEvent instance);
    partial void DeleteEmployeeEvent(EmployeeEvent instance);
    partial void InsertEventSuperType(EventSuperType instance);
    partial void UpdateEventSuperType(EventSuperType instance);
    partial void DeleteEventSuperType(EventSuperType instance);
    partial void InsertException(Exception instance);
    partial void UpdateException(Exception instance);
    partial void DeleteException(Exception instance);
    partial void InsertTimeSheetApproval(TimeSheetApproval instance);
    partial void UpdateTimeSheetApproval(TimeSheetApproval instance);
    partial void DeleteTimeSheetApproval(TimeSheetApproval instance);
    partial void InsertWorkShedule(WorkShedule instance);
    partial void UpdateWorkShedule(WorkShedule instance);
    partial void DeleteWorkShedule(WorkShedule instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertDep(Dep instance);
    partial void UpdateDep(Dep instance);
    partial void DeleteDep(Dep instance);
    partial void InsertApperoveDepartment(ApperoveDepartment instance);
    partial void UpdateApperoveDepartment(ApperoveDepartment instance);
    partial void DeleteApperoveDepartment(ApperoveDepartment instance);
    partial void InsertApprover(Approver instance);
    partial void UpdateApprover(Approver instance);
    partial void DeleteApprover(Approver instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertFactStaffCurrent(FactStaffCurrent instance);
    partial void UpdateFactStaffCurrent(FactStaffCurrent instance);
    partial void DeleteFactStaffCurrent(FactStaffCurrent instance);
    partial void InsertOK_Otpuskvid(OK_Otpuskvid instance);
    partial void UpdateOK_Otpuskvid(OK_Otpuskvid instance);
    partial void DeleteOK_Otpuskvid(OK_Otpuskvid instance);
    partial void InsertOK_Otpusk(OK_Otpusk instance);
    partial void UpdateOK_Otpusk(OK_Otpusk instance);
    partial void DeleteOK_Otpusk(OK_Otpusk instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertFactStaff(FactStaff instance);
    partial void UpdateFactStaff(FactStaff instance);
    partial void DeleteFactStaff(FactStaff instance);
    partial void InsertPlanStaff(PlanStaff instance);
    partial void UpdatePlanStaff(PlanStaff instance);
    partial void DeletePlanStaff(PlanStaff instance);
    partial void InsertFactStaffWithHistory(FactStaffWithHistory instance);
    partial void UpdateFactStaffWithHistory(FactStaffWithHistory instance);
    partial void DeleteFactStaffWithHistory(FactStaffWithHistory instance);
    partial void InsertFactStaffHistory(FactStaffHistory instance);
    partial void UpdateFactStaffHistory(FactStaffHistory instance);
    partial void DeleteFactStaffHistory(FactStaffHistory instance);
    partial void InsertTimeSheetRecord(TimeSheetRecord instance);
    partial void UpdateTimeSheetRecord(TimeSheetRecord instance);
    partial void DeleteTimeSheetRecord(TimeSheetRecord instance);
    partial void InsertDayStatus(DayStatus instance);
    partial void UpdateDayStatus(DayStatus instance);
    partial void DeleteDayStatus(DayStatus instance);
    partial void InsertTimeSheet(TimeSheet instance);
    partial void UpdateTimeSheet(TimeSheet instance);
    partial void DeleteTimeSheet(TimeSheet instance);
    #endregion
		
		public KadrDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HomeDbKadrConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KadrDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KadrDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KadrDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KadrDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<ApproverType> ApproverType
		{
			get
			{
				return this.GetTable<ApproverType>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeEvent> EmployeeEvent
		{
			get
			{
				return this.GetTable<EmployeeEvent>();
			}
		}
		
		public System.Data.Linq.Table<EventSuperType> EventSuperType
		{
			get
			{
				return this.GetTable<EventSuperType>();
			}
		}
		
		public System.Data.Linq.Table<Exception> Exception
		{
			get
			{
				return this.GetTable<Exception>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetApproval> TimeSheetApproval
		{
			get
			{
				return this.GetTable<TimeSheetApproval>();
			}
		}
		
		public System.Data.Linq.Table<WorkShedule> WorkShedule
		{
			get
			{
				return this.GetTable<WorkShedule>();
			}
		}
		
		public System.Data.Linq.Table<Post> Post
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<Dep> Dep
		{
			get
			{
				return this.GetTable<Dep>();
			}
		}
		
		public System.Data.Linq.Table<ApperoveDepartment> ApperoveDepartment
		{
			get
			{
				return this.GetTable<ApperoveDepartment>();
			}
		}
		
		public System.Data.Linq.Table<Approver> Approver
		{
			get
			{
				return this.GetTable<Approver>();
			}
		}
		
		public System.Data.Linq.Table<Category> Category
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffCurrent> FactStaffCurrent
		{
			get
			{
				return this.GetTable<FactStaffCurrent>();
			}
		}
		
		public System.Data.Linq.Table<OK_Otpuskvid> OK_Otpuskvid
		{
			get
			{
				return this.GetTable<OK_Otpuskvid>();
			}
		}
		
		public System.Data.Linq.Table<OK_Otpusk> OK_Otpusk
		{
			get
			{
				return this.GetTable<OK_Otpusk>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<FactStaff> FactStaff
		{
			get
			{
				return this.GetTable<FactStaff>();
			}
		}
		
		public System.Data.Linq.Table<PlanStaff> PlanStaff
		{
			get
			{
				return this.GetTable<PlanStaff>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffWithHistory> FactStaffWithHistory
		{
			get
			{
				return this.GetTable<FactStaffWithHistory>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffHistory> FactStaffHistory
		{
			get
			{
				return this.GetTable<FactStaffHistory>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetRecord> TimeSheetRecord
		{
			get
			{
				return this.GetTable<TimeSheetRecord>();
			}
		}
		
		public System.Data.Linq.Table<DayStatus> DayStatus
		{
			get
			{
				return this.GetTable<DayStatus>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheet> TimeSheet
		{
			get
			{
				return this.GetTable<TimeSheet>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ShemaTabel.CreateTimeSheet")]
		public int CreateTimeSheet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCrater, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateBeginPeriod", DbType="Date")] System.Nullable<System.DateTime> dateBeginPeriod, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateEndPeriod", DbType="Date")] System.Nullable<System.DateTime> dateEndPeriod, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateComposition", DbType="Date")] System.Nullable<System.DateTime> dateComposition, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdTimeSheet", DbType="Int")] ref System.Nullable<int> idTimeSheet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDepartment, idCrater, dateBeginPeriod, dateEndPeriod, dateComposition, idTimeSheet);
			idTimeSheet = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.add_EmplLogin")]
		public int add_EmplLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string itab_n, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeSid", DbType="VarBinary(85)")] System.Data.Linq.Binary employeeSid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Login", DbType="NVarChar(128)")] string login)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itab_n, employeeSid, login);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FIOToDat", IsComposable=true)]
		public string FIOToDat([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FIO", DbType="VarChar(100)")] string fIO, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> kind)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fIO, kind).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ShemaTabel.TimeSheetRecordInsert")]
		public int TimeSheetRecordInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidXMLInput", DbType="Xml")] System.Xml.Linq.XElement validXMLInput)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), validXMLInput);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DepartmentName;
		
		private string _DepartmentSmallName;
		
		private System.Nullable<int> _idDepartmentType;
		
		private System.Nullable<int> _idManagerDepartment;
		
		private System.Nullable<int> _KadrID;
		
		private System.DateTime _dateCreate;
		
		private System.Nullable<System.DateTime> _dateExit;
		
		private System.Nullable<int> _idManagerPlanStaff;
		
		private int _idBeginPrikaz;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<int> _SeverKoeff;
		
		private System.Nullable<int> _RayonKoeff;
		
		private System.Guid _DepartmentGUID;
		
		private EntitySet<Dep> _Dep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDepartmentSmallNameChanging(string value);
    partial void OnDepartmentSmallNameChanged();
    partial void OnidDepartmentTypeChanging(System.Nullable<int> value);
    partial void OnidDepartmentTypeChanged();
    partial void OnidManagerDepartmentChanging(System.Nullable<int> value);
    partial void OnidManagerDepartmentChanged();
    partial void OnKadrIDChanging(System.Nullable<int> value);
    partial void OnKadrIDChanged();
    partial void OndateCreateChanging(System.DateTime value);
    partial void OndateCreateChanged();
    partial void OndateExitChanging(System.Nullable<System.DateTime> value);
    partial void OndateExitChanged();
    partial void OnidManagerPlanStaffChanging(System.Nullable<int> value);
    partial void OnidManagerPlanStaffChanged();
    partial void OnidBeginPrikazChanging(int value);
    partial void OnidBeginPrikazChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnSeverKoeffChanging(System.Nullable<int> value);
    partial void OnSeverKoeffChanged();
    partial void OnRayonKoeffChanging(System.Nullable<int> value);
    partial void OnRayonKoeffChanged();
    partial void OnDepartmentGUIDChanging(System.Guid value);
    partial void OnDepartmentGUIDChanged();
    #endregion
		
		public Department()
		{
			this._Dep = new EntitySet<Dep>(new Action<Dep>(this.attach_Dep), new Action<Dep>(this.detach_Dep));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentSmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentSmallName
		{
			get
			{
				return this._DepartmentSmallName;
			}
			set
			{
				if ((this._DepartmentSmallName != value))
				{
					this.OnDepartmentSmallNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentSmallName = value;
					this.SendPropertyChanged("DepartmentSmallName");
					this.OnDepartmentSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartmentType", DbType="Int")]
		public System.Nullable<int> idDepartmentType
		{
			get
			{
				return this._idDepartmentType;
			}
			set
			{
				if ((this._idDepartmentType != value))
				{
					this.OnidDepartmentTypeChanging(value);
					this.SendPropertyChanging();
					this._idDepartmentType = value;
					this.SendPropertyChanged("idDepartmentType");
					this.OnidDepartmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerDepartment", DbType="Int")]
		public System.Nullable<int> idManagerDepartment
		{
			get
			{
				return this._idManagerDepartment;
			}
			set
			{
				if ((this._idManagerDepartment != value))
				{
					this.OnidManagerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idManagerDepartment = value;
					this.SendPropertyChanged("idManagerDepartment");
					this.OnidManagerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this.OnKadrIDChanging(value);
					this.SendPropertyChanging();
					this._KadrID = value;
					this.SendPropertyChanged("KadrID");
					this.OnKadrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreate", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreate
		{
			get
			{
				return this._dateCreate;
			}
			set
			{
				if ((this._dateCreate != value))
				{
					this.OndateCreateChanging(value);
					this.SendPropertyChanging();
					this._dateCreate = value;
					this.SendPropertyChanged("dateCreate");
					this.OndateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateExit
		{
			get
			{
				return this._dateExit;
			}
			set
			{
				if ((this._dateExit != value))
				{
					this.OndateExitChanging(value);
					this.SendPropertyChanging();
					this._dateExit = value;
					this.SendPropertyChanged("dateExit");
					this.OndateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerPlanStaff", DbType="Int")]
		public System.Nullable<int> idManagerPlanStaff
		{
			get
			{
				return this._idManagerPlanStaff;
			}
			set
			{
				if ((this._idManagerPlanStaff != value))
				{
					this.OnidManagerPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idManagerPlanStaff = value;
					this.SendPropertyChanged("idManagerPlanStaff");
					this.OnidManagerPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int")]
		public System.Nullable<int> SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this.OnSeverKoeffChanging(value);
					this.SendPropertyChanging();
					this._SeverKoeff = value;
					this.SendPropertyChanged("SeverKoeff");
					this.OnSeverKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int")]
		public System.Nullable<int> RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this.OnRayonKoeffChanging(value);
					this.SendPropertyChanging();
					this._RayonKoeff = value;
					this.SendPropertyChanged("RayonKoeff");
					this.OnRayonKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentGUID
		{
			get
			{
				return this._DepartmentGUID;
			}
			set
			{
				if ((this._DepartmentGUID != value))
				{
					this.OnDepartmentGUIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentGUID = value;
					this.SendPropertyChanged("DepartmentGUID");
					this.OnDepartmentGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dep", Storage="_Dep", ThisKey="id", OtherKey="id")]
		public EntitySet<Dep> Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				this._Dep.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dep(Dep entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Dep(Dep entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.ApproverType")]
	public partial class ApproverType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ApproverTypeName;
		
		private System.Nullable<int> _ApproveNumber;
		
		private EntitySet<Approver> _Approver;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnApproverTypeNameChanging(string value);
    partial void OnApproverTypeNameChanged();
    partial void OnApproveNumberChanging(System.Nullable<int> value);
    partial void OnApproveNumberChanged();
    #endregion
		
		public ApproverType()
		{
			this._Approver = new EntitySet<Approver>(new Action<Approver>(this.attach_Approver), new Action<Approver>(this.detach_Approver));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApproverTypeName
		{
			get
			{
				return this._ApproverTypeName;
			}
			set
			{
				if ((this._ApproverTypeName != value))
				{
					this.OnApproverTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ApproverTypeName = value;
					this.SendPropertyChanged("ApproverTypeName");
					this.OnApproverTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveNumber", DbType="Int")]
		public System.Nullable<int> ApproveNumber
		{
			get
			{
				return this._ApproveNumber;
			}
			set
			{
				if ((this._ApproveNumber != value))
				{
					this.OnApproveNumberChanging(value);
					this.SendPropertyChanging();
					this._ApproveNumber = value;
					this.SendPropertyChanged("ApproveNumber");
					this.OnApproveNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApproverType_Approver", Storage="_Approver", ThisKey="id", OtherKey="idApproverType")]
		public EntitySet<Approver> Approver
		{
			get
			{
				return this._Approver;
			}
			set
			{
				this._Approver.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Approver(Approver entity)
		{
			this.SendPropertyChanging();
			entity.ApproverType = this;
		}
		
		private void detach_Approver(Approver entity)
		{
			this.SendPropertyChanging();
			entity.ApproverType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.EmployeeEvent")]
	public partial class EmployeeEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEventSuperType;
		
		private int _idFactStaff;
		
		private EntityRef<EventSuperType> _EventSuperType;
		
		private EntityRef<FactStaff> _FactStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEventSuperTypeChanging(int value);
    partial void OnidEventSuperTypeChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    #endregion
		
		public EmployeeEvent()
		{
			this._EventSuperType = default(EntityRef<EventSuperType>);
			this._FactStaff = default(EntityRef<FactStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEventSuperType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEventSuperType
		{
			get
			{
				return this._idEventSuperType;
			}
			set
			{
				if ((this._idEventSuperType != value))
				{
					if (this._EventSuperType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEventSuperTypeChanging(value);
					this.SendPropertyChanging();
					this._idEventSuperType = value;
					this.SendPropertyChanged("idEventSuperType");
					this.OnidEventSuperTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventSuperType_EmployeeEvent", Storage="_EventSuperType", ThisKey="idEventSuperType", OtherKey="id", IsForeignKey=true)]
		public EventSuperType EventSuperType
		{
			get
			{
				return this._EventSuperType.Entity;
			}
			set
			{
				EventSuperType previousValue = this._EventSuperType.Entity;
				if (((previousValue != value) 
							|| (this._EventSuperType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventSuperType.Entity = null;
						previousValue.EmployeeEvent = null;
					}
					this._EventSuperType.Entity = value;
					if ((value != null))
					{
						value.EmployeeEvent = this;
						this._idEventSuperType = value.id;
					}
					else
					{
						this._idEventSuperType = default(int);
					}
					this.SendPropertyChanged("EventSuperType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_EmployeeEvent", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.EmployeeEvent.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.EmployeeEvent.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.EventSuperType")]
	public partial class EventSuperType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idDayStatus;
		
		private System.DateTime _BeginDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _FirstEventDate;
		
		private EntityRef<EmployeeEvent> _EmployeeEvent;
		
		private EntityRef<DayStatus> _DayStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDayStatusChanging(int value);
    partial void OnidDayStatusChanged();
    partial void OnBeginDateChanging(System.DateTime value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFirstEventDateChanging(System.DateTime value);
    partial void OnFirstEventDateChanged();
    #endregion
		
		public EventSuperType()
		{
			this._EmployeeEvent = default(EntityRef<EmployeeEvent>);
			this._DayStatus = default(EntityRef<DayStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDayStatus", DbType="Int NOT NULL")]
		public int idDayStatus
		{
			get
			{
				return this._idDayStatus;
			}
			set
			{
				if ((this._idDayStatus != value))
				{
					if (this._DayStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDayStatusChanging(value);
					this.SendPropertyChanging();
					this._idDayStatus = value;
					this.SendPropertyChanged("idDayStatus");
					this.OnidDayStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginDate", DbType="Date NOT NULL")]
		public System.DateTime BeginDate
		{
			get
			{
				return this._BeginDate;
			}
			set
			{
				if ((this._BeginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BeginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstEventDate", DbType="DateTime NOT NULL")]
		public System.DateTime FirstEventDate
		{
			get
			{
				return this._FirstEventDate;
			}
			set
			{
				if ((this._FirstEventDate != value))
				{
					this.OnFirstEventDateChanging(value);
					this.SendPropertyChanging();
					this._FirstEventDate = value;
					this.SendPropertyChanged("FirstEventDate");
					this.OnFirstEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventSuperType_EmployeeEvent", Storage="_EmployeeEvent", ThisKey="id", OtherKey="idEventSuperType", IsUnique=true, IsForeignKey=false)]
		public EmployeeEvent EmployeeEvent
		{
			get
			{
				return this._EmployeeEvent.Entity;
			}
			set
			{
				EmployeeEvent previousValue = this._EmployeeEvent.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeEvent.Entity = null;
						previousValue.EventSuperType = null;
					}
					this._EmployeeEvent.Entity = value;
					if ((value != null))
					{
						value.EventSuperType = this;
					}
					this.SendPropertyChanged("EmployeeEvent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_EventSuperType", Storage="_DayStatus", ThisKey="idDayStatus", OtherKey="id", IsForeignKey=true)]
		public DayStatus DayStatus
		{
			get
			{
				return this._DayStatus.Entity;
			}
			set
			{
				DayStatus previousValue = this._DayStatus.Entity;
				if (((previousValue != value) 
							|| (this._DayStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayStatus.Entity = null;
						previousValue.EventSuperType.Remove(this);
					}
					this._DayStatus.Entity = value;
					if ((value != null))
					{
						value.EventSuperType.Add(this);
						this._idDayStatus = value.id;
					}
					else
					{
						this._idDayStatus = default(int);
					}
					this.SendPropertyChanged("DayStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.Exception")]
	public partial class Exception : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ExceptionName;
		
		private System.DateTime _DateException;
		
		private int _idDayStatus;
		
		private int _idPrikaz;
		
		private System.Nullable<float> _KolHourMPS;
		
		private System.Nullable<float> _KolHourMNS;
		
		private System.Nullable<float> _KolHourGPS;
		
		private System.Nullable<float> _KolHourGNS;
		
		private System.Nullable<int> _idWorkShedule;
		
		private EntityRef<WorkShedule> _WorkShedule;
		
		private EntityRef<DayStatus> _DayStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnExceptionNameChanging(string value);
    partial void OnExceptionNameChanged();
    partial void OnDateExceptionChanging(System.DateTime value);
    partial void OnDateExceptionChanged();
    partial void OnidDayStatusChanging(int value);
    partial void OnidDayStatusChanged();
    partial void OnidPrikazChanging(int value);
    partial void OnidPrikazChanged();
    partial void OnKolHourMPSChanging(System.Nullable<float> value);
    partial void OnKolHourMPSChanged();
    partial void OnKolHourMNSChanging(System.Nullable<float> value);
    partial void OnKolHourMNSChanged();
    partial void OnKolHourGPSChanging(System.Nullable<float> value);
    partial void OnKolHourGPSChanged();
    partial void OnKolHourGNSChanging(System.Nullable<float> value);
    partial void OnKolHourGNSChanged();
    partial void OnidWorkSheduleChanging(System.Nullable<int> value);
    partial void OnidWorkSheduleChanged();
    #endregion
		
		public Exception()
		{
			this._WorkShedule = default(EntityRef<WorkShedule>);
			this._DayStatus = default(EntityRef<DayStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExceptionName
		{
			get
			{
				return this._ExceptionName;
			}
			set
			{
				if ((this._ExceptionName != value))
				{
					this.OnExceptionNameChanging(value);
					this.SendPropertyChanging();
					this._ExceptionName = value;
					this.SendPropertyChanged("ExceptionName");
					this.OnExceptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateException", DbType="Date NOT NULL")]
		public System.DateTime DateException
		{
			get
			{
				return this._DateException;
			}
			set
			{
				if ((this._DateException != value))
				{
					this.OnDateExceptionChanging(value);
					this.SendPropertyChanging();
					this._DateException = value;
					this.SendPropertyChanged("DateException");
					this.OnDateExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDayStatus", DbType="Int NOT NULL")]
		public int idDayStatus
		{
			get
			{
				return this._idDayStatus;
			}
			set
			{
				if ((this._idDayStatus != value))
				{
					if (this._DayStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDayStatusChanging(value);
					this.SendPropertyChanging();
					this._idDayStatus = value;
					this.SendPropertyChanged("idDayStatus");
					this.OnidDayStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrikaz", DbType="Int NOT NULL")]
		public int idPrikaz
		{
			get
			{
				return this._idPrikaz;
			}
			set
			{
				if ((this._idPrikaz != value))
				{
					this.OnidPrikazChanging(value);
					this.SendPropertyChanging();
					this._idPrikaz = value;
					this.SendPropertyChanged("idPrikaz");
					this.OnidPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolHourMPS", DbType="Real")]
		public System.Nullable<float> KolHourMPS
		{
			get
			{
				return this._KolHourMPS;
			}
			set
			{
				if ((this._KolHourMPS != value))
				{
					this.OnKolHourMPSChanging(value);
					this.SendPropertyChanging();
					this._KolHourMPS = value;
					this.SendPropertyChanged("KolHourMPS");
					this.OnKolHourMPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolHourMNS", DbType="Real")]
		public System.Nullable<float> KolHourMNS
		{
			get
			{
				return this._KolHourMNS;
			}
			set
			{
				if ((this._KolHourMNS != value))
				{
					this.OnKolHourMNSChanging(value);
					this.SendPropertyChanging();
					this._KolHourMNS = value;
					this.SendPropertyChanged("KolHourMNS");
					this.OnKolHourMNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolHourGPS", DbType="Real")]
		public System.Nullable<float> KolHourGPS
		{
			get
			{
				return this._KolHourGPS;
			}
			set
			{
				if ((this._KolHourGPS != value))
				{
					this.OnKolHourGPSChanging(value);
					this.SendPropertyChanging();
					this._KolHourGPS = value;
					this.SendPropertyChanged("KolHourGPS");
					this.OnKolHourGPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolHourGNS", DbType="Real")]
		public System.Nullable<float> KolHourGNS
		{
			get
			{
				return this._KolHourGNS;
			}
			set
			{
				if ((this._KolHourGNS != value))
				{
					this.OnKolHourGNSChanging(value);
					this.SendPropertyChanging();
					this._KolHourGNS = value;
					this.SendPropertyChanged("KolHourGNS");
					this.OnKolHourGNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idWorkShedule", DbType="Int")]
		public System.Nullable<int> idWorkShedule
		{
			get
			{
				return this._idWorkShedule;
			}
			set
			{
				if ((this._idWorkShedule != value))
				{
					if (this._WorkShedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidWorkSheduleChanging(value);
					this.SendPropertyChanging();
					this._idWorkShedule = value;
					this.SendPropertyChanged("idWorkShedule");
					this.OnidWorkSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkShedule_Exception", Storage="_WorkShedule", ThisKey="idWorkShedule", OtherKey="id", IsForeignKey=true)]
		public WorkShedule WorkShedule
		{
			get
			{
				return this._WorkShedule.Entity;
			}
			set
			{
				WorkShedule previousValue = this._WorkShedule.Entity;
				if (((previousValue != value) 
							|| (this._WorkShedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkShedule.Entity = null;
						previousValue.Exception.Remove(this);
					}
					this._WorkShedule.Entity = value;
					if ((value != null))
					{
						value.Exception.Add(this);
						this._idWorkShedule = value.id;
					}
					else
					{
						this._idWorkShedule = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkShedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_Exception", Storage="_DayStatus", ThisKey="idDayStatus", OtherKey="id", IsForeignKey=true)]
		public DayStatus DayStatus
		{
			get
			{
				return this._DayStatus.Entity;
			}
			set
			{
				DayStatus previousValue = this._DayStatus.Entity;
				if (((previousValue != value) 
							|| (this._DayStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayStatus.Entity = null;
						previousValue.Exception.Remove(this);
					}
					this._DayStatus.Entity = value;
					if ((value != null))
					{
						value.Exception.Add(this);
						this._idDayStatus = value.id;
					}
					else
					{
						this._idDayStatus = default(int);
					}
					this.SendPropertyChanged("DayStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.TimeSheetApproval")]
	public partial class TimeSheetApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idApprover;
		
		private int _idTimeSheet;
		
		private System.DateTime _ApprovalDate;
		
		private bool _Result;
		
		private string _Comment;
		
		private EntityRef<Approver> _Approver;
		
		private EntityRef<TimeSheet> _TimeSheet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidApproverChanging(int value);
    partial void OnidApproverChanged();
    partial void OnidTimeSheetChanging(int value);
    partial void OnidTimeSheetChanged();
    partial void OnApprovalDateChanging(System.DateTime value);
    partial void OnApprovalDateChanged();
    partial void OnResultChanging(bool value);
    partial void OnResultChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public TimeSheetApproval()
		{
			this._Approver = default(EntityRef<Approver>);
			this._TimeSheet = default(EntityRef<TimeSheet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idApprover", DbType="Int NOT NULL")]
		public int idApprover
		{
			get
			{
				return this._idApprover;
			}
			set
			{
				if ((this._idApprover != value))
				{
					if (this._Approver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidApproverChanging(value);
					this.SendPropertyChanging();
					this._idApprover = value;
					this.SendPropertyChanged("idApprover");
					this.OnidApproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTimeSheet", DbType="Int NOT NULL")]
		public int idTimeSheet
		{
			get
			{
				return this._idTimeSheet;
			}
			set
			{
				if ((this._idTimeSheet != value))
				{
					if (this._TimeSheet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTimeSheetChanging(value);
					this.SendPropertyChanging();
					this._idTimeSheet = value;
					this.SendPropertyChanged("idTimeSheet");
					this.OnidTimeSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit NOT NULL")]
		public bool Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Approver_TimeSheetApproval", Storage="_Approver", ThisKey="idApprover", OtherKey="id", IsForeignKey=true)]
		public Approver Approver
		{
			get
			{
				return this._Approver.Entity;
			}
			set
			{
				Approver previousValue = this._Approver.Entity;
				if (((previousValue != value) 
							|| (this._Approver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Approver.Entity = null;
						previousValue.TimeSheetApproval.Remove(this);
					}
					this._Approver.Entity = value;
					if ((value != null))
					{
						value.TimeSheetApproval.Add(this);
						this._idApprover = value.id;
					}
					else
					{
						this._idApprover = default(int);
					}
					this.SendPropertyChanged("Approver");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheet_TimeSheetApproval", Storage="_TimeSheet", ThisKey="idTimeSheet", OtherKey="id", IsForeignKey=true)]
		public TimeSheet TimeSheet
		{
			get
			{
				return this._TimeSheet.Entity;
			}
			set
			{
				TimeSheet previousValue = this._TimeSheet.Entity;
				if (((previousValue != value) 
							|| (this._TimeSheet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeSheet.Entity = null;
						previousValue.TimeSheetApproval.Remove(this);
					}
					this._TimeSheet.Entity = value;
					if ((value != null))
					{
						value.TimeSheetApproval.Add(this);
						this._idTimeSheet = value.id;
					}
					else
					{
						this._idTimeSheet = default(int);
					}
					this.SendPropertyChanged("TimeSheet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.WorkShedule")]
	public partial class WorkShedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NameShedule;
		
		private EntitySet<Exception> _Exception;
		
		private EntitySet<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameSheduleChanging(string value);
    partial void OnNameSheduleChanged();
    #endregion
		
		public WorkShedule()
		{
			this._Exception = new EntitySet<Exception>(new Action<Exception>(this.attach_Exception), new Action<Exception>(this.detach_Exception));
			this._PlanStaff = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaff), new Action<PlanStaff>(this.detach_PlanStaff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameShedule", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameShedule
		{
			get
			{
				return this._NameShedule;
			}
			set
			{
				if ((this._NameShedule != value))
				{
					this.OnNameSheduleChanging(value);
					this.SendPropertyChanging();
					this._NameShedule = value;
					this.SendPropertyChanged("NameShedule");
					this.OnNameSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkShedule_Exception", Storage="_Exception", ThisKey="id", OtherKey="idWorkShedule")]
		public EntitySet<Exception> Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				this._Exception.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkShedule_PlanStaff", Storage="_PlanStaff", ThisKey="id", OtherKey="IdWorkShedule")]
		public EntitySet<PlanStaff> PlanStaff
		{
			get
			{
				return this._PlanStaff;
			}
			set
			{
				this._PlanStaff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Exception(Exception entity)
		{
			this.SendPropertyChanging();
			entity.WorkShedule = this;
		}
		
		private void detach_Exception(Exception entity)
		{
			this.SendPropertyChanging();
			entity.WorkShedule = null;
		}
		
		private void attach_PlanStaff(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.WorkShedule = this;
		}
		
		private void detach_PlanStaff(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.WorkShedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PostName;
		
		private string _PostShortName;
		
		private bool _ManagerBit;
		
		private int _idGlobalPrikaz;
		
		private int _idPKCategory;
		
		private System.Nullable<int> _idCategory;
		
		private System.Guid _PostGUID;
		
		private EntitySet<PlanStaff> _PlanStaff;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostNameChanging(string value);
    partial void OnPostNameChanged();
    partial void OnPostShortNameChanging(string value);
    partial void OnPostShortNameChanged();
    partial void OnManagerBitChanging(bool value);
    partial void OnManagerBitChanged();
    partial void OnidGlobalPrikazChanging(int value);
    partial void OnidGlobalPrikazChanged();
    partial void OnidPKCategoryChanging(int value);
    partial void OnidPKCategoryChanged();
    partial void OnidCategoryChanging(System.Nullable<int> value);
    partial void OnidCategoryChanged();
    partial void OnPostGUIDChanging(System.Guid value);
    partial void OnPostGUIDChanged();
    #endregion
		
		public Post()
		{
			this._PlanStaff = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaff), new Action<PlanStaff>(this.detach_PlanStaff));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostName", DbType="VarChar(150)")]
		public string PostName
		{
			get
			{
				return this._PostName;
			}
			set
			{
				if ((this._PostName != value))
				{
					this.OnPostNameChanging(value);
					this.SendPropertyChanging();
					this._PostName = value;
					this.SendPropertyChanged("PostName");
					this.OnPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostShortName", DbType="VarChar(50)")]
		public string PostShortName
		{
			get
			{
				return this._PostShortName;
			}
			set
			{
				if ((this._PostShortName != value))
				{
					this.OnPostShortNameChanging(value);
					this.SendPropertyChanging();
					this._PostShortName = value;
					this.SendPropertyChanged("PostShortName");
					this.OnPostShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerBit", DbType="Bit NOT NULL")]
		public bool ManagerBit
		{
			get
			{
				return this._ManagerBit;
			}
			set
			{
				if ((this._ManagerBit != value))
				{
					this.OnManagerBitChanging(value);
					this.SendPropertyChanging();
					this._ManagerBit = value;
					this.SendPropertyChanged("ManagerBit");
					this.OnManagerBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGlobalPrikaz", DbType="Int NOT NULL")]
		public int idGlobalPrikaz
		{
			get
			{
				return this._idGlobalPrikaz;
			}
			set
			{
				if ((this._idGlobalPrikaz != value))
				{
					this.OnidGlobalPrikazChanging(value);
					this.SendPropertyChanging();
					this._idGlobalPrikaz = value;
					this.SendPropertyChanged("idGlobalPrikaz");
					this.OnidGlobalPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPKCategory", DbType="Int NOT NULL")]
		public int idPKCategory
		{
			get
			{
				return this._idPKCategory;
			}
			set
			{
				if ((this._idPKCategory != value))
				{
					this.OnidPKCategoryChanging(value);
					this.SendPropertyChanging();
					this._idPKCategory = value;
					this.SendPropertyChanged("idPKCategory");
					this.OnidPKCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategory", DbType="Int")]
		public System.Nullable<int> idCategory
		{
			get
			{
				return this._idCategory;
			}
			set
			{
				if ((this._idCategory != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoryChanging(value);
					this.SendPropertyChanging();
					this._idCategory = value;
					this.SendPropertyChanged("idCategory");
					this.OnidCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PostGUID
		{
			get
			{
				return this._PostGUID;
			}
			set
			{
				if ((this._PostGUID != value))
				{
					this.OnPostGUIDChanging(value);
					this.SendPropertyChanging();
					this._PostGUID = value;
					this.SendPropertyChanged("PostGUID");
					this.OnPostGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PlanStaff", Storage="_PlanStaff", ThisKey="id", OtherKey="idPost")]
		public EntitySet<PlanStaff> PlanStaff
		{
			get
			{
				return this._PlanStaff;
			}
			set
			{
				this._PlanStaff.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Category", ThisKey="idCategory", OtherKey="id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Post.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Post.Add(this);
						this._idCategory = value.id;
					}
					else
					{
						this._idCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlanStaff(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PlanStaff(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dep")]
	public partial class Dep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idDepartmentType;
		
		private System.Nullable<int> _KadrID;
		
		private System.Nullable<System.DateTime> _dateExit;
		
		private System.Nullable<int> _idManagerPlanStaff;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<int> _SeverKoeff;
		
		private System.Nullable<int> _RayonKoeff;
		
		private System.Guid _DepartmentGUID;
		
		private EntitySet<ApperoveDepartment> _ApperoveDepartment;
		
		private EntitySet<Approver> _Approver;
		
		private EntitySet<TimeSheet> _TimeSheet;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentTypeChanging(System.Nullable<int> value);
    partial void OnidDepartmentTypeChanged();
    partial void OnKadrIDChanging(System.Nullable<int> value);
    partial void OnKadrIDChanged();
    partial void OndateExitChanging(System.Nullable<System.DateTime> value);
    partial void OndateExitChanged();
    partial void OnidManagerPlanStaffChanging(System.Nullable<int> value);
    partial void OnidManagerPlanStaffChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnSeverKoeffChanging(System.Nullable<int> value);
    partial void OnSeverKoeffChanged();
    partial void OnRayonKoeffChanging(System.Nullable<int> value);
    partial void OnRayonKoeffChanged();
    partial void OnDepartmentGUIDChanging(System.Guid value);
    partial void OnDepartmentGUIDChanged();
    #endregion
		
		public Dep()
		{
			this._ApperoveDepartment = new EntitySet<ApperoveDepartment>(new Action<ApperoveDepartment>(this.attach_ApperoveDepartment), new Action<ApperoveDepartment>(this.detach_ApperoveDepartment));
			this._Approver = new EntitySet<Approver>(new Action<Approver>(this.attach_Approver), new Action<Approver>(this.detach_Approver));
			this._TimeSheet = new EntitySet<TimeSheet>(new Action<TimeSheet>(this.attach_TimeSheet), new Action<TimeSheet>(this.detach_TimeSheet));
			this._Department = default(EntityRef<Department>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartmentType", DbType="Int")]
		public System.Nullable<int> idDepartmentType
		{
			get
			{
				return this._idDepartmentType;
			}
			set
			{
				if ((this._idDepartmentType != value))
				{
					this.OnidDepartmentTypeChanging(value);
					this.SendPropertyChanging();
					this._idDepartmentType = value;
					this.SendPropertyChanged("idDepartmentType");
					this.OnidDepartmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this.OnKadrIDChanging(value);
					this.SendPropertyChanging();
					this._KadrID = value;
					this.SendPropertyChanged("KadrID");
					this.OnKadrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateExit
		{
			get
			{
				return this._dateExit;
			}
			set
			{
				if ((this._dateExit != value))
				{
					this.OndateExitChanging(value);
					this.SendPropertyChanging();
					this._dateExit = value;
					this.SendPropertyChanged("dateExit");
					this.OndateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerPlanStaff", DbType="Int")]
		public System.Nullable<int> idManagerPlanStaff
		{
			get
			{
				return this._idManagerPlanStaff;
			}
			set
			{
				if ((this._idManagerPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidManagerPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idManagerPlanStaff = value;
					this.SendPropertyChanged("idManagerPlanStaff");
					this.OnidManagerPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int")]
		public System.Nullable<int> SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this.OnSeverKoeffChanging(value);
					this.SendPropertyChanging();
					this._SeverKoeff = value;
					this.SendPropertyChanged("SeverKoeff");
					this.OnSeverKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int")]
		public System.Nullable<int> RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this.OnRayonKoeffChanging(value);
					this.SendPropertyChanging();
					this._RayonKoeff = value;
					this.SendPropertyChanged("RayonKoeff");
					this.OnRayonKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentGUID
		{
			get
			{
				return this._DepartmentGUID;
			}
			set
			{
				if ((this._DepartmentGUID != value))
				{
					this.OnDepartmentGUIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentGUID = value;
					this.SendPropertyChanged("DepartmentGUID");
					this.OnDepartmentGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_ApperoveDepartment", Storage="_ApperoveDepartment", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<ApperoveDepartment> ApperoveDepartment
		{
			get
			{
				return this._ApperoveDepartment;
			}
			set
			{
				this._ApperoveDepartment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_Approver", Storage="_Approver", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<Approver> Approver
		{
			get
			{
				return this._Approver;
			}
			set
			{
				this._Approver.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_TimeSheet", Storage="_TimeSheet", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<TimeSheet> TimeSheet
		{
			get
			{
				return this._TimeSheet;
			}
			set
			{
				this._TimeSheet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dep", Storage="_Department", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Dep.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Dep.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_Dep", Storage="_PlanStaff", ThisKey="idManagerPlanStaff", OtherKey="id", IsForeignKey=true)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.Dep.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.Dep.Add(this);
						this._idManagerPlanStaff = value.id;
					}
					else
					{
						this._idManagerPlanStaff = default(Nullable<int>);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApperoveDepartment(ApperoveDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_ApperoveDepartment(ApperoveDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
		
		private void attach_Approver(Approver entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_Approver(Approver entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
		
		private void attach_TimeSheet(TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_TimeSheet(TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.ApperoveDepartment")]
	public partial class ApperoveDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idApprover;
		
		private int _idDepartment;
		
		private EntityRef<Dep> _Dep;
		
		private EntityRef<Approver> _Approver;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidApproverChanging(int value);
    partial void OnidApproverChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    #endregion
		
		public ApperoveDepartment()
		{
			this._Dep = default(EntityRef<Dep>);
			this._Approver = default(EntityRef<Approver>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idApprover", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idApprover
		{
			get
			{
				return this._idApprover;
			}
			set
			{
				if ((this._idApprover != value))
				{
					if (this._Approver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidApproverChanging(value);
					this.SendPropertyChanging();
					this._idApprover = value;
					this.SendPropertyChanged("idApprover");
					this.OnidApproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_ApperoveDepartment", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.ApperoveDepartment.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.ApperoveDepartment.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Approver_ApperoveDepartment", Storage="_Approver", ThisKey="idApprover", OtherKey="id", IsForeignKey=true)]
		public Approver Approver
		{
			get
			{
				return this._Approver.Entity;
			}
			set
			{
				Approver previousValue = this._Approver.Entity;
				if (((previousValue != value) 
							|| (this._Approver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Approver.Entity = null;
						previousValue.ApperoveDepartment.Remove(this);
					}
					this._Approver.Entity = value;
					if ((value != null))
					{
						value.ApperoveDepartment.Add(this);
						this._idApprover = value.id;
					}
					else
					{
						this._idApprover = default(int);
					}
					this.SendPropertyChanged("Approver");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.Approver")]
	public partial class Approver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _idApproverType;
		
		private int _idDepartment;
		
		private System.Nullable<int> _idEmployee;
		
		private EntitySet<TimeSheetApproval> _TimeSheetApproval;
		
		private EntitySet<ApperoveDepartment> _ApperoveDepartment;
		
		private EntitySet<TimeSheet> _TimeSheet;
		
		private EntityRef<ApproverType> _ApproverType;
		
		private EntityRef<Dep> _Dep;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnidApproverTypeChanging(int value);
    partial void OnidApproverTypeChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnidEmployeeChanging(System.Nullable<int> value);
    partial void OnidEmployeeChanged();
    #endregion
		
		public Approver()
		{
			this._TimeSheetApproval = new EntitySet<TimeSheetApproval>(new Action<TimeSheetApproval>(this.attach_TimeSheetApproval), new Action<TimeSheetApproval>(this.detach_TimeSheetApproval));
			this._ApperoveDepartment = new EntitySet<ApperoveDepartment>(new Action<ApperoveDepartment>(this.attach_ApperoveDepartment), new Action<ApperoveDepartment>(this.detach_ApperoveDepartment));
			this._TimeSheet = new EntitySet<TimeSheet>(new Action<TimeSheet>(this.attach_TimeSheet), new Action<TimeSheet>(this.detach_TimeSheet));
			this._ApproverType = default(EntityRef<ApproverType>);
			this._Dep = default(EntityRef<Dep>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idApproverType", DbType="Int NOT NULL")]
		public int idApproverType
		{
			get
			{
				return this._idApproverType;
			}
			set
			{
				if ((this._idApproverType != value))
				{
					if (this._ApproverType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidApproverTypeChanging(value);
					this.SendPropertyChanging();
					this._idApproverType = value;
					this.SendPropertyChanged("idApproverType");
					this.OnidApproverTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int")]
		public System.Nullable<int> idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Approver_TimeSheetApproval", Storage="_TimeSheetApproval", ThisKey="id", OtherKey="idApprover")]
		public EntitySet<TimeSheetApproval> TimeSheetApproval
		{
			get
			{
				return this._TimeSheetApproval;
			}
			set
			{
				this._TimeSheetApproval.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Approver_ApperoveDepartment", Storage="_ApperoveDepartment", ThisKey="id", OtherKey="idApprover")]
		public EntitySet<ApperoveDepartment> ApperoveDepartment
		{
			get
			{
				return this._ApperoveDepartment;
			}
			set
			{
				this._ApperoveDepartment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Approver_TimeSheet", Storage="_TimeSheet", ThisKey="id", OtherKey="idCreater")]
		public EntitySet<TimeSheet> TimeSheet
		{
			get
			{
				return this._TimeSheet;
			}
			set
			{
				this._TimeSheet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApproverType_Approver", Storage="_ApproverType", ThisKey="idApproverType", OtherKey="id", IsForeignKey=true)]
		public ApproverType ApproverType
		{
			get
			{
				return this._ApproverType.Entity;
			}
			set
			{
				ApproverType previousValue = this._ApproverType.Entity;
				if (((previousValue != value) 
							|| (this._ApproverType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApproverType.Entity = null;
						previousValue.Approver.Remove(this);
					}
					this._ApproverType.Entity = value;
					if ((value != null))
					{
						value.Approver.Add(this);
						this._idApproverType = value.id;
					}
					else
					{
						this._idApproverType = default(int);
					}
					this.SendPropertyChanged("ApproverType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_Approver", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.Approver.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.Approver.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Approver", Storage="_Employee", ThisKey="idEmployee", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Approver.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Approver.Add(this);
						this._idEmployee = value.id;
					}
					else
					{
						this._idEmployee = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeSheetApproval(TimeSheetApproval entity)
		{
			this.SendPropertyChanging();
			entity.Approver = this;
		}
		
		private void detach_TimeSheetApproval(TimeSheetApproval entity)
		{
			this.SendPropertyChanging();
			entity.Approver = null;
		}
		
		private void attach_ApperoveDepartment(ApperoveDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Approver = this;
		}
		
		private void detach_ApperoveDepartment(ApperoveDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Approver = null;
		}
		
		private void attach_TimeSheet(TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.Approver = this;
		}
		
		private void detach_TimeSheet(TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.Approver = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CategoryName;
		
		private string _CategorySmallName;
		
		private System.Nullable<int> _OrderBy;
		
		private System.Nullable<bool> _IsPPS;
		
		private EntitySet<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategorySmallNameChanging(string value);
    partial void OnCategorySmallNameChanged();
    partial void OnOrderByChanging(System.Nullable<int> value);
    partial void OnOrderByChanged();
    partial void OnIsPPSChanging(System.Nullable<bool> value);
    partial void OnIsPPSChanged();
    #endregion
		
		public Category()
		{
			this._Post = new EntitySet<Post>(new Action<Post>(this.attach_Post), new Action<Post>(this.detach_Post));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategorySmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategorySmallName
		{
			get
			{
				return this._CategorySmallName;
			}
			set
			{
				if ((this._CategorySmallName != value))
				{
					this.OnCategorySmallNameChanging(value);
					this.SendPropertyChanging();
					this._CategorySmallName = value;
					this.SendPropertyChanged("CategorySmallName");
					this.OnCategorySmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderBy", DbType="Int")]
		public System.Nullable<int> OrderBy
		{
			get
			{
				return this._OrderBy;
			}
			set
			{
				if ((this._OrderBy != value))
				{
					this.OnOrderByChanging(value);
					this.SendPropertyChanging();
					this._OrderBy = value;
					this.SendPropertyChanged("OrderBy");
					this.OnOrderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPPS", DbType="Bit")]
		public System.Nullable<bool> IsPPS
		{
			get
			{
				return this._IsPPS;
			}
			set
			{
				if ((this._IsPPS != value))
				{
					this.OnIsPPSChanging(value);
					this.SendPropertyChanging();
					this._IsPPS = value;
					this.SendPropertyChanged("IsPPS");
					this.OnIsPPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Post", ThisKey="id", OtherKey="idCategory")]
		public EntitySet<Post> Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				this._Post.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Post(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Post(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffCurrent")]
	public partial class FactStaffCurrent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private decimal _StaffCount;
		
		private int _idPlanStaff;
		
		private int _idEmployee;
		
		private int _idBeginPrikaz;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private int _idTypeWork;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private bool _IsReplacement;
		
		private int _idFactStaffHistory;
		
		private System.Nullable<System.DateTime> _DateEndR;
		
		private System.DateTime _DateBeginR;
		
		private System.Nullable<int> _idLaborContaraktMain;
		
		private System.Nullable<int> _idLaborContraktHistory;
		
		private EntitySet<OK_Otpusk> _OK_Otpusk;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffCountChanging(decimal value);
    partial void OnStaffCountChanged();
    partial void OnidPlanStaffChanging(int value);
    partial void OnidPlanStaffChanged();
    partial void OnidEmployeeChanging(int value);
    partial void OnidEmployeeChanged();
    partial void OnidBeginPrikazChanging(int value);
    partial void OnidBeginPrikazChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnidTypeWorkChanging(int value);
    partial void OnidTypeWorkChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIsReplacementChanging(bool value);
    partial void OnIsReplacementChanged();
    partial void OnidFactStaffHistoryChanging(int value);
    partial void OnidFactStaffHistoryChanged();
    partial void OnDateEndRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndRChanged();
    partial void OnDateBeginRChanging(System.DateTime value);
    partial void OnDateBeginRChanged();
    partial void OnidLaborContaraktMainChanging(System.Nullable<int> value);
    partial void OnidLaborContaraktMainChanged();
    partial void OnidLaborContraktHistoryChanging(System.Nullable<int> value);
    partial void OnidLaborContraktHistoryChanged();
    #endregion
		
		public FactStaffCurrent()
		{
			this._OK_Otpusk = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusk), new Action<OK_Otpusk>(this.detach_OK_Otpusk));
			this._FactStaff = default(EntityRef<FactStaff>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(4,2) NOT NULL")]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this.OnStaffCountChanging(value);
					this.SendPropertyChanging();
					this._StaffCount = value;
					this.SendPropertyChanged("StaffCount");
					this.OnStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int NOT NULL")]
		public int idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int NOT NULL")]
		public int idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeWork", DbType="Int NOT NULL")]
		public int idTypeWork
		{
			get
			{
				return this._idTypeWork;
			}
			set
			{
				if ((this._idTypeWork != value))
				{
					this.OnidTypeWorkChanging(value);
					this.SendPropertyChanging();
					this._idTypeWork = value;
					this.SendPropertyChanged("idTypeWork");
					this.OnidTypeWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="Date")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit NOT NULL")]
		public bool IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this.OnIsReplacementChanging(value);
					this.SendPropertyChanging();
					this._IsReplacement = value;
					this.SendPropertyChanged("IsReplacement");
					this.OnIsReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaffHistory", DbType="Int NOT NULL")]
		public int idFactStaffHistory
		{
			get
			{
				return this._idFactStaffHistory;
			}
			set
			{
				if ((this._idFactStaffHistory != value))
				{
					this.OnidFactStaffHistoryChanging(value);
					this.SendPropertyChanging();
					this._idFactStaffHistory = value;
					this.SendPropertyChanged("idFactStaffHistory");
					this.OnidFactStaffHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEndR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEndR
		{
			get
			{
				return this._DateEndR;
			}
			set
			{
				if ((this._DateEndR != value))
				{
					this.OnDateEndRChanging(value);
					this.SendPropertyChanging();
					this._DateEndR = value;
					this.SendPropertyChanged("DateEndR");
					this.OnDateEndRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBeginR", DbType="DateTime NOT NULL")]
		public System.DateTime DateBeginR
		{
			get
			{
				return this._DateBeginR;
			}
			set
			{
				if ((this._DateBeginR != value))
				{
					this.OnDateBeginRChanging(value);
					this.SendPropertyChanging();
					this._DateBeginR = value;
					this.SendPropertyChanged("DateBeginR");
					this.OnDateBeginRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLaborContaraktMain", DbType="Int")]
		public System.Nullable<int> idLaborContaraktMain
		{
			get
			{
				return this._idLaborContaraktMain;
			}
			set
			{
				if ((this._idLaborContaraktMain != value))
				{
					this.OnidLaborContaraktMainChanging(value);
					this.SendPropertyChanging();
					this._idLaborContaraktMain = value;
					this.SendPropertyChanged("idLaborContaraktMain");
					this.OnidLaborContaraktMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLaborContraktHistory", DbType="Int")]
		public System.Nullable<int> idLaborContraktHistory
		{
			get
			{
				return this._idLaborContraktHistory;
			}
			set
			{
				if ((this._idLaborContraktHistory != value))
				{
					this.OnidLaborContraktHistoryChanging(value);
					this.SendPropertyChanging();
					this._idLaborContraktHistory = value;
					this.SendPropertyChanged("idLaborContraktHistory");
					this.OnidLaborContraktHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffCurrent_OK_Otpusk", Storage="_OK_Otpusk", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<OK_Otpusk> OK_Otpusk
		{
			get
			{
				return this._OK_Otpusk;
			}
			set
			{
				this._OK_Otpusk.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffCurrent_FactStaff", Storage="_FactStaff", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffCurrent = null;
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffCurrent = this;
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffCurrent_PlanStaff", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.FactStaffCurrent = null;
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffCurrent = this;
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffCurrent = this;
		}
		
		private void detach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffCurrent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OK_Otpuskvid")]
	public partial class OK_Otpuskvid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idotpuskvid;
		
		private string _otpuskvidname;
		
		private System.Nullable<int> _idDayStatus;
		
		private EntitySet<OK_Otpusk> _OK_Otpusk;
		
		private EntityRef<DayStatus> _DayStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidotpuskvidChanging(int value);
    partial void OnidotpuskvidChanged();
    partial void OnotpuskvidnameChanging(string value);
    partial void OnotpuskvidnameChanged();
    partial void OnidDayStatusChanging(System.Nullable<int> value);
    partial void OnidDayStatusChanged();
    #endregion
		
		public OK_Otpuskvid()
		{
			this._OK_Otpusk = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusk), new Action<OK_Otpusk>(this.detach_OK_Otpusk));
			this._DayStatus = default(EntityRef<DayStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idotpuskvid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idotpuskvid
		{
			get
			{
				return this._idotpuskvid;
			}
			set
			{
				if ((this._idotpuskvid != value))
				{
					this.OnidotpuskvidChanging(value);
					this.SendPropertyChanging();
					this._idotpuskvid = value;
					this.SendPropertyChanged("idotpuskvid");
					this.OnidotpuskvidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otpuskvidname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string otpuskvidname
		{
			get
			{
				return this._otpuskvidname;
			}
			set
			{
				if ((this._otpuskvidname != value))
				{
					this.OnotpuskvidnameChanging(value);
					this.SendPropertyChanging();
					this._otpuskvidname = value;
					this.SendPropertyChanged("otpuskvidname");
					this.OnotpuskvidnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDayStatus", DbType="Int")]
		public System.Nullable<int> idDayStatus
		{
			get
			{
				return this._idDayStatus;
			}
			set
			{
				if ((this._idDayStatus != value))
				{
					if (this._DayStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDayStatusChanging(value);
					this.SendPropertyChanging();
					this._idDayStatus = value;
					this.SendPropertyChanged("idDayStatus");
					this.OnidDayStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OK_Otpuskvid_OK_Otpusk", Storage="_OK_Otpusk", ThisKey="idotpuskvid", OtherKey="idOtpuskVid")]
		public EntitySet<OK_Otpusk> OK_Otpusk
		{
			get
			{
				return this._OK_Otpusk;
			}
			set
			{
				this._OK_Otpusk.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_OK_Otpuskvid", Storage="_DayStatus", ThisKey="idDayStatus", OtherKey="id", IsForeignKey=true)]
		public DayStatus DayStatus
		{
			get
			{
				return this._DayStatus.Entity;
			}
			set
			{
				DayStatus previousValue = this._DayStatus.Entity;
				if (((previousValue != value) 
							|| (this._DayStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayStatus.Entity = null;
						previousValue.OK_Otpuskvid.Remove(this);
					}
					this._DayStatus.Entity = value;
					if ((value != null))
					{
						value.OK_Otpuskvid.Add(this);
						this._idDayStatus = value.id;
					}
					else
					{
						this._idDayStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("DayStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.OK_Otpuskvid = this;
		}
		
		private void detach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.OK_Otpuskvid = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OK_Otpusk")]
	public partial class OK_Otpusk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idOtpusk;
		
		private int _idFactStaff;
		
		private int _idOtpuskVid;
		
		private int _idOtpuskPrikaz;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<int> _CountDay;
		
		private EntityRef<OK_Otpuskvid> _OK_Otpuskvid;
		
		private EntityRef<FactStaffCurrent> _FactStaffCurrent;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<FactStaffWithHistory> _FactStaffWithHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidOtpuskChanging(int value);
    partial void OnidOtpuskChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnidOtpuskVidChanging(int value);
    partial void OnidOtpuskVidChanged();
    partial void OnidOtpuskPrikazChanging(int value);
    partial void OnidOtpuskPrikazChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnCountDayChanging(System.Nullable<int> value);
    partial void OnCountDayChanged();
    #endregion
		
		public OK_Otpusk()
		{
			this._OK_Otpuskvid = default(EntityRef<OK_Otpuskvid>);
			this._FactStaffCurrent = default(EntityRef<FactStaffCurrent>);
			this._FactStaff = default(EntityRef<FactStaff>);
			this._FactStaffWithHistory = default(EntityRef<FactStaffWithHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOtpusk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idOtpusk
		{
			get
			{
				return this._idOtpusk;
			}
			set
			{
				if ((this._idOtpusk != value))
				{
					this.OnidOtpuskChanging(value);
					this.SendPropertyChanging();
					this._idOtpusk = value;
					this.SendPropertyChanged("idOtpusk");
					this.OnidOtpuskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (((this._FactStaffCurrent.HasLoadedOrAssignedValue || this._FactStaff.HasLoadedOrAssignedValue) 
								|| this._FactStaffWithHistory.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOtpuskVid", DbType="Int NOT NULL")]
		public int idOtpuskVid
		{
			get
			{
				return this._idOtpuskVid;
			}
			set
			{
				if ((this._idOtpuskVid != value))
				{
					if (this._OK_Otpuskvid.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOtpuskVidChanging(value);
					this.SendPropertyChanging();
					this._idOtpuskVid = value;
					this.SendPropertyChanged("idOtpuskVid");
					this.OnidOtpuskVidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOtpuskPrikaz", DbType="Int NOT NULL")]
		public int idOtpuskPrikaz
		{
			get
			{
				return this._idOtpuskPrikaz;
			}
			set
			{
				if ((this._idOtpuskPrikaz != value))
				{
					this.OnidOtpuskPrikazChanging(value);
					this.SendPropertyChanging();
					this._idOtpuskPrikaz = value;
					this.SendPropertyChanged("idOtpuskPrikaz");
					this.OnidOtpuskPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountDay", DbType="Int")]
		public System.Nullable<int> CountDay
		{
			get
			{
				return this._CountDay;
			}
			set
			{
				if ((this._CountDay != value))
				{
					this.OnCountDayChanging(value);
					this.SendPropertyChanging();
					this._CountDay = value;
					this.SendPropertyChanged("CountDay");
					this.OnCountDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OK_Otpuskvid_OK_Otpusk", Storage="_OK_Otpuskvid", ThisKey="idOtpuskVid", OtherKey="idotpuskvid", IsForeignKey=true)]
		public OK_Otpuskvid OK_Otpuskvid
		{
			get
			{
				return this._OK_Otpuskvid.Entity;
			}
			set
			{
				OK_Otpuskvid previousValue = this._OK_Otpuskvid.Entity;
				if (((previousValue != value) 
							|| (this._OK_Otpuskvid.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OK_Otpuskvid.Entity = null;
						previousValue.OK_Otpusk.Remove(this);
					}
					this._OK_Otpuskvid.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusk.Add(this);
						this._idOtpuskVid = value.idotpuskvid;
					}
					else
					{
						this._idOtpuskVid = default(int);
					}
					this.SendPropertyChanged("OK_Otpuskvid");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffCurrent_OK_Otpusk", Storage="_FactStaffCurrent", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaffCurrent FactStaffCurrent
		{
			get
			{
				return this._FactStaffCurrent.Entity;
			}
			set
			{
				FactStaffCurrent previousValue = this._FactStaffCurrent.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffCurrent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffCurrent.Entity = null;
						previousValue.OK_Otpusk.Remove(this);
					}
					this._FactStaffCurrent.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusk.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaffCurrent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_OK_Otpusk", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.OK_Otpusk.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusk.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_OK_Otpusk", Storage="_FactStaffWithHistory", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaffWithHistory FactStaffWithHistory
		{
			get
			{
				return this._FactStaffWithHistory.Entity;
			}
			set
			{
				FactStaffWithHistory previousValue = this._FactStaffWithHistory.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffWithHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffWithHistory.Entity = null;
						previousValue.OK_Otpusk.Remove(this);
					}
					this._FactStaffWithHistory.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusk.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaffWithHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _itab_n;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Otch;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BirthPlace;
		
		private bool _SexBit;
		
		private System.Nullable<int> _idGrazd;
		
		private System.Nullable<int> _idSemPol;
		
		private int _SeverKoeff;
		
		private int _RayonKoeff;
		
		private System.Guid _GUID;
		
		private System.Data.Linq.Binary _EmployeeSid;
		
		private string _EmployeeLogin;
		
		private bool _AllowBirthdate;
		
		private string _paspser;
		
		private string _paspnomer;
		
		private System.Nullable<System.DateTime> _paspdate;
		
		private string _paspkem;
		
		private string _inn;
		
		private string _ssgps;
		
		private string _medpolis;
		
		private EntitySet<Approver> _Approver;
		
		private EntitySet<FactStaff> _FactStaff;
		
		private EntityRef<FactStaffWithHistory> _FactStaffWithHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onitab_nChanging(string value);
    partial void Onitab_nChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnOtchChanging(string value);
    partial void OnOtchChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnSexBitChanging(bool value);
    partial void OnSexBitChanged();
    partial void OnidGrazdChanging(System.Nullable<int> value);
    partial void OnidGrazdChanged();
    partial void OnidSemPolChanging(System.Nullable<int> value);
    partial void OnidSemPolChanged();
    partial void OnSeverKoeffChanging(int value);
    partial void OnSeverKoeffChanged();
    partial void OnRayonKoeffChanging(int value);
    partial void OnRayonKoeffChanged();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnEmployeeSidChanging(System.Data.Linq.Binary value);
    partial void OnEmployeeSidChanged();
    partial void OnEmployeeLoginChanging(string value);
    partial void OnEmployeeLoginChanged();
    partial void OnAllowBirthdateChanging(bool value);
    partial void OnAllowBirthdateChanged();
    partial void OnpaspserChanging(string value);
    partial void OnpaspserChanged();
    partial void OnpaspnomerChanging(string value);
    partial void OnpaspnomerChanged();
    partial void OnpaspdateChanging(System.Nullable<System.DateTime> value);
    partial void OnpaspdateChanged();
    partial void OnpaspkemChanging(string value);
    partial void OnpaspkemChanged();
    partial void OninnChanging(string value);
    partial void OninnChanged();
    partial void OnssgpsChanging(string value);
    partial void OnssgpsChanged();
    partial void OnmedpolisChanging(string value);
    partial void OnmedpolisChanged();
    #endregion
		
		public Employee()
		{
			this._Approver = new EntitySet<Approver>(new Action<Approver>(this.attach_Approver), new Action<Approver>(this.detach_Approver));
			this._FactStaff = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaff), new Action<FactStaff>(this.detach_FactStaff));
			this._FactStaffWithHistory = default(EntityRef<FactStaffWithHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._FactStaffWithHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="VarChar(50)")]
		public string itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this.Onitab_nChanging(value);
					this.SendPropertyChanging();
					this._itab_n = value;
					this.SendPropertyChanged("itab_n");
					this.Onitab_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otch", DbType="VarChar(50)")]
		public string Otch
		{
			get
			{
				return this._Otch;
			}
			set
			{
				if ((this._Otch != value))
				{
					this.OnOtchChanging(value);
					this.SendPropertyChanging();
					this._Otch = value;
					this.SendPropertyChanged("Otch");
					this.OnOtchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(200)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexBit", DbType="Bit NOT NULL")]
		public bool SexBit
		{
			get
			{
				return this._SexBit;
			}
			set
			{
				if ((this._SexBit != value))
				{
					this.OnSexBitChanging(value);
					this.SendPropertyChanging();
					this._SexBit = value;
					this.SendPropertyChanged("SexBit");
					this.OnSexBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrazd", DbType="Int")]
		public System.Nullable<int> idGrazd
		{
			get
			{
				return this._idGrazd;
			}
			set
			{
				if ((this._idGrazd != value))
				{
					this.OnidGrazdChanging(value);
					this.SendPropertyChanging();
					this._idGrazd = value;
					this.SendPropertyChanged("idGrazd");
					this.OnidGrazdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSemPol", DbType="Int")]
		public System.Nullable<int> idSemPol
		{
			get
			{
				return this._idSemPol;
			}
			set
			{
				if ((this._idSemPol != value))
				{
					this.OnidSemPolChanging(value);
					this.SendPropertyChanging();
					this._idSemPol = value;
					this.SendPropertyChanged("idSemPol");
					this.OnidSemPolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int NOT NULL")]
		public int SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this.OnSeverKoeffChanging(value);
					this.SendPropertyChanging();
					this._SeverKoeff = value;
					this.SendPropertyChanged("SeverKoeff");
					this.OnSeverKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int NOT NULL")]
		public int RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this.OnRayonKoeffChanging(value);
					this.SendPropertyChanging();
					this._RayonKoeff = value;
					this.SendPropertyChanged("RayonKoeff");
					this.OnRayonKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeSid", DbType="VarBinary(85)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EmployeeSid
		{
			get
			{
				return this._EmployeeSid;
			}
			set
			{
				if ((this._EmployeeSid != value))
				{
					this.OnEmployeeSidChanging(value);
					this.SendPropertyChanging();
					this._EmployeeSid = value;
					this.SendPropertyChanged("EmployeeSid");
					this.OnEmployeeSidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLogin", DbType="NVarChar(128)")]
		public string EmployeeLogin
		{
			get
			{
				return this._EmployeeLogin;
			}
			set
			{
				if ((this._EmployeeLogin != value))
				{
					this.OnEmployeeLoginChanging(value);
					this.SendPropertyChanging();
					this._EmployeeLogin = value;
					this.SendPropertyChanged("EmployeeLogin");
					this.OnEmployeeLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBirthdate", DbType="Bit NOT NULL")]
		public bool AllowBirthdate
		{
			get
			{
				return this._AllowBirthdate;
			}
			set
			{
				if ((this._AllowBirthdate != value))
				{
					this.OnAllowBirthdateChanging(value);
					this.SendPropertyChanging();
					this._AllowBirthdate = value;
					this.SendPropertyChanged("AllowBirthdate");
					this.OnAllowBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspser", DbType="VarChar(255)")]
		public string paspser
		{
			get
			{
				return this._paspser;
			}
			set
			{
				if ((this._paspser != value))
				{
					this.OnpaspserChanging(value);
					this.SendPropertyChanging();
					this._paspser = value;
					this.SendPropertyChanged("paspser");
					this.OnpaspserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspnomer", DbType="VarChar(255)")]
		public string paspnomer
		{
			get
			{
				return this._paspnomer;
			}
			set
			{
				if ((this._paspnomer != value))
				{
					this.OnpaspnomerChanging(value);
					this.SendPropertyChanging();
					this._paspnomer = value;
					this.SendPropertyChanged("paspnomer");
					this.OnpaspnomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> paspdate
		{
			get
			{
				return this._paspdate;
			}
			set
			{
				if ((this._paspdate != value))
				{
					this.OnpaspdateChanging(value);
					this.SendPropertyChanging();
					this._paspdate = value;
					this.SendPropertyChanged("paspdate");
					this.OnpaspdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspkem", DbType="VarChar(255)")]
		public string paspkem
		{
			get
			{
				return this._paspkem;
			}
			set
			{
				if ((this._paspkem != value))
				{
					this.OnpaspkemChanging(value);
					this.SendPropertyChanging();
					this._paspkem = value;
					this.SendPropertyChanged("paspkem");
					this.OnpaspkemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inn", DbType="VarChar(255)")]
		public string inn
		{
			get
			{
				return this._inn;
			}
			set
			{
				if ((this._inn != value))
				{
					this.OninnChanging(value);
					this.SendPropertyChanging();
					this._inn = value;
					this.SendPropertyChanged("inn");
					this.OninnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ssgps", DbType="VarChar(255)")]
		public string ssgps
		{
			get
			{
				return this._ssgps;
			}
			set
			{
				if ((this._ssgps != value))
				{
					this.OnssgpsChanging(value);
					this.SendPropertyChanging();
					this._ssgps = value;
					this.SendPropertyChanged("ssgps");
					this.OnssgpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medpolis", DbType="VarChar(50)")]
		public string medpolis
		{
			get
			{
				return this._medpolis;
			}
			set
			{
				if ((this._medpolis != value))
				{
					this.OnmedpolisChanging(value);
					this.SendPropertyChanging();
					this._medpolis = value;
					this.SendPropertyChanged("medpolis");
					this.OnmedpolisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Approver", Storage="_Approver", ThisKey="id", OtherKey="idEmployee")]
		public EntitySet<Approver> Approver
		{
			get
			{
				return this._Approver;
			}
			set
			{
				this._Approver.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FactStaff", Storage="_FactStaff", ThisKey="id", OtherKey="idEmployee")]
		public EntitySet<FactStaff> FactStaff
		{
			get
			{
				return this._FactStaff;
			}
			set
			{
				this._FactStaff.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_Employee", Storage="_FactStaffWithHistory", ThisKey="id", OtherKey="idEmployee", IsForeignKey=true)]
		public FactStaffWithHistory FactStaffWithHistory
		{
			get
			{
				return this._FactStaffWithHistory.Entity;
			}
			set
			{
				FactStaffWithHistory previousValue = this._FactStaffWithHistory.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffWithHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffWithHistory.Entity = null;
						previousValue.Employee = null;
					}
					this._FactStaffWithHistory.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
						this._id = value.idEmployee;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("FactStaffWithHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Approver(Approver entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Approver(Approver entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_FactStaff(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_FactStaff(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaff")]
	public partial class FactStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idPlanStaff;
		
		private int _idEmployee;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private bool _IsReplacement;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _IDShedule;
		
		private System.Nullable<int> _idlaborcontrakt;
		
		private System.Nullable<int> _idreason;
		
		private System.Nullable<int> _idFundingDepartment;
		
		private System.Nullable<int> _idTimeSheetSheduleType;
		
		private EntitySet<EmployeeEvent> _EmployeeEvent;
		
		private EntitySet<OK_Otpusk> _OK_Otpusk;
		
		private EntitySet<FactStaffHistory> _FactStaffHistory;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
		private EntityRef<FactStaffCurrent> _FactStaffCurrent;
		
		private EntityRef<FactStaffWithHistory> _FactStaffWithHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPlanStaffChanging(int value);
    partial void OnidPlanStaffChanged();
    partial void OnidEmployeeChanging(int value);
    partial void OnidEmployeeChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIsReplacementChanging(bool value);
    partial void OnIsReplacementChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnIDSheduleChanging(System.Nullable<int> value);
    partial void OnIDSheduleChanged();
    partial void OnidlaborcontraktChanging(System.Nullable<int> value);
    partial void OnidlaborcontraktChanged();
    partial void OnidreasonChanging(System.Nullable<int> value);
    partial void OnidreasonChanged();
    partial void OnidFundingDepartmentChanging(System.Nullable<int> value);
    partial void OnidFundingDepartmentChanged();
    partial void OnidTimeSheetSheduleTypeChanging(System.Nullable<int> value);
    partial void OnidTimeSheetSheduleTypeChanged();
    #endregion
		
		public FactStaff()
		{
			this._EmployeeEvent = new EntitySet<EmployeeEvent>(new Action<EmployeeEvent>(this.attach_EmployeeEvent), new Action<EmployeeEvent>(this.detach_EmployeeEvent));
			this._OK_Otpusk = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusk), new Action<OK_Otpusk>(this.detach_OK_Otpusk));
			this._FactStaffHistory = new EntitySet<FactStaffHistory>(new Action<FactStaffHistory>(this.attach_FactStaffHistory), new Action<FactStaffHistory>(this.detach_FactStaffHistory));
			this._Employee = default(EntityRef<Employee>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			this._FactStaffCurrent = default(EntityRef<FactStaffCurrent>);
			this._FactStaffWithHistory = default(EntityRef<FactStaffWithHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((this._FactStaffCurrent.HasLoadedOrAssignedValue || this._FactStaffWithHistory.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int NOT NULL")]
		public int idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int NOT NULL")]
		public int idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit NOT NULL")]
		public bool IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this.OnIsReplacementChanging(value);
					this.SendPropertyChanging();
					this._IsReplacement = value;
					this.SendPropertyChanged("IsReplacement");
					this.OnIsReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDShedule", DbType="Int")]
		public System.Nullable<int> IDShedule
		{
			get
			{
				return this._IDShedule;
			}
			set
			{
				if ((this._IDShedule != value))
				{
					this.OnIDSheduleChanging(value);
					this.SendPropertyChanging();
					this._IDShedule = value;
					this.SendPropertyChanged("IDShedule");
					this.OnIDSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlaborcontrakt", DbType="Int")]
		public System.Nullable<int> idlaborcontrakt
		{
			get
			{
				return this._idlaborcontrakt;
			}
			set
			{
				if ((this._idlaborcontrakt != value))
				{
					this.OnidlaborcontraktChanging(value);
					this.SendPropertyChanging();
					this._idlaborcontrakt = value;
					this.SendPropertyChanged("idlaborcontrakt");
					this.OnidlaborcontraktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idreason", DbType="Int")]
		public System.Nullable<int> idreason
		{
			get
			{
				return this._idreason;
			}
			set
			{
				if ((this._idreason != value))
				{
					this.OnidreasonChanging(value);
					this.SendPropertyChanging();
					this._idreason = value;
					this.SendPropertyChanged("idreason");
					this.OnidreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFundingDepartment", DbType="Int")]
		public System.Nullable<int> idFundingDepartment
		{
			get
			{
				return this._idFundingDepartment;
			}
			set
			{
				if ((this._idFundingDepartment != value))
				{
					this.OnidFundingDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idFundingDepartment = value;
					this.SendPropertyChanged("idFundingDepartment");
					this.OnidFundingDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTimeSheetSheduleType", DbType="Int")]
		public System.Nullable<int> idTimeSheetSheduleType
		{
			get
			{
				return this._idTimeSheetSheduleType;
			}
			set
			{
				if ((this._idTimeSheetSheduleType != value))
				{
					this.OnidTimeSheetSheduleTypeChanging(value);
					this.SendPropertyChanging();
					this._idTimeSheetSheduleType = value;
					this.SendPropertyChanged("idTimeSheetSheduleType");
					this.OnidTimeSheetSheduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_EmployeeEvent", Storage="_EmployeeEvent", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<EmployeeEvent> EmployeeEvent
		{
			get
			{
				return this._EmployeeEvent;
			}
			set
			{
				this._EmployeeEvent.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_OK_Otpusk", Storage="_OK_Otpusk", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<OK_Otpusk> OK_Otpusk
		{
			get
			{
				return this._OK_Otpusk;
			}
			set
			{
				this._OK_Otpusk.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffHistory", Storage="_FactStaffHistory", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<FactStaffHistory> FactStaffHistory
		{
			get
			{
				return this._FactStaffHistory;
			}
			set
			{
				this._FactStaffHistory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FactStaff", Storage="_Employee", ThisKey="idEmployee", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.FactStaff.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.FactStaff.Add(this);
						this._idEmployee = value.id;
					}
					else
					{
						this._idEmployee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_FactStaff", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsForeignKey=true)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.FactStaff.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaff.Add(this);
						this._idPlanStaff = value.id;
					}
					else
					{
						this._idPlanStaff = default(int);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffCurrent_FactStaff", Storage="_FactStaffCurrent", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public FactStaffCurrent FactStaffCurrent
		{
			get
			{
				return this._FactStaffCurrent.Entity;
			}
			set
			{
				FactStaffCurrent previousValue = this._FactStaffCurrent.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffCurrent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffCurrent.Entity = null;
						previousValue.FactStaff = null;
					}
					this._FactStaffCurrent.Entity = value;
					if ((value != null))
					{
						value.FactStaff = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("FactStaffCurrent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_FactStaff", Storage="_FactStaffWithHistory", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public FactStaffWithHistory FactStaffWithHistory
		{
			get
			{
				return this._FactStaffWithHistory.Entity;
			}
			set
			{
				FactStaffWithHistory previousValue = this._FactStaffWithHistory.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffWithHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffWithHistory.Entity = null;
						previousValue.FactStaff = null;
					}
					this._FactStaffWithHistory.Entity = value;
					if ((value != null))
					{
						value.FactStaff = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("FactStaffWithHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeEvent(EmployeeEvent entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_EmployeeEvent(EmployeeEvent entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
		
		private void attach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
		
		private void attach_FactStaffHistory(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_FactStaffHistory(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanStaff")]
	public partial class PlanStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idDepartment;
		
		private int _idPost;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<int> _IdWorkShedule;
		
		private EntitySet<Dep> _Dep;
		
		private EntitySet<FactStaff> _FactStaff;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<WorkShedule> _WorkShedule;
		
		private EntityRef<FactStaffCurrent> _FactStaffCurrent;
		
		private EntityRef<FactStaffWithHistory> _FactStaffWithHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIdWorkSheduleChanging(System.Nullable<int> value);
    partial void OnIdWorkSheduleChanged();
    #endregion
		
		public PlanStaff()
		{
			this._Dep = new EntitySet<Dep>(new Action<Dep>(this.attach_Dep), new Action<Dep>(this.detach_Dep));
			this._FactStaff = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaff), new Action<FactStaff>(this.detach_FactStaff));
			this._Post = default(EntityRef<Post>);
			this._WorkShedule = default(EntityRef<WorkShedule>);
			this._FactStaffCurrent = default(EntityRef<FactStaffCurrent>);
			this._FactStaffWithHistory = default(EntityRef<FactStaffWithHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((this._FactStaffCurrent.HasLoadedOrAssignedValue || this._FactStaffWithHistory.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int NOT NULL")]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdWorkShedule", DbType="Int")]
		public System.Nullable<int> IdWorkShedule
		{
			get
			{
				return this._IdWorkShedule;
			}
			set
			{
				if ((this._IdWorkShedule != value))
				{
					if (this._WorkShedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdWorkSheduleChanging(value);
					this.SendPropertyChanging();
					this._IdWorkShedule = value;
					this.SendPropertyChanged("IdWorkShedule");
					this.OnIdWorkSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_Dep", Storage="_Dep", ThisKey="id", OtherKey="idManagerPlanStaff")]
		public EntitySet<Dep> Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				this._Dep.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_FactStaff", Storage="_FactStaff", ThisKey="id", OtherKey="idPlanStaff")]
		public EntitySet<FactStaff> FactStaff
		{
			get
			{
				return this._FactStaff;
			}
			set
			{
				this._FactStaff.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PlanStaff", Storage="_Post", ThisKey="idPost", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PlanStaff.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PlanStaff.Add(this);
						this._idPost = value.id;
					}
					else
					{
						this._idPost = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkShedule_PlanStaff", Storage="_WorkShedule", ThisKey="IdWorkShedule", OtherKey="id", IsForeignKey=true)]
		public WorkShedule WorkShedule
		{
			get
			{
				return this._WorkShedule.Entity;
			}
			set
			{
				WorkShedule previousValue = this._WorkShedule.Entity;
				if (((previousValue != value) 
							|| (this._WorkShedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkShedule.Entity = null;
						previousValue.PlanStaff.Remove(this);
					}
					this._WorkShedule.Entity = value;
					if ((value != null))
					{
						value.PlanStaff.Add(this);
						this._IdWorkShedule = value.id;
					}
					else
					{
						this._IdWorkShedule = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkShedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffCurrent_PlanStaff", Storage="_FactStaffCurrent", ThisKey="id", OtherKey="idPlanStaff", IsForeignKey=true)]
		public FactStaffCurrent FactStaffCurrent
		{
			get
			{
				return this._FactStaffCurrent.Entity;
			}
			set
			{
				FactStaffCurrent previousValue = this._FactStaffCurrent.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffCurrent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffCurrent.Entity = null;
						previousValue.PlanStaff = null;
					}
					this._FactStaffCurrent.Entity = value;
					if ((value != null))
					{
						value.PlanStaff = this;
						this._id = value.idPlanStaff;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("FactStaffCurrent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_PlanStaff", Storage="_FactStaffWithHistory", ThisKey="id", OtherKey="idPlanStaff", IsForeignKey=true)]
		public FactStaffWithHistory FactStaffWithHistory
		{
			get
			{
				return this._FactStaffWithHistory.Entity;
			}
			set
			{
				FactStaffWithHistory previousValue = this._FactStaffWithHistory.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffWithHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffWithHistory.Entity = null;
						previousValue.PlanStaff = null;
					}
					this._FactStaffWithHistory.Entity = value;
					if ((value != null))
					{
						value.PlanStaff = this;
						this._id = value.idPlanStaff;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("FactStaffWithHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dep(Dep entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_Dep(Dep entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
		
		private void attach_FactStaff(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_FactStaff(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffWithHistory")]
	public partial class FactStaffWithHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private decimal _StaffCount;
		
		private System.Nullable<decimal> _HourCount;
		
		private System.Nullable<decimal> _HourSalary;
		
		private int _idPlanStaff;
		
		private int _idEmployee;
		
		private int _idBeginPrikaz;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private int _idTypeWork;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private bool _IsReplacement;
		
		private int _idFactStaffHistory;
		
		private System.Nullable<int> _IDShedule;
		
		private System.Nullable<int> _idSalaryKoeff;
		
		private System.Nullable<int> _idlaborcontrakt;
		
		private System.Nullable<int> _idreason;
		
		private System.Nullable<decimal> _HourStaffCount;
		
		private decimal _CalcStaffCount;
		
		private EntitySet<OK_Otpusk> _OK_Otpusk;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
		private EntityRef<FactStaffHistory> _FactStaffHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffCountChanging(decimal value);
    partial void OnStaffCountChanged();
    partial void OnHourCountChanging(System.Nullable<decimal> value);
    partial void OnHourCountChanged();
    partial void OnHourSalaryChanging(System.Nullable<decimal> value);
    partial void OnHourSalaryChanged();
    partial void OnidPlanStaffChanging(int value);
    partial void OnidPlanStaffChanged();
    partial void OnidEmployeeChanging(int value);
    partial void OnidEmployeeChanged();
    partial void OnidBeginPrikazChanging(int value);
    partial void OnidBeginPrikazChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnidTypeWorkChanging(int value);
    partial void OnidTypeWorkChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIsReplacementChanging(bool value);
    partial void OnIsReplacementChanged();
    partial void OnidFactStaffHistoryChanging(int value);
    partial void OnidFactStaffHistoryChanged();
    partial void OnIDSheduleChanging(System.Nullable<int> value);
    partial void OnIDSheduleChanged();
    partial void OnidSalaryKoeffChanging(System.Nullable<int> value);
    partial void OnidSalaryKoeffChanged();
    partial void OnidlaborcontraktChanging(System.Nullable<int> value);
    partial void OnidlaborcontraktChanged();
    partial void OnidreasonChanging(System.Nullable<int> value);
    partial void OnidreasonChanged();
    partial void OnHourStaffCountChanging(System.Nullable<decimal> value);
    partial void OnHourStaffCountChanged();
    partial void OnCalcStaffCountChanging(decimal value);
    partial void OnCalcStaffCountChanged();
    #endregion
		
		public FactStaffWithHistory()
		{
			this._OK_Otpusk = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusk), new Action<OK_Otpusk>(this.detach_OK_Otpusk));
			this._Employee = default(EntityRef<Employee>);
			this._FactStaff = default(EntityRef<FactStaff>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			this._FactStaffHistory = default(EntityRef<FactStaffHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(6,4) NOT NULL")]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this.OnStaffCountChanging(value);
					this.SendPropertyChanging();
					this._StaffCount = value;
					this.SendPropertyChanged("StaffCount");
					this.OnStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourCount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourCount
		{
			get
			{
				return this._HourCount;
			}
			set
			{
				if ((this._HourCount != value))
				{
					this.OnHourCountChanging(value);
					this.SendPropertyChanging();
					this._HourCount = value;
					this.SendPropertyChanged("HourCount");
					this.OnHourCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourSalary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourSalary
		{
			get
			{
				return this._HourSalary;
			}
			set
			{
				if ((this._HourSalary != value))
				{
					this.OnHourSalaryChanging(value);
					this.SendPropertyChanging();
					this._HourSalary = value;
					this.SendPropertyChanged("HourSalary");
					this.OnHourSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int NOT NULL")]
		public int idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int NOT NULL")]
		public int idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeWork", DbType="Int NOT NULL")]
		public int idTypeWork
		{
			get
			{
				return this._idTypeWork;
			}
			set
			{
				if ((this._idTypeWork != value))
				{
					this.OnidTypeWorkChanging(value);
					this.SendPropertyChanging();
					this._idTypeWork = value;
					this.SendPropertyChanged("idTypeWork");
					this.OnidTypeWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit NOT NULL")]
		public bool IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this.OnIsReplacementChanging(value);
					this.SendPropertyChanging();
					this._IsReplacement = value;
					this.SendPropertyChanged("IsReplacement");
					this.OnIsReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaffHistory", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFactStaffHistory
		{
			get
			{
				return this._idFactStaffHistory;
			}
			set
			{
				if ((this._idFactStaffHistory != value))
				{
					this.OnidFactStaffHistoryChanging(value);
					this.SendPropertyChanging();
					this._idFactStaffHistory = value;
					this.SendPropertyChanged("idFactStaffHistory");
					this.OnidFactStaffHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDShedule", DbType="Int")]
		public System.Nullable<int> IDShedule
		{
			get
			{
				return this._IDShedule;
			}
			set
			{
				if ((this._IDShedule != value))
				{
					this.OnIDSheduleChanging(value);
					this.SendPropertyChanging();
					this._IDShedule = value;
					this.SendPropertyChanged("IDShedule");
					this.OnIDSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSalaryKoeff", DbType="Int")]
		public System.Nullable<int> idSalaryKoeff
		{
			get
			{
				return this._idSalaryKoeff;
			}
			set
			{
				if ((this._idSalaryKoeff != value))
				{
					this.OnidSalaryKoeffChanging(value);
					this.SendPropertyChanging();
					this._idSalaryKoeff = value;
					this.SendPropertyChanged("idSalaryKoeff");
					this.OnidSalaryKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlaborcontrakt", DbType="Int")]
		public System.Nullable<int> idlaborcontrakt
		{
			get
			{
				return this._idlaborcontrakt;
			}
			set
			{
				if ((this._idlaborcontrakt != value))
				{
					this.OnidlaborcontraktChanging(value);
					this.SendPropertyChanging();
					this._idlaborcontrakt = value;
					this.SendPropertyChanged("idlaborcontrakt");
					this.OnidlaborcontraktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idreason", DbType="Int")]
		public System.Nullable<int> idreason
		{
			get
			{
				return this._idreason;
			}
			set
			{
				if ((this._idreason != value))
				{
					this.OnidreasonChanging(value);
					this.SendPropertyChanging();
					this._idreason = value;
					this.SendPropertyChanged("idreason");
					this.OnidreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourStaffCount", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> HourStaffCount
		{
			get
			{
				return this._HourStaffCount;
			}
			set
			{
				if ((this._HourStaffCount != value))
				{
					this.OnHourStaffCountChanging(value);
					this.SendPropertyChanging();
					this._HourStaffCount = value;
					this.SendPropertyChanged("HourStaffCount");
					this.OnHourStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcStaffCount", DbType="Decimal(6,4) NOT NULL")]
		public decimal CalcStaffCount
		{
			get
			{
				return this._CalcStaffCount;
			}
			set
			{
				if ((this._CalcStaffCount != value))
				{
					this.OnCalcStaffCountChanging(value);
					this.SendPropertyChanging();
					this._CalcStaffCount = value;
					this.SendPropertyChanged("CalcStaffCount");
					this.OnCalcStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_OK_Otpusk", Storage="_OK_Otpusk", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<OK_Otpusk> OK_Otpusk
		{
			get
			{
				return this._OK_Otpusk;
			}
			set
			{
				this._OK_Otpusk.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_Employee", Storage="_Employee", ThisKey="idEmployee", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.FactStaffWithHistory = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.FactStaffWithHistory = this;
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_FactStaff", Storage="_FactStaff", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffWithHistory = null;
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffWithHistory = this;
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_PlanStaff", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.FactStaffWithHistory = null;
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffWithHistory = this;
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_FactStaffHistory", Storage="_FactStaffHistory", ThisKey="idFactStaffHistory", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public FactStaffHistory FactStaffHistory
		{
			get
			{
				return this._FactStaffHistory.Entity;
			}
			set
			{
				FactStaffHistory previousValue = this._FactStaffHistory.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffHistory.Entity = null;
						previousValue.FactStaffWithHistory = null;
					}
					this._FactStaffHistory.Entity = value;
					if ((value != null))
					{
						value.FactStaffWithHistory = this;
					}
					this.SendPropertyChanged("FactStaffHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffWithHistory = this;
		}
		
		private void detach_OK_Otpusk(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffWithHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffHistory")]
	public partial class FactStaffHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idFactStaff;
		
		private int _idBeginPrikaz;
		
		private System.DateTime _DateBegin;
		
		private decimal _StaffCount;
		
		private int _idTypeWork;
		
		private System.Nullable<int> _idlaborcontrakt;
		
		private System.Nullable<decimal> _HourCount;
		
		private System.Nullable<decimal> _HourSalary;
		
		private System.Nullable<int> _idSalaryKoeff;
		
		private System.Nullable<decimal> _HourStaffCount;
		
		private decimal _CalcStaffCount;
		
		private EntitySet<TimeSheetRecord> _TimeSheetRecord;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<FactStaffWithHistory> _FactStaffWithHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnidBeginPrikazChanging(int value);
    partial void OnidBeginPrikazChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnStaffCountChanging(decimal value);
    partial void OnStaffCountChanged();
    partial void OnidTypeWorkChanging(int value);
    partial void OnidTypeWorkChanged();
    partial void OnidlaborcontraktChanging(System.Nullable<int> value);
    partial void OnidlaborcontraktChanged();
    partial void OnHourCountChanging(System.Nullable<decimal> value);
    partial void OnHourCountChanged();
    partial void OnHourSalaryChanging(System.Nullable<decimal> value);
    partial void OnHourSalaryChanged();
    partial void OnidSalaryKoeffChanging(System.Nullable<int> value);
    partial void OnidSalaryKoeffChanged();
    partial void OnHourStaffCountChanging(System.Nullable<decimal> value);
    partial void OnHourStaffCountChanged();
    partial void OnCalcStaffCountChanging(decimal value);
    partial void OnCalcStaffCountChanged();
    #endregion
		
		public FactStaffHistory()
		{
			this._TimeSheetRecord = new EntitySet<TimeSheetRecord>(new Action<TimeSheetRecord>(this.attach_TimeSheetRecord), new Action<TimeSheetRecord>(this.detach_TimeSheetRecord));
			this._FactStaff = default(EntityRef<FactStaff>);
			this._FactStaffWithHistory = default(EntityRef<FactStaffWithHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._FactStaffWithHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(6,4) NOT NULL")]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this.OnStaffCountChanging(value);
					this.SendPropertyChanging();
					this._StaffCount = value;
					this.SendPropertyChanged("StaffCount");
					this.OnStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeWork", DbType="Int NOT NULL")]
		public int idTypeWork
		{
			get
			{
				return this._idTypeWork;
			}
			set
			{
				if ((this._idTypeWork != value))
				{
					this.OnidTypeWorkChanging(value);
					this.SendPropertyChanging();
					this._idTypeWork = value;
					this.SendPropertyChanged("idTypeWork");
					this.OnidTypeWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlaborcontrakt", DbType="Int")]
		public System.Nullable<int> idlaborcontrakt
		{
			get
			{
				return this._idlaborcontrakt;
			}
			set
			{
				if ((this._idlaborcontrakt != value))
				{
					this.OnidlaborcontraktChanging(value);
					this.SendPropertyChanging();
					this._idlaborcontrakt = value;
					this.SendPropertyChanged("idlaborcontrakt");
					this.OnidlaborcontraktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourCount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourCount
		{
			get
			{
				return this._HourCount;
			}
			set
			{
				if ((this._HourCount != value))
				{
					this.OnHourCountChanging(value);
					this.SendPropertyChanging();
					this._HourCount = value;
					this.SendPropertyChanged("HourCount");
					this.OnHourCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourSalary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourSalary
		{
			get
			{
				return this._HourSalary;
			}
			set
			{
				if ((this._HourSalary != value))
				{
					this.OnHourSalaryChanging(value);
					this.SendPropertyChanging();
					this._HourSalary = value;
					this.SendPropertyChanged("HourSalary");
					this.OnHourSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSalaryKoeff", DbType="Int")]
		public System.Nullable<int> idSalaryKoeff
		{
			get
			{
				return this._idSalaryKoeff;
			}
			set
			{
				if ((this._idSalaryKoeff != value))
				{
					this.OnidSalaryKoeffChanging(value);
					this.SendPropertyChanging();
					this._idSalaryKoeff = value;
					this.SendPropertyChanged("idSalaryKoeff");
					this.OnidSalaryKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourStaffCount", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> HourStaffCount
		{
			get
			{
				return this._HourStaffCount;
			}
			set
			{
				if ((this._HourStaffCount != value))
				{
					this.OnHourStaffCountChanging(value);
					this.SendPropertyChanging();
					this._HourStaffCount = value;
					this.SendPropertyChanged("HourStaffCount");
					this.OnHourStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcStaffCount", AutoSync=AutoSync.Always, DbType="Decimal(6,4) NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CalcStaffCount
		{
			get
			{
				return this._CalcStaffCount;
			}
			set
			{
				if ((this._CalcStaffCount != value))
				{
					this.OnCalcStaffCountChanging(value);
					this.SendPropertyChanging();
					this._CalcStaffCount = value;
					this.SendPropertyChanged("CalcStaffCount");
					this.OnCalcStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffHistory_TimeSheetRecord", Storage="_TimeSheetRecord", ThisKey="id", OtherKey="idFactStaffHistory")]
		public EntitySet<TimeSheetRecord> TimeSheetRecord
		{
			get
			{
				return this._TimeSheetRecord;
			}
			set
			{
				this._TimeSheetRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffHistory", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffHistory.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffHistory.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffWithHistory_FactStaffHistory", Storage="_FactStaffWithHistory", ThisKey="id", OtherKey="idFactStaffHistory", IsForeignKey=true)]
		public FactStaffWithHistory FactStaffWithHistory
		{
			get
			{
				return this._FactStaffWithHistory.Entity;
			}
			set
			{
				FactStaffWithHistory previousValue = this._FactStaffWithHistory.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffWithHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffWithHistory.Entity = null;
						previousValue.FactStaffHistory = null;
					}
					this._FactStaffWithHistory.Entity = value;
					if ((value != null))
					{
						value.FactStaffHistory = this;
						this._id = value.idFactStaffHistory;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("FactStaffWithHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeSheetRecord(TimeSheetRecord entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffHistory = this;
		}
		
		private void detach_TimeSheetRecord(TimeSheetRecord entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.TimeSheetRecord")]
	public partial class TimeSheetRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _RecordDate;
		
		private double _JobTimeCount;
		
		private int _idTimeSheet;
		
		private int _idDayStatus;
		
		private System.Nullable<bool> _IsChecked;
		
		private int _idFactStaffHistory;
		
		private System.Guid _IdTimeSheetRecord;
		
		private EntityRef<FactStaffHistory> _FactStaffHistory;
		
		private EntityRef<DayStatus> _DayStatus;
		
		private EntityRef<TimeSheet> _TimeSheet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordDateChanging(System.DateTime value);
    partial void OnRecordDateChanged();
    partial void OnJobTimeCountChanging(double value);
    partial void OnJobTimeCountChanged();
    partial void OnidTimeSheetChanging(int value);
    partial void OnidTimeSheetChanged();
    partial void OnidDayStatusChanging(int value);
    partial void OnidDayStatusChanged();
    partial void OnIsCheckedChanging(System.Nullable<bool> value);
    partial void OnIsCheckedChanged();
    partial void OnidFactStaffHistoryChanging(int value);
    partial void OnidFactStaffHistoryChanged();
    partial void OnIdTimeSheetRecordChanging(System.Guid value);
    partial void OnIdTimeSheetRecordChanged();
    #endregion
		
		public TimeSheetRecord()
		{
			this._FactStaffHistory = default(EntityRef<FactStaffHistory>);
			this._DayStatus = default(EntityRef<DayStatus>);
			this._TimeSheet = default(EntityRef<TimeSheet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordDate", DbType="DateTime NOT NULL")]
		public System.DateTime RecordDate
		{
			get
			{
				return this._RecordDate;
			}
			set
			{
				if ((this._RecordDate != value))
				{
					this.OnRecordDateChanging(value);
					this.SendPropertyChanging();
					this._RecordDate = value;
					this.SendPropertyChanged("RecordDate");
					this.OnRecordDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTimeCount", DbType="Float NOT NULL")]
		public double JobTimeCount
		{
			get
			{
				return this._JobTimeCount;
			}
			set
			{
				if ((this._JobTimeCount != value))
				{
					this.OnJobTimeCountChanging(value);
					this.SendPropertyChanging();
					this._JobTimeCount = value;
					this.SendPropertyChanged("JobTimeCount");
					this.OnJobTimeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTimeSheet", DbType="Int NOT NULL")]
		public int idTimeSheet
		{
			get
			{
				return this._idTimeSheet;
			}
			set
			{
				if ((this._idTimeSheet != value))
				{
					if (this._TimeSheet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTimeSheetChanging(value);
					this.SendPropertyChanging();
					this._idTimeSheet = value;
					this.SendPropertyChanged("idTimeSheet");
					this.OnidTimeSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDayStatus", DbType="Int NOT NULL")]
		public int idDayStatus
		{
			get
			{
				return this._idDayStatus;
			}
			set
			{
				if ((this._idDayStatus != value))
				{
					if (this._DayStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDayStatusChanging(value);
					this.SendPropertyChanging();
					this._idDayStatus = value;
					this.SendPropertyChanged("idDayStatus");
					this.OnidDayStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChecked", DbType="Bit")]
		public System.Nullable<bool> IsChecked
		{
			get
			{
				return this._IsChecked;
			}
			set
			{
				if ((this._IsChecked != value))
				{
					this.OnIsCheckedChanging(value);
					this.SendPropertyChanging();
					this._IsChecked = value;
					this.SendPropertyChanged("IsChecked");
					this.OnIsCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaffHistory", DbType="Int NOT NULL")]
		public int idFactStaffHistory
		{
			get
			{
				return this._idFactStaffHistory;
			}
			set
			{
				if ((this._idFactStaffHistory != value))
				{
					if (this._FactStaffHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffHistoryChanging(value);
					this.SendPropertyChanging();
					this._idFactStaffHistory = value;
					this.SendPropertyChanged("idFactStaffHistory");
					this.OnidFactStaffHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTimeSheetRecord", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid IdTimeSheetRecord
		{
			get
			{
				return this._IdTimeSheetRecord;
			}
			set
			{
				if ((this._IdTimeSheetRecord != value))
				{
					this.OnIdTimeSheetRecordChanging(value);
					this.SendPropertyChanging();
					this._IdTimeSheetRecord = value;
					this.SendPropertyChanged("IdTimeSheetRecord");
					this.OnIdTimeSheetRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffHistory_TimeSheetRecord", Storage="_FactStaffHistory", ThisKey="idFactStaffHistory", OtherKey="id", IsForeignKey=true)]
		public FactStaffHistory FactStaffHistory
		{
			get
			{
				return this._FactStaffHistory.Entity;
			}
			set
			{
				FactStaffHistory previousValue = this._FactStaffHistory.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffHistory.Entity = null;
						previousValue.TimeSheetRecord.Remove(this);
					}
					this._FactStaffHistory.Entity = value;
					if ((value != null))
					{
						value.TimeSheetRecord.Add(this);
						this._idFactStaffHistory = value.id;
					}
					else
					{
						this._idFactStaffHistory = default(int);
					}
					this.SendPropertyChanged("FactStaffHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_TimeSheetRecord", Storage="_DayStatus", ThisKey="idDayStatus", OtherKey="id", IsForeignKey=true)]
		public DayStatus DayStatus
		{
			get
			{
				return this._DayStatus.Entity;
			}
			set
			{
				DayStatus previousValue = this._DayStatus.Entity;
				if (((previousValue != value) 
							|| (this._DayStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayStatus.Entity = null;
						previousValue.TimeSheetRecord.Remove(this);
					}
					this._DayStatus.Entity = value;
					if ((value != null))
					{
						value.TimeSheetRecord.Add(this);
						this._idDayStatus = value.id;
					}
					else
					{
						this._idDayStatus = default(int);
					}
					this.SendPropertyChanged("DayStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheet_TimeSheetRecord", Storage="_TimeSheet", ThisKey="idTimeSheet", OtherKey="id", IsForeignKey=true)]
		public TimeSheet TimeSheet
		{
			get
			{
				return this._TimeSheet.Entity;
			}
			set
			{
				TimeSheet previousValue = this._TimeSheet.Entity;
				if (((previousValue != value) 
							|| (this._TimeSheet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeSheet.Entity = null;
						previousValue.TimeSheetRecord.Remove(this);
					}
					this._TimeSheet.Entity = value;
					if ((value != null))
					{
						value.TimeSheetRecord.Add(this);
						this._idTimeSheet = value.id;
					}
					else
					{
						this._idTimeSheet = default(int);
					}
					this.SendPropertyChanged("TimeSheet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.DayStatus")]
	public partial class DayStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DayStatusName;
		
		private string _DayStatusFullName;
		
		private bool _IsVisible;
		
		private EntitySet<EventSuperType> _EventSuperType;
		
		private EntitySet<Exception> _Exception;
		
		private EntitySet<OK_Otpuskvid> _OK_Otpuskvid;
		
		private EntitySet<TimeSheetRecord> _TimeSheetRecord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDayStatusNameChanging(string value);
    partial void OnDayStatusNameChanged();
    partial void OnDayStatusFullNameChanging(string value);
    partial void OnDayStatusFullNameChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public DayStatus()
		{
			this._EventSuperType = new EntitySet<EventSuperType>(new Action<EventSuperType>(this.attach_EventSuperType), new Action<EventSuperType>(this.detach_EventSuperType));
			this._Exception = new EntitySet<Exception>(new Action<Exception>(this.attach_Exception), new Action<Exception>(this.detach_Exception));
			this._OK_Otpuskvid = new EntitySet<OK_Otpuskvid>(new Action<OK_Otpuskvid>(this.attach_OK_Otpuskvid), new Action<OK_Otpuskvid>(this.detach_OK_Otpuskvid));
			this._TimeSheetRecord = new EntitySet<TimeSheetRecord>(new Action<TimeSheetRecord>(this.attach_TimeSheetRecord), new Action<TimeSheetRecord>(this.detach_TimeSheetRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayStatusName", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string DayStatusName
		{
			get
			{
				return this._DayStatusName;
			}
			set
			{
				if ((this._DayStatusName != value))
				{
					this.OnDayStatusNameChanging(value);
					this.SendPropertyChanging();
					this._DayStatusName = value;
					this.SendPropertyChanged("DayStatusName");
					this.OnDayStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayStatusFullName", DbType="VarChar(400)")]
		public string DayStatusFullName
		{
			get
			{
				return this._DayStatusFullName;
			}
			set
			{
				if ((this._DayStatusFullName != value))
				{
					this.OnDayStatusFullNameChanging(value);
					this.SendPropertyChanging();
					this._DayStatusFullName = value;
					this.SendPropertyChanged("DayStatusFullName");
					this.OnDayStatusFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_EventSuperType", Storage="_EventSuperType", ThisKey="id", OtherKey="idDayStatus")]
		public EntitySet<EventSuperType> EventSuperType
		{
			get
			{
				return this._EventSuperType;
			}
			set
			{
				this._EventSuperType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_Exception", Storage="_Exception", ThisKey="id", OtherKey="idDayStatus")]
		public EntitySet<Exception> Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				this._Exception.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_OK_Otpuskvid", Storage="_OK_Otpuskvid", ThisKey="id", OtherKey="idDayStatus")]
		public EntitySet<OK_Otpuskvid> OK_Otpuskvid
		{
			get
			{
				return this._OK_Otpuskvid;
			}
			set
			{
				this._OK_Otpuskvid.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayStatus_TimeSheetRecord", Storage="_TimeSheetRecord", ThisKey="id", OtherKey="idDayStatus")]
		public EntitySet<TimeSheetRecord> TimeSheetRecord
		{
			get
			{
				return this._TimeSheetRecord;
			}
			set
			{
				this._TimeSheetRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventSuperType(EventSuperType entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = this;
		}
		
		private void detach_EventSuperType(EventSuperType entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = null;
		}
		
		private void attach_Exception(Exception entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = this;
		}
		
		private void detach_Exception(Exception entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = null;
		}
		
		private void attach_OK_Otpuskvid(OK_Otpuskvid entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = this;
		}
		
		private void detach_OK_Otpuskvid(OK_Otpuskvid entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = null;
		}
		
		private void attach_TimeSheetRecord(TimeSheetRecord entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = this;
		}
		
		private void detach_TimeSheetRecord(TimeSheetRecord entity)
		{
			this.SendPropertyChanging();
			entity.DayStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.TimeSheet")]
	public partial class TimeSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idDepartment;
		
		private int _idCreater;
		
		private System.DateTime _DateBeginPeriod;
		
		private System.DateTime _DateEndPeriod;
		
		private System.DateTime _DateComposition;
		
		private System.Nullable<System.Guid> _idWF;
		
		private System.Nullable<int> _ApproveStep;
		
		private bool _IsFake;
		
		private EntitySet<TimeSheetApproval> _TimeSheetApproval;
		
		private EntitySet<TimeSheetRecord> _TimeSheetRecord;
		
		private EntityRef<Approver> _Approver;
		
		private EntityRef<Dep> _Dep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnidCreaterChanging(int value);
    partial void OnidCreaterChanged();
    partial void OnDateBeginPeriodChanging(System.DateTime value);
    partial void OnDateBeginPeriodChanged();
    partial void OnDateEndPeriodChanging(System.DateTime value);
    partial void OnDateEndPeriodChanged();
    partial void OnDateCompositionChanging(System.DateTime value);
    partial void OnDateCompositionChanged();
    partial void OnidWFChanging(System.Nullable<System.Guid> value);
    partial void OnidWFChanged();
    partial void OnApproveStepChanging(System.Nullable<int> value);
    partial void OnApproveStepChanged();
    partial void OnIsFakeChanging(bool value);
    partial void OnIsFakeChanged();
    #endregion
		
		public TimeSheet()
		{
			this._TimeSheetApproval = new EntitySet<TimeSheetApproval>(new Action<TimeSheetApproval>(this.attach_TimeSheetApproval), new Action<TimeSheetApproval>(this.detach_TimeSheetApproval));
			this._TimeSheetRecord = new EntitySet<TimeSheetRecord>(new Action<TimeSheetRecord>(this.attach_TimeSheetRecord), new Action<TimeSheetRecord>(this.detach_TimeSheetRecord));
			this._Approver = default(EntityRef<Approver>);
			this._Dep = default(EntityRef<Dep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCreater", DbType="Int NOT NULL")]
		public int idCreater
		{
			get
			{
				return this._idCreater;
			}
			set
			{
				if ((this._idCreater != value))
				{
					if (this._Approver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCreaterChanging(value);
					this.SendPropertyChanging();
					this._idCreater = value;
					this.SendPropertyChanged("idCreater");
					this.OnidCreaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBeginPeriod", DbType="Date NOT NULL")]
		public System.DateTime DateBeginPeriod
		{
			get
			{
				return this._DateBeginPeriod;
			}
			set
			{
				if ((this._DateBeginPeriod != value))
				{
					this.OnDateBeginPeriodChanging(value);
					this.SendPropertyChanging();
					this._DateBeginPeriod = value;
					this.SendPropertyChanged("DateBeginPeriod");
					this.OnDateBeginPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEndPeriod", DbType="Date NOT NULL")]
		public System.DateTime DateEndPeriod
		{
			get
			{
				return this._DateEndPeriod;
			}
			set
			{
				if ((this._DateEndPeriod != value))
				{
					this.OnDateEndPeriodChanging(value);
					this.SendPropertyChanging();
					this._DateEndPeriod = value;
					this.SendPropertyChanged("DateEndPeriod");
					this.OnDateEndPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateComposition", DbType="DateTime NOT NULL")]
		public System.DateTime DateComposition
		{
			get
			{
				return this._DateComposition;
			}
			set
			{
				if ((this._DateComposition != value))
				{
					this.OnDateCompositionChanging(value);
					this.SendPropertyChanging();
					this._DateComposition = value;
					this.SendPropertyChanged("DateComposition");
					this.OnDateCompositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idWF", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> idWF
		{
			get
			{
				return this._idWF;
			}
			set
			{
				if ((this._idWF != value))
				{
					this.OnidWFChanging(value);
					this.SendPropertyChanging();
					this._idWF = value;
					this.SendPropertyChanged("idWF");
					this.OnidWFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveStep", DbType="Int")]
		public System.Nullable<int> ApproveStep
		{
			get
			{
				return this._ApproveStep;
			}
			set
			{
				if ((this._ApproveStep != value))
				{
					this.OnApproveStepChanging(value);
					this.SendPropertyChanging();
					this._ApproveStep = value;
					this.SendPropertyChanged("ApproveStep");
					this.OnApproveStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFake", DbType="Bit NOT NULL")]
		public bool IsFake
		{
			get
			{
				return this._IsFake;
			}
			set
			{
				if ((this._IsFake != value))
				{
					this.OnIsFakeChanging(value);
					this.SendPropertyChanging();
					this._IsFake = value;
					this.SendPropertyChanged("IsFake");
					this.OnIsFakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheet_TimeSheetApproval", Storage="_TimeSheetApproval", ThisKey="id", OtherKey="idTimeSheet")]
		public EntitySet<TimeSheetApproval> TimeSheetApproval
		{
			get
			{
				return this._TimeSheetApproval;
			}
			set
			{
				this._TimeSheetApproval.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheet_TimeSheetRecord", Storage="_TimeSheetRecord", ThisKey="id", OtherKey="idTimeSheet")]
		public EntitySet<TimeSheetRecord> TimeSheetRecord
		{
			get
			{
				return this._TimeSheetRecord;
			}
			set
			{
				this._TimeSheetRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Approver_TimeSheet", Storage="_Approver", ThisKey="idCreater", OtherKey="id", IsForeignKey=true)]
		public Approver Approver
		{
			get
			{
				return this._Approver.Entity;
			}
			set
			{
				Approver previousValue = this._Approver.Entity;
				if (((previousValue != value) 
							|| (this._Approver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Approver.Entity = null;
						previousValue.TimeSheet.Remove(this);
					}
					this._Approver.Entity = value;
					if ((value != null))
					{
						value.TimeSheet.Add(this);
						this._idCreater = value.id;
					}
					else
					{
						this._idCreater = default(int);
					}
					this.SendPropertyChanged("Approver");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_TimeSheet", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.TimeSheet.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.TimeSheet.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeSheetApproval(TimeSheetApproval entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheet = this;
		}
		
		private void detach_TimeSheetApproval(TimeSheetApproval entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheet = null;
		}
		
		private void attach_TimeSheetRecord(TimeSheetRecord entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheet = this;
		}
		
		private void detach_TimeSheetRecord(TimeSheetRecord entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheet = null;
		}
	}
}
#pragma warning restore 1591
