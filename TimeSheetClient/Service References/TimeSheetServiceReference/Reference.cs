//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18331
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace TimeSheetClient.TimeSheetServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoEmployee", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApprover))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetClient.TimeSheetServiceReference.DtoApprover))]
    public partial class DtoEmployee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmployeeLoginField;
        
        private int IdEmployeeField;
        
        private string ItabNField;
        
        private string NameField;
        
        private string PatronymicField;
        
        private bool SexBitField;
        
        private string SurnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeLogin {
            get {
                return this.EmployeeLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeLoginField, value) != true)) {
                    this.EmployeeLoginField = value;
                    this.RaisePropertyChanged("EmployeeLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEmployee {
            get {
                return this.IdEmployeeField;
            }
            set {
                if ((this.IdEmployeeField.Equals(value) != true)) {
                    this.IdEmployeeField = value;
                    this.RaisePropertyChanged("IdEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItabN {
            get {
                return this.ItabNField;
            }
            set {
                if ((object.ReferenceEquals(this.ItabNField, value) != true)) {
                    this.ItabNField = value;
                    this.RaisePropertyChanged("ItabN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SexBit {
            get {
                return this.SexBitField;
            }
            set {
                if ((this.SexBitField.Equals(value) != true)) {
                    this.SexBitField = value;
                    this.RaisePropertyChanged("SexBit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoFactStaffEmployee", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApprover))]
    public partial class DtoFactStaffEmployee : TimeSheetClient.TimeSheetServiceReference.DtoEmployee {
        
        private int IdFactStaffField;
        
        private int IdFactStaffHistiryField;
        
        private bool IsChekedField;
        
        private TimeSheetClient.TimeSheetServiceReference.DtoPost PostField;
        
        private decimal StaffRateField;
        
        private TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule WorkSheduleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdFactStaff {
            get {
                return this.IdFactStaffField;
            }
            set {
                if ((this.IdFactStaffField.Equals(value) != true)) {
                    this.IdFactStaffField = value;
                    this.RaisePropertyChanged("IdFactStaff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdFactStaffHistiry {
            get {
                return this.IdFactStaffHistiryField;
            }
            set {
                if ((this.IdFactStaffHistiryField.Equals(value) != true)) {
                    this.IdFactStaffHistiryField = value;
                    this.RaisePropertyChanged("IdFactStaffHistiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCheked {
            get {
                return this.IsChekedField;
            }
            set {
                if ((this.IsChekedField.Equals(value) != true)) {
                    this.IsChekedField = value;
                    this.RaisePropertyChanged("IsCheked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoPost Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StaffRate {
            get {
                return this.StaffRateField;
            }
            set {
                if ((this.StaffRateField.Equals(value) != true)) {
                    this.StaffRateField = value;
                    this.RaisePropertyChanged("StaffRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule WorkShedule {
            get {
                return this.WorkSheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkSheduleField, value) != true)) {
                    this.WorkSheduleField = value;
                    this.RaisePropertyChanged("WorkShedule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetApprover", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoTimeSheetApprover : TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee {
        
        private int AppoverNumberField;
        
        private System.Nullable<System.DateTime> ApproverDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppoverNumber {
            get {
                return this.AppoverNumberField;
            }
            set {
                if ((this.AppoverNumberField.Equals(value) != true)) {
                    this.AppoverNumberField = value;
                    this.RaisePropertyChanged("AppoverNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApproverDate {
            get {
                return this.ApproverDateField;
            }
            set {
                if ((this.ApproverDateField.Equals(value) != true)) {
                    this.ApproverDateField = value;
                    this.RaisePropertyChanged("ApproverDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoApprover", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoApprover : TimeSheetClient.TimeSheetServiceReference.DtoEmployee {
        
        private System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoApproverDepartment> DtoApproverDepartmentsField;
        
        private bool IsAdministratorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoApproverDepartment> DtoApproverDepartments {
            get {
                return this.DtoApproverDepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DtoApproverDepartmentsField, value) != true)) {
                    this.DtoApproverDepartmentsField = value;
                    this.RaisePropertyChanged("DtoApproverDepartments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrator {
            get {
                return this.IsAdministratorField;
            }
            set {
                if ((this.IsAdministratorField.Equals(value) != true)) {
                    this.IsAdministratorField = value;
                    this.RaisePropertyChanged("IsAdministrator");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoApproverDepartment", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoApproverDepartment : TimeSheetClient.TimeSheetServiceReference.DtoDepartment {
        
        private int ApproveNumberField;
        
        private string ApproveTypeNameField;
        
        private int IdApproverField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApproveNumber {
            get {
                return this.ApproveNumberField;
            }
            set {
                if ((this.ApproveNumberField.Equals(value) != true)) {
                    this.ApproveNumberField = value;
                    this.RaisePropertyChanged("ApproveNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApproveTypeName {
            get {
                return this.ApproveTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveTypeNameField, value) != true)) {
                    this.ApproveTypeNameField = value;
                    this.RaisePropertyChanged("ApproveTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdApprover {
            get {
                return this.IdApproverField;
            }
            set {
                if ((this.IdApproverField.Equals(value) != true)) {
                    this.IdApproverField = value;
                    this.RaisePropertyChanged("IdApprover");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPost", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoPost : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TimeSheetClient.TimeSheetServiceReference.DtoCategory CategoryField;
        
        private int IdPostField;
        
        private bool IsMenagerField;
        
        private string PostFullNameField;
        
        private string PostSmallNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPost {
            get {
                return this.IdPostField;
            }
            set {
                if ((this.IdPostField.Equals(value) != true)) {
                    this.IdPostField = value;
                    this.RaisePropertyChanged("IdPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMenager {
            get {
                return this.IsMenagerField;
            }
            set {
                if ((this.IsMenagerField.Equals(value) != true)) {
                    this.IsMenagerField = value;
                    this.RaisePropertyChanged("IsMenager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostFullName {
            get {
                return this.PostFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostFullNameField, value) != true)) {
                    this.PostFullNameField = value;
                    this.RaisePropertyChanged("PostFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostSmallName {
            get {
                return this.PostSmallNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostSmallNameField, value) != true)) {
                    this.PostSmallNameField = value;
                    this.RaisePropertyChanged("PostSmallName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoWorkShedule", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoWorkShedule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdWorkSheduleField;
        
        private string WorkSheduleNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdWorkShedule {
            get {
                return this.IdWorkSheduleField;
            }
            set {
                if ((this.IdWorkSheduleField.Equals(value) != true)) {
                    this.IdWorkSheduleField = value;
                    this.RaisePropertyChanged("IdWorkShedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkSheduleName {
            get {
                return this.WorkSheduleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkSheduleNameField, value) != true)) {
                    this.WorkSheduleNameField = value;
                    this.RaisePropertyChanged("WorkSheduleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCategory", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoCategory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CategoryFullNameField;
        
        private string CategorySmallNameField;
        
        private int IdCategoryField;
        
        private bool IsPPSField;
        
        private System.Nullable<int> OrderByField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryFullName {
            get {
                return this.CategoryFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryFullNameField, value) != true)) {
                    this.CategoryFullNameField = value;
                    this.RaisePropertyChanged("CategoryFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategorySmallName {
            get {
                return this.CategorySmallNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorySmallNameField, value) != true)) {
                    this.CategorySmallNameField = value;
                    this.RaisePropertyChanged("CategorySmallName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCategory {
            get {
                return this.IdCategoryField;
            }
            set {
                if ((this.IdCategoryField.Equals(value) != true)) {
                    this.IdCategoryField = value;
                    this.RaisePropertyChanged("IdCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPPS {
            get {
                return this.IsPPSField;
            }
            set {
                if ((this.IsPPSField.Equals(value) != true)) {
                    this.IsPPSField = value;
                    this.RaisePropertyChanged("IsPPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((this.OrderByField.Equals(value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoDepartment", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetClient.TimeSheetServiceReference.DtoApproverDepartment))]
    public partial class DtoDepartment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DepartmentFullNameField;
        
        private string DepartmentSmallNameField;
        
        private int IdDepartmentField;
        
        private System.Nullable<int> IdManagerDepartmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentFullName {
            get {
                return this.DepartmentFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentFullNameField, value) != true)) {
                    this.DepartmentFullNameField = value;
                    this.RaisePropertyChanged("DepartmentFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentSmallName {
            get {
                return this.DepartmentSmallNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentSmallNameField, value) != true)) {
                    this.DepartmentSmallNameField = value;
                    this.RaisePropertyChanged("DepartmentSmallName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDepartment {
            get {
                return this.IdDepartmentField;
            }
            set {
                if ((this.IdDepartmentField.Equals(value) != true)) {
                    this.IdDepartmentField = value;
                    this.RaisePropertyChanged("IdDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdManagerDepartment {
            get {
                return this.IdManagerDepartmentField;
            }
            set {
                if ((this.IdManagerDepartmentField.Equals(value) != true)) {
                    this.IdManagerDepartmentField = value;
                    this.RaisePropertyChanged("IdManagerDepartment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheet", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoTimeSheet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApprover> ApproversField;
        
        private System.DateTime DateBeginField;
        
        private System.DateTime DateCompositionField;
        
        private System.DateTime DateEndField;
        
        private TimeSheetClient.TimeSheetServiceReference.DtoDepartment DepartmentField;
        
        private System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetEmployee> EmployeesField;
        
        private int IdTimeSheetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApprover> Approvers {
            get {
                return this.ApproversField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproversField, value) != true)) {
                    this.ApproversField = value;
                    this.RaisePropertyChanged("Approvers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateBegin {
            get {
                return this.DateBeginField;
            }
            set {
                if ((this.DateBeginField.Equals(value) != true)) {
                    this.DateBeginField = value;
                    this.RaisePropertyChanged("DateBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateComposition {
            get {
                return this.DateCompositionField;
            }
            set {
                if ((this.DateCompositionField.Equals(value) != true)) {
                    this.DateCompositionField = value;
                    this.RaisePropertyChanged("DateComposition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoDepartment Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetEmployee> Employees {
            get {
                return this.EmployeesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeesField, value) != true)) {
                    this.EmployeesField = value;
                    this.RaisePropertyChanged("Employees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTimeSheet {
            get {
                return this.IdTimeSheetField;
            }
            set {
                if ((this.IdTimeSheetField.Equals(value) != true)) {
                    this.IdTimeSheetField = value;
                    this.RaisePropertyChanged("IdTimeSheet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetEmployee", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoTimeSheetEmployee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee FactStaffEmployeeField;
        
        private int IdTimeSheetField;
        
        private bool IsCheckedField;
        
        private System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> RecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee FactStaffEmployee {
            get {
                return this.FactStaffEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.FactStaffEmployeeField, value) != true)) {
                    this.FactStaffEmployeeField = value;
                    this.RaisePropertyChanged("FactStaffEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTimeSheet {
            get {
                return this.IdTimeSheetField;
            }
            set {
                if ((this.IdTimeSheetField.Equals(value) != true)) {
                    this.IdTimeSheetField = value;
                    this.RaisePropertyChanged("IdTimeSheet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetRecord", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoTimeSheetRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private string DayAweekField;
        
        private TimeSheetClient.TimeSheetServiceReference.DtoDayStatus DayStaysField;
        
        private System.Guid IdTimeSheetRecordField;
        
        private bool IsCheckedField;
        
        private double JobTimeCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayAweek {
            get {
                return this.DayAweekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayAweekField, value) != true)) {
                    this.DayAweekField = value;
                    this.RaisePropertyChanged("DayAweek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoDayStatus DayStays {
            get {
                return this.DayStaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DayStaysField, value) != true)) {
                    this.DayStaysField = value;
                    this.RaisePropertyChanged("DayStays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdTimeSheetRecord {
            get {
                return this.IdTimeSheetRecordField;
            }
            set {
                if ((this.IdTimeSheetRecordField.Equals(value) != true)) {
                    this.IdTimeSheetRecordField = value;
                    this.RaisePropertyChanged("IdTimeSheetRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double JobTimeCount {
            get {
                return this.JobTimeCountField;
            }
            set {
                if ((this.JobTimeCountField.Equals(value) != true)) {
                    this.JobTimeCountField = value;
                    this.RaisePropertyChanged("JobTimeCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoDayStatus", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoDayStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FullDayStatusNameField;
        
        private int IdDayStatusField;
        
        private string SmallDayStatusNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullDayStatusName {
            get {
                return this.FullDayStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullDayStatusNameField, value) != true)) {
                    this.FullDayStatusNameField = value;
                    this.RaisePropertyChanged("FullDayStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDayStatus {
            get {
                return this.IdDayStatusField;
            }
            set {
                if ((this.IdDayStatusField.Equals(value) != true)) {
                    this.IdDayStatusField = value;
                    this.RaisePropertyChanged("IdDayStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmallDayStatusName {
            get {
                return this.SmallDayStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SmallDayStatusNameField, value) != true)) {
                    this.SmallDayStatusNameField = value;
                    this.RaisePropertyChanged("SmallDayStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetApproveHistiry", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoTimeSheetApproveHistiry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AppoverCommentField;
        
        private System.DateTime AppoverDateField;
        
        private string AppoverNameField;
        
        private string AppoverStatusField;
        
        private string AppoverVisaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverComment {
            get {
                return this.AppoverCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverCommentField, value) != true)) {
                    this.AppoverCommentField = value;
                    this.RaisePropertyChanged("AppoverComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AppoverDate {
            get {
                return this.AppoverDateField;
            }
            set {
                if ((this.AppoverDateField.Equals(value) != true)) {
                    this.AppoverDateField = value;
                    this.RaisePropertyChanged("AppoverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverName {
            get {
                return this.AppoverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverNameField, value) != true)) {
                    this.AppoverNameField = value;
                    this.RaisePropertyChanged("AppoverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverStatus {
            get {
                return this.AppoverStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverStatusField, value) != true)) {
                    this.AppoverStatusField = value;
                    this.RaisePropertyChanged("AppoverStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverVisa {
            get {
                return this.AppoverVisaField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverVisaField, value) != true)) {
                    this.AppoverVisaField = value;
                    this.RaisePropertyChanged("AppoverVisa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoMessage", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoExceptionDay", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvc4WebApplication.ClassesDTO")]
    public partial class DtoExceptionDay : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private string DayAweekField;
        
        private TimeSheetClient.TimeSheetServiceReference.DtoDayStatus DayStatusField;
        
        private float GNSField;
        
        private float GPSField;
        
        private int IdExceptionDayField;
        
        private float MNSField;
        
        private float MPSField;
        
        private string NameField;
        
        private TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule WorkSheduleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayAweek {
            get {
                return this.DayAweekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayAweekField, value) != true)) {
                    this.DayAweekField = value;
                    this.RaisePropertyChanged("DayAweek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoDayStatus DayStatus {
            get {
                return this.DayStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DayStatusField, value) != true)) {
                    this.DayStatusField = value;
                    this.RaisePropertyChanged("DayStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float GNS {
            get {
                return this.GNSField;
            }
            set {
                if ((this.GNSField.Equals(value) != true)) {
                    this.GNSField = value;
                    this.RaisePropertyChanged("GNS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float GPS {
            get {
                return this.GPSField;
            }
            set {
                if ((this.GPSField.Equals(value) != true)) {
                    this.GPSField = value;
                    this.RaisePropertyChanged("GPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdExceptionDay {
            get {
                return this.IdExceptionDayField;
            }
            set {
                if ((this.IdExceptionDayField.Equals(value) != true)) {
                    this.IdExceptionDayField = value;
                    this.RaisePropertyChanged("IdExceptionDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MNS {
            get {
                return this.MNSField;
            }
            set {
                if ((this.MNSField.Equals(value) != true)) {
                    this.MNSField = value;
                    this.RaisePropertyChanged("MNS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MPS {
            get {
                return this.MPSField;
            }
            set {
                if ((this.MPSField.Equals(value) != true)) {
                    this.MPSField = value;
                    this.RaisePropertyChanged("MPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule WorkShedule {
            get {
                return this.WorkSheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkSheduleField, value) != true)) {
                    this.WorkSheduleField = value;
                    this.RaisePropertyChanged("WorkShedule");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="TimeSheetServiceReference.TimeSheetService")]
    public interface TimeSheetService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetCurrentApproverByLogin", ReplyAction="urn:TimeSheetService/GetCurrentApproverByLoginResponse")]
        System.IAsyncResult BeginGetCurrentApproverByLogin(string employeeLogin, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetCurrentApproverByLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetDepartmentsList", ReplyAction="urn:TimeSheetService/GetDepartmentsListResponse")]
        System.IAsyncResult BeginGetDepartmentsList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment> EndGetDepartmentsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetDepartmentEmployees", ReplyAction="urn:TimeSheetService/GetDepartmentEmployeesResponse")]
        System.IAsyncResult BeginGetDepartmentEmployees(int idDepartment, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee> EndGetDepartmentEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetEmployeesForTimeSheet", ReplyAction="urn:TimeSheetService/GetEmployeesForTimeSheetResponse")]
        System.IAsyncResult BeginGetEmployeesForTimeSheet(int idDepartment, string employeeLogin, System.DateTime dateStart, System.DateTime dateEnd, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> EndGetEmployeesForTimeSheet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetDepartmentApprover", ReplyAction="urn:TimeSheetService/GetDepartmentApproverResponse")]
        System.IAsyncResult BeginGetDepartmentApprover(int idDepartment, int approveNumber, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetDepartmentApprover(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/AddEmployeeLogin", ReplyAction="urn:TimeSheetService/AddEmployeeLoginResponse")]
        System.IAsyncResult BeginAddEmployeeLogin(int idEmployee, string login, System.AsyncCallback callback, object asyncState);
        
        bool EndAddEmployeeLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/AddApproverForDepartment", ReplyAction="urn:TimeSheetService/AddApproverForDepartmentResponse")]
        System.IAsyncResult BeginAddApproverForDepartment(int idEmployee, int idDepartment, int approveNumber, System.AsyncCallback callback, object asyncState);
        
        bool EndAddApproverForDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetTimeSheet", ReplyAction="urn:TimeSheetService/GetTimeSheetResponse")]
        System.IAsyncResult BeginGetTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet EndGetTimeSheet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetTimeSheetList", ReplyAction="urn:TimeSheetService/GetTimeSheetListResponse")]
        System.IAsyncResult BeginGetTimeSheetList(int idDepartment, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet> EndGetTimeSheetList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetDayStatusList", ReplyAction="urn:TimeSheetService/GetDayStatusListResponse")]
        System.IAsyncResult BeginGetDayStatusList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus> EndGetDayStatusList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/EditTimeSheetRecords", ReplyAction="urn:TimeSheetService/EditTimeSheetRecordsResponse")]
        System.IAsyncResult BeginEditTimeSheetRecords(System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> recordsForEdit, System.AsyncCallback callback, object asyncState);
        
        bool EndEditTimeSheetRecords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetTimeSheetApproveHistory", ReplyAction="urn:TimeSheetService/GetTimeSheetApproveHistoryResponse")]
        System.IAsyncResult BeginGetTimeSheetApproveHistory(int idTimeSheet, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry> EndGetTimeSheetApproveHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/CanTimeSheeEdit", ReplyAction="urn:TimeSheetService/CanTimeSheeEditResponse")]
        System.IAsyncResult BeginCanTimeSheeEdit(System.Guid idRecord, System.AsyncCallback callback, object asyncState);
        
        bool EndCanTimeSheeEdit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/TimeSheetByName", ReplyAction="urn:TimeSheetService/TimeSheetByNameResponse")]
        System.IAsyncResult BeginTimeSheetByName(TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet timeSheet, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoMessage EndTimeSheetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetYearsForExeptionDays", ReplyAction="urn:TimeSheetService/GetYearsForExeptionDaysResponse")]
        System.IAsyncResult BeginGetYearsForExeptionDays(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndGetYearsForExeptionDays(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetWorkScheduleList", ReplyAction="urn:TimeSheetService/GetWorkScheduleListResponse")]
        System.IAsyncResult BeginGetWorkScheduleList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule> EndGetWorkScheduleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetExeptionsDaysInYear", ReplyAction="urn:TimeSheetService/GetExeptionsDaysInYearResponse")]
        System.IAsyncResult BeginGetExeptionsDaysInYear(int year, int idWprkSchedule, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay> EndGetExeptionsDaysInYear(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/InsertExeptionsDay", ReplyAction="urn:TimeSheetService/InsertExeptionsDayResponse")]
        System.IAsyncResult BeginInsertExeptionsDay(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoMessage EndInsertExeptionsDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/EditExeptionsDay", ReplyAction="urn:TimeSheetService/EditExeptionsDayResponse")]
        System.IAsyncResult BeginEditExeptionsDay(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoMessage EndEditExeptionsDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/DeleteExeptionsDay", ReplyAction="urn:TimeSheetService/DeleteExeptionsDayResponse")]
        System.IAsyncResult BeginDeleteExeptionsDay(int idExceptionDay, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoMessage EndDeleteExeptionsDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/TimeSheetApproval", ReplyAction="urn:TimeSheetService/TimeSheetApprovalResponse")]
        System.IAsyncResult BeginTimeSheetApproval(int idTimeSheet, string employeeLogin, bool result, string comments, System.AsyncCallback callback, object asyncState);
        
        bool EndTimeSheetApproval(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetApproverForTimeSheet", ReplyAction="urn:TimeSheetService/GetApproverForTimeSheetResponse")]
        System.IAsyncResult BeginGetApproverForTimeSheet(int idTimeSheet, int approverNum, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetApproverForTimeSheet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetNextApproverForTimeSheet", ReplyAction="urn:TimeSheetService/GetNextApproverForTimeSheetResponse")]
        System.IAsyncResult BeginGetNextApproverForTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetNextApproverForTimeSheet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/CanApprove", ReplyAction="urn:TimeSheetService/CanApproveResponse")]
        System.IAsyncResult BeginCanApprove(int idTimeSheet, string employeeLogin, System.AsyncCallback callback, object asyncState);
        
        bool EndCanApprove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/GetTimeSheetApproveStep", ReplyAction="urn:TimeSheetService/GetTimeSheetApproveStepResponse")]
        System.IAsyncResult BeginGetTimeSheetApproveStep(int idTimeSheet, System.AsyncCallback callback, object asyncState);
        
        int EndGetTimeSheetApproveStep(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/SendMail", ReplyAction="urn:TimeSheetService/SendMailResponse")]
        System.IAsyncResult BeginSendMail(TimeSheetClient.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished, System.AsyncCallback callback, object asyncState);
        
        bool EndSendMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/FioToDat", ReplyAction="urn:TimeSheetService/FioToDatResponse")]
        System.IAsyncResult BeginFioToDat(string fio, System.Nullable<int> sex, System.AsyncCallback callback, object asyncState);
        
        string EndFioToDat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/CreateTimeSheet", ReplyAction="urn:TimeSheetService/CreateTimeSheetResponse")]
        System.IAsyncResult BeginCreateTimeSheet(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoMessage EndCreateTimeSheet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/CreateTimeSheetByName", ReplyAction="urn:TimeSheetService/CreateTimeSheetByNameResponse")]
        System.IAsyncResult BeginCreateTimeSheetByName(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> employees, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoMessage EndCreateTimeSheetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSheetService/RefreshTimeSheet", ReplyAction="urn:TimeSheetService/RefreshTimeSheetResponse")]
        System.IAsyncResult BeginRefreshTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState);
        
        TimeSheetClient.TimeSheetServiceReference.DtoMessage EndRefreshTimeSheet(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TimeSheetServiceChannel : TimeSheetClient.TimeSheetServiceReference.TimeSheetService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentApproverByLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentApproverByLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoApprover Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDepartmentsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDepartmentsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDepartmentEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDepartmentEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeesForTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeesForTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDepartmentApproverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDepartmentApproverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoApprover Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddEmployeeLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddEmployeeLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddApproverForDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddApproverForDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeSheetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeSheetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDayStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDayStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditTimeSheetRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditTimeSheetRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeSheetApproveHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeSheetApproveHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanTimeSheeEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanTimeSheeEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeSheetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TimeSheetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetYearsForExeptionDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetYearsForExeptionDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWorkScheduleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWorkScheduleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExeptionsDaysInYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExeptionsDaysInYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertExeptionsDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertExeptionsDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditExeptionsDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditExeptionsDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteExeptionsDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteExeptionsDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeSheetApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TimeSheetApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApproverForTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApproverForTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoApprover Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextApproverForTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextApproverForTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoApprover Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeSheetApproveStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeSheetApproveStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FioToDatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FioToDatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTimeSheetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateTimeSheetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RefreshTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RefreshTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TimeSheetClient.TimeSheetServiceReference.DtoMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeSheetServiceClient : System.ServiceModel.ClientBase<TimeSheetClient.TimeSheetServiceReference.TimeSheetService>, TimeSheetClient.TimeSheetServiceReference.TimeSheetService {
        
        private BeginOperationDelegate onBeginGetCurrentApproverByLoginDelegate;
        
        private EndOperationDelegate onEndGetCurrentApproverByLoginDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentApproverByLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDepartmentsListDelegate;
        
        private EndOperationDelegate onEndGetDepartmentsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDepartmentsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDepartmentEmployeesDelegate;
        
        private EndOperationDelegate onEndGetDepartmentEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDepartmentEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeesForTimeSheetDelegate;
        
        private EndOperationDelegate onEndGetEmployeesForTimeSheetDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeesForTimeSheetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDepartmentApproverDelegate;
        
        private EndOperationDelegate onEndGetDepartmentApproverDelegate;
        
        private System.Threading.SendOrPostCallback onGetDepartmentApproverCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEmployeeLoginDelegate;
        
        private EndOperationDelegate onEndAddEmployeeLoginDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmployeeLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddApproverForDepartmentDelegate;
        
        private EndOperationDelegate onEndAddApproverForDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onAddApproverForDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeSheetDelegate;
        
        private EndOperationDelegate onEndGetTimeSheetDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeSheetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeSheetListDelegate;
        
        private EndOperationDelegate onEndGetTimeSheetListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeSheetListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDayStatusListDelegate;
        
        private EndOperationDelegate onEndGetDayStatusListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDayStatusListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditTimeSheetRecordsDelegate;
        
        private EndOperationDelegate onEndEditTimeSheetRecordsDelegate;
        
        private System.Threading.SendOrPostCallback onEditTimeSheetRecordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeSheetApproveHistoryDelegate;
        
        private EndOperationDelegate onEndGetTimeSheetApproveHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeSheetApproveHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanTimeSheeEditDelegate;
        
        private EndOperationDelegate onEndCanTimeSheeEditDelegate;
        
        private System.Threading.SendOrPostCallback onCanTimeSheeEditCompletedDelegate;
        
        private BeginOperationDelegate onBeginTimeSheetByNameDelegate;
        
        private EndOperationDelegate onEndTimeSheetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onTimeSheetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetYearsForExeptionDaysDelegate;
        
        private EndOperationDelegate onEndGetYearsForExeptionDaysDelegate;
        
        private System.Threading.SendOrPostCallback onGetYearsForExeptionDaysCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWorkScheduleListDelegate;
        
        private EndOperationDelegate onEndGetWorkScheduleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetWorkScheduleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExeptionsDaysInYearDelegate;
        
        private EndOperationDelegate onEndGetExeptionsDaysInYearDelegate;
        
        private System.Threading.SendOrPostCallback onGetExeptionsDaysInYearCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertExeptionsDayDelegate;
        
        private EndOperationDelegate onEndInsertExeptionsDayDelegate;
        
        private System.Threading.SendOrPostCallback onInsertExeptionsDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditExeptionsDayDelegate;
        
        private EndOperationDelegate onEndEditExeptionsDayDelegate;
        
        private System.Threading.SendOrPostCallback onEditExeptionsDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteExeptionsDayDelegate;
        
        private EndOperationDelegate onEndDeleteExeptionsDayDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteExeptionsDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginTimeSheetApprovalDelegate;
        
        private EndOperationDelegate onEndTimeSheetApprovalDelegate;
        
        private System.Threading.SendOrPostCallback onTimeSheetApprovalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApproverForTimeSheetDelegate;
        
        private EndOperationDelegate onEndGetApproverForTimeSheetDelegate;
        
        private System.Threading.SendOrPostCallback onGetApproverForTimeSheetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNextApproverForTimeSheetDelegate;
        
        private EndOperationDelegate onEndGetNextApproverForTimeSheetDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextApproverForTimeSheetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanApproveDelegate;
        
        private EndOperationDelegate onEndCanApproveDelegate;
        
        private System.Threading.SendOrPostCallback onCanApproveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeSheetApproveStepDelegate;
        
        private EndOperationDelegate onEndGetTimeSheetApproveStepDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeSheetApproveStepCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailDelegate;
        
        private EndOperationDelegate onEndSendMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginFioToDatDelegate;
        
        private EndOperationDelegate onEndFioToDatDelegate;
        
        private System.Threading.SendOrPostCallback onFioToDatCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateTimeSheetDelegate;
        
        private EndOperationDelegate onEndCreateTimeSheetDelegate;
        
        private System.Threading.SendOrPostCallback onCreateTimeSheetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateTimeSheetByNameDelegate;
        
        private EndOperationDelegate onEndCreateTimeSheetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onCreateTimeSheetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginRefreshTimeSheetDelegate;
        
        private EndOperationDelegate onEndRefreshTimeSheetDelegate;
        
        private System.Threading.SendOrPostCallback onRefreshTimeSheetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TimeSheetServiceClient() {
        }
        
        public TimeSheetServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimeSheetServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeSheetServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeSheetServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Не удалось установить CookieContainer. Убедитесь, что привязка содержит HttpCooki" +
                            "eContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetCurrentApproverByLoginCompletedEventArgs> GetCurrentApproverByLoginCompleted;
        
        public event System.EventHandler<GetDepartmentsListCompletedEventArgs> GetDepartmentsListCompleted;
        
        public event System.EventHandler<GetDepartmentEmployeesCompletedEventArgs> GetDepartmentEmployeesCompleted;
        
        public event System.EventHandler<GetEmployeesForTimeSheetCompletedEventArgs> GetEmployeesForTimeSheetCompleted;
        
        public event System.EventHandler<GetDepartmentApproverCompletedEventArgs> GetDepartmentApproverCompleted;
        
        public event System.EventHandler<AddEmployeeLoginCompletedEventArgs> AddEmployeeLoginCompleted;
        
        public event System.EventHandler<AddApproverForDepartmentCompletedEventArgs> AddApproverForDepartmentCompleted;
        
        public event System.EventHandler<GetTimeSheetCompletedEventArgs> GetTimeSheetCompleted;
        
        public event System.EventHandler<GetTimeSheetListCompletedEventArgs> GetTimeSheetListCompleted;
        
        public event System.EventHandler<GetDayStatusListCompletedEventArgs> GetDayStatusListCompleted;
        
        public event System.EventHandler<EditTimeSheetRecordsCompletedEventArgs> EditTimeSheetRecordsCompleted;
        
        public event System.EventHandler<GetTimeSheetApproveHistoryCompletedEventArgs> GetTimeSheetApproveHistoryCompleted;
        
        public event System.EventHandler<CanTimeSheeEditCompletedEventArgs> CanTimeSheeEditCompleted;
        
        public event System.EventHandler<TimeSheetByNameCompletedEventArgs> TimeSheetByNameCompleted;
        
        public event System.EventHandler<GetYearsForExeptionDaysCompletedEventArgs> GetYearsForExeptionDaysCompleted;
        
        public event System.EventHandler<GetWorkScheduleListCompletedEventArgs> GetWorkScheduleListCompleted;
        
        public event System.EventHandler<GetExeptionsDaysInYearCompletedEventArgs> GetExeptionsDaysInYearCompleted;
        
        public event System.EventHandler<InsertExeptionsDayCompletedEventArgs> InsertExeptionsDayCompleted;
        
        public event System.EventHandler<EditExeptionsDayCompletedEventArgs> EditExeptionsDayCompleted;
        
        public event System.EventHandler<DeleteExeptionsDayCompletedEventArgs> DeleteExeptionsDayCompleted;
        
        public event System.EventHandler<TimeSheetApprovalCompletedEventArgs> TimeSheetApprovalCompleted;
        
        public event System.EventHandler<GetApproverForTimeSheetCompletedEventArgs> GetApproverForTimeSheetCompleted;
        
        public event System.EventHandler<GetNextApproverForTimeSheetCompletedEventArgs> GetNextApproverForTimeSheetCompleted;
        
        public event System.EventHandler<CanApproveCompletedEventArgs> CanApproveCompleted;
        
        public event System.EventHandler<GetTimeSheetApproveStepCompletedEventArgs> GetTimeSheetApproveStepCompleted;
        
        public event System.EventHandler<SendMailCompletedEventArgs> SendMailCompleted;
        
        public event System.EventHandler<FioToDatCompletedEventArgs> FioToDatCompleted;
        
        public event System.EventHandler<CreateTimeSheetCompletedEventArgs> CreateTimeSheetCompleted;
        
        public event System.EventHandler<CreateTimeSheetByNameCompletedEventArgs> CreateTimeSheetByNameCompleted;
        
        public event System.EventHandler<RefreshTimeSheetCompletedEventArgs> RefreshTimeSheetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetCurrentApproverByLogin(string employeeLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentApproverByLogin(employeeLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoApprover TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetCurrentApproverByLogin(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentApproverByLogin(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentApproverByLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeLogin = ((string)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetCurrentApproverByLogin(employeeLogin, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentApproverByLogin(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoApprover retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetCurrentApproverByLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentApproverByLoginCompleted(object state) {
            if ((this.GetCurrentApproverByLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentApproverByLoginCompleted(this, new GetCurrentApproverByLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentApproverByLoginAsync(string employeeLogin) {
            this.GetCurrentApproverByLoginAsync(employeeLogin, null);
        }
        
        public void GetCurrentApproverByLoginAsync(string employeeLogin, object userState) {
            if ((this.onBeginGetCurrentApproverByLoginDelegate == null)) {
                this.onBeginGetCurrentApproverByLoginDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentApproverByLogin);
            }
            if ((this.onEndGetCurrentApproverByLoginDelegate == null)) {
                this.onEndGetCurrentApproverByLoginDelegate = new EndOperationDelegate(this.OnEndGetCurrentApproverByLogin);
            }
            if ((this.onGetCurrentApproverByLoginCompletedDelegate == null)) {
                this.onGetCurrentApproverByLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentApproverByLoginCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentApproverByLoginDelegate, new object[] {
                        employeeLogin}, this.onEndGetCurrentApproverByLoginDelegate, this.onGetCurrentApproverByLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetDepartmentsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDepartmentsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetDepartmentsList(System.IAsyncResult result) {
            return base.Channel.EndGetDepartmentsList(result);
        }
        
        private System.IAsyncResult OnBeginGetDepartmentsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetDepartmentsList(callback, asyncState);
        }
        
        private object[] OnEndGetDepartmentsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetDepartmentsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDepartmentsListCompleted(object state) {
            if ((this.GetDepartmentsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDepartmentsListCompleted(this, new GetDepartmentsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDepartmentsListAsync() {
            this.GetDepartmentsListAsync(null);
        }
        
        public void GetDepartmentsListAsync(object userState) {
            if ((this.onBeginGetDepartmentsListDelegate == null)) {
                this.onBeginGetDepartmentsListDelegate = new BeginOperationDelegate(this.OnBeginGetDepartmentsList);
            }
            if ((this.onEndGetDepartmentsListDelegate == null)) {
                this.onEndGetDepartmentsListDelegate = new EndOperationDelegate(this.OnEndGetDepartmentsList);
            }
            if ((this.onGetDepartmentsListCompletedDelegate == null)) {
                this.onGetDepartmentsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDepartmentsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDepartmentsListDelegate, null, this.onEndGetDepartmentsListDelegate, this.onGetDepartmentsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetDepartmentEmployees(int idDepartment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDepartmentEmployees(idDepartment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetDepartmentEmployees(System.IAsyncResult result) {
            return base.Channel.EndGetDepartmentEmployees(result);
        }
        
        private System.IAsyncResult OnBeginGetDepartmentEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idDepartment = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetDepartmentEmployees(idDepartment, callback, asyncState);
        }
        
        private object[] OnEndGetDepartmentEmployees(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetDepartmentEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDepartmentEmployeesCompleted(object state) {
            if ((this.GetDepartmentEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDepartmentEmployeesCompleted(this, new GetDepartmentEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDepartmentEmployeesAsync(int idDepartment) {
            this.GetDepartmentEmployeesAsync(idDepartment, null);
        }
        
        public void GetDepartmentEmployeesAsync(int idDepartment, object userState) {
            if ((this.onBeginGetDepartmentEmployeesDelegate == null)) {
                this.onBeginGetDepartmentEmployeesDelegate = new BeginOperationDelegate(this.OnBeginGetDepartmentEmployees);
            }
            if ((this.onEndGetDepartmentEmployeesDelegate == null)) {
                this.onEndGetDepartmentEmployeesDelegate = new EndOperationDelegate(this.OnEndGetDepartmentEmployees);
            }
            if ((this.onGetDepartmentEmployeesCompletedDelegate == null)) {
                this.onGetDepartmentEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDepartmentEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDepartmentEmployeesDelegate, new object[] {
                        idDepartment}, this.onEndGetDepartmentEmployeesDelegate, this.onGetDepartmentEmployeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetEmployeesForTimeSheet(int idDepartment, string employeeLogin, System.DateTime dateStart, System.DateTime dateEnd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployeesForTimeSheet(idDepartment, employeeLogin, dateStart, dateEnd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetEmployeesForTimeSheet(System.IAsyncResult result) {
            return base.Channel.EndGetEmployeesForTimeSheet(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployeesForTimeSheet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idDepartment = ((int)(inValues[0]));
            string employeeLogin = ((string)(inValues[1]));
            System.DateTime dateStart = ((System.DateTime)(inValues[2]));
            System.DateTime dateEnd = ((System.DateTime)(inValues[3]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetEmployeesForTimeSheet(idDepartment, employeeLogin, dateStart, dateEnd, callback, asyncState);
        }
        
        private object[] OnEndGetEmployeesForTimeSheet(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetEmployeesForTimeSheet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeesForTimeSheetCompleted(object state) {
            if ((this.GetEmployeesForTimeSheetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeesForTimeSheetCompleted(this, new GetEmployeesForTimeSheetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeesForTimeSheetAsync(int idDepartment, string employeeLogin, System.DateTime dateStart, System.DateTime dateEnd) {
            this.GetEmployeesForTimeSheetAsync(idDepartment, employeeLogin, dateStart, dateEnd, null);
        }
        
        public void GetEmployeesForTimeSheetAsync(int idDepartment, string employeeLogin, System.DateTime dateStart, System.DateTime dateEnd, object userState) {
            if ((this.onBeginGetEmployeesForTimeSheetDelegate == null)) {
                this.onBeginGetEmployeesForTimeSheetDelegate = new BeginOperationDelegate(this.OnBeginGetEmployeesForTimeSheet);
            }
            if ((this.onEndGetEmployeesForTimeSheetDelegate == null)) {
                this.onEndGetEmployeesForTimeSheetDelegate = new EndOperationDelegate(this.OnEndGetEmployeesForTimeSheet);
            }
            if ((this.onGetEmployeesForTimeSheetCompletedDelegate == null)) {
                this.onGetEmployeesForTimeSheetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeesForTimeSheetCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeesForTimeSheetDelegate, new object[] {
                        idDepartment,
                        employeeLogin,
                        dateStart,
                        dateEnd}, this.onEndGetEmployeesForTimeSheetDelegate, this.onGetEmployeesForTimeSheetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetDepartmentApprover(int idDepartment, int approveNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDepartmentApprover(idDepartment, approveNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoApprover TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetDepartmentApprover(System.IAsyncResult result) {
            return base.Channel.EndGetDepartmentApprover(result);
        }
        
        private System.IAsyncResult OnBeginGetDepartmentApprover(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idDepartment = ((int)(inValues[0]));
            int approveNumber = ((int)(inValues[1]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetDepartmentApprover(idDepartment, approveNumber, callback, asyncState);
        }
        
        private object[] OnEndGetDepartmentApprover(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoApprover retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetDepartmentApprover(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDepartmentApproverCompleted(object state) {
            if ((this.GetDepartmentApproverCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDepartmentApproverCompleted(this, new GetDepartmentApproverCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDepartmentApproverAsync(int idDepartment, int approveNumber) {
            this.GetDepartmentApproverAsync(idDepartment, approveNumber, null);
        }
        
        public void GetDepartmentApproverAsync(int idDepartment, int approveNumber, object userState) {
            if ((this.onBeginGetDepartmentApproverDelegate == null)) {
                this.onBeginGetDepartmentApproverDelegate = new BeginOperationDelegate(this.OnBeginGetDepartmentApprover);
            }
            if ((this.onEndGetDepartmentApproverDelegate == null)) {
                this.onEndGetDepartmentApproverDelegate = new EndOperationDelegate(this.OnEndGetDepartmentApprover);
            }
            if ((this.onGetDepartmentApproverCompletedDelegate == null)) {
                this.onGetDepartmentApproverCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDepartmentApproverCompleted);
            }
            base.InvokeAsync(this.onBeginGetDepartmentApproverDelegate, new object[] {
                        idDepartment,
                        approveNumber}, this.onEndGetDepartmentApproverDelegate, this.onGetDepartmentApproverCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginAddEmployeeLogin(int idEmployee, string login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmployeeLogin(idEmployee, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndAddEmployeeLogin(System.IAsyncResult result) {
            return base.Channel.EndAddEmployeeLogin(result);
        }
        
        private System.IAsyncResult OnBeginAddEmployeeLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idEmployee = ((int)(inValues[0]));
            string login = ((string)(inValues[1]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginAddEmployeeLogin(idEmployee, login, callback, asyncState);
        }
        
        private object[] OnEndAddEmployeeLogin(System.IAsyncResult result) {
            bool retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndAddEmployeeLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddEmployeeLoginCompleted(object state) {
            if ((this.AddEmployeeLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmployeeLoginCompleted(this, new AddEmployeeLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmployeeLoginAsync(int idEmployee, string login) {
            this.AddEmployeeLoginAsync(idEmployee, login, null);
        }
        
        public void AddEmployeeLoginAsync(int idEmployee, string login, object userState) {
            if ((this.onBeginAddEmployeeLoginDelegate == null)) {
                this.onBeginAddEmployeeLoginDelegate = new BeginOperationDelegate(this.OnBeginAddEmployeeLogin);
            }
            if ((this.onEndAddEmployeeLoginDelegate == null)) {
                this.onEndAddEmployeeLoginDelegate = new EndOperationDelegate(this.OnEndAddEmployeeLogin);
            }
            if ((this.onAddEmployeeLoginCompletedDelegate == null)) {
                this.onAddEmployeeLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmployeeLoginCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmployeeLoginDelegate, new object[] {
                        idEmployee,
                        login}, this.onEndAddEmployeeLoginDelegate, this.onAddEmployeeLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginAddApproverForDepartment(int idEmployee, int idDepartment, int approveNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddApproverForDepartment(idEmployee, idDepartment, approveNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndAddApproverForDepartment(System.IAsyncResult result) {
            return base.Channel.EndAddApproverForDepartment(result);
        }
        
        private System.IAsyncResult OnBeginAddApproverForDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idEmployee = ((int)(inValues[0]));
            int idDepartment = ((int)(inValues[1]));
            int approveNumber = ((int)(inValues[2]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginAddApproverForDepartment(idEmployee, idDepartment, approveNumber, callback, asyncState);
        }
        
        private object[] OnEndAddApproverForDepartment(System.IAsyncResult result) {
            bool retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndAddApproverForDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddApproverForDepartmentCompleted(object state) {
            if ((this.AddApproverForDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddApproverForDepartmentCompleted(this, new AddApproverForDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddApproverForDepartmentAsync(int idEmployee, int idDepartment, int approveNumber) {
            this.AddApproverForDepartmentAsync(idEmployee, idDepartment, approveNumber, null);
        }
        
        public void AddApproverForDepartmentAsync(int idEmployee, int idDepartment, int approveNumber, object userState) {
            if ((this.onBeginAddApproverForDepartmentDelegate == null)) {
                this.onBeginAddApproverForDepartmentDelegate = new BeginOperationDelegate(this.OnBeginAddApproverForDepartment);
            }
            if ((this.onEndAddApproverForDepartmentDelegate == null)) {
                this.onEndAddApproverForDepartmentDelegate = new EndOperationDelegate(this.OnEndAddApproverForDepartment);
            }
            if ((this.onAddApproverForDepartmentCompletedDelegate == null)) {
                this.onAddApproverForDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddApproverForDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginAddApproverForDepartmentDelegate, new object[] {
                        idEmployee,
                        idDepartment,
                        approveNumber}, this.onEndAddApproverForDepartmentDelegate, this.onAddApproverForDepartmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeSheet(idTimeSheet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetTimeSheet(System.IAsyncResult result) {
            return base.Channel.EndGetTimeSheet(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeSheet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetTimeSheet(idTimeSheet, callback, asyncState);
        }
        
        private object[] OnEndGetTimeSheet(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetTimeSheet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeSheetCompleted(object state) {
            if ((this.GetTimeSheetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeSheetCompleted(this, new GetTimeSheetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeSheetAsync(int idTimeSheet) {
            this.GetTimeSheetAsync(idTimeSheet, null);
        }
        
        public void GetTimeSheetAsync(int idTimeSheet, object userState) {
            if ((this.onBeginGetTimeSheetDelegate == null)) {
                this.onBeginGetTimeSheetDelegate = new BeginOperationDelegate(this.OnBeginGetTimeSheet);
            }
            if ((this.onEndGetTimeSheetDelegate == null)) {
                this.onEndGetTimeSheetDelegate = new EndOperationDelegate(this.OnEndGetTimeSheet);
            }
            if ((this.onGetTimeSheetCompletedDelegate == null)) {
                this.onGetTimeSheetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeSheetCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeSheetDelegate, new object[] {
                        idTimeSheet}, this.onEndGetTimeSheetDelegate, this.onGetTimeSheetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetTimeSheetList(int idDepartment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeSheetList(idDepartment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetTimeSheetList(System.IAsyncResult result) {
            return base.Channel.EndGetTimeSheetList(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeSheetList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idDepartment = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetTimeSheetList(idDepartment, callback, asyncState);
        }
        
        private object[] OnEndGetTimeSheetList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetTimeSheetList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeSheetListCompleted(object state) {
            if ((this.GetTimeSheetListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeSheetListCompleted(this, new GetTimeSheetListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeSheetListAsync(int idDepartment) {
            this.GetTimeSheetListAsync(idDepartment, null);
        }
        
        public void GetTimeSheetListAsync(int idDepartment, object userState) {
            if ((this.onBeginGetTimeSheetListDelegate == null)) {
                this.onBeginGetTimeSheetListDelegate = new BeginOperationDelegate(this.OnBeginGetTimeSheetList);
            }
            if ((this.onEndGetTimeSheetListDelegate == null)) {
                this.onEndGetTimeSheetListDelegate = new EndOperationDelegate(this.OnEndGetTimeSheetList);
            }
            if ((this.onGetTimeSheetListCompletedDelegate == null)) {
                this.onGetTimeSheetListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeSheetListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeSheetListDelegate, new object[] {
                        idDepartment}, this.onEndGetTimeSheetListDelegate, this.onGetTimeSheetListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetDayStatusList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDayStatusList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetDayStatusList(System.IAsyncResult result) {
            return base.Channel.EndGetDayStatusList(result);
        }
        
        private System.IAsyncResult OnBeginGetDayStatusList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetDayStatusList(callback, asyncState);
        }
        
        private object[] OnEndGetDayStatusList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetDayStatusList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDayStatusListCompleted(object state) {
            if ((this.GetDayStatusListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDayStatusListCompleted(this, new GetDayStatusListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDayStatusListAsync() {
            this.GetDayStatusListAsync(null);
        }
        
        public void GetDayStatusListAsync(object userState) {
            if ((this.onBeginGetDayStatusListDelegate == null)) {
                this.onBeginGetDayStatusListDelegate = new BeginOperationDelegate(this.OnBeginGetDayStatusList);
            }
            if ((this.onEndGetDayStatusListDelegate == null)) {
                this.onEndGetDayStatusListDelegate = new EndOperationDelegate(this.OnEndGetDayStatusList);
            }
            if ((this.onGetDayStatusListCompletedDelegate == null)) {
                this.onGetDayStatusListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDayStatusListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDayStatusListDelegate, null, this.onEndGetDayStatusListDelegate, this.onGetDayStatusListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginEditTimeSheetRecords(System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> recordsForEdit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditTimeSheetRecords(recordsForEdit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndEditTimeSheetRecords(System.IAsyncResult result) {
            return base.Channel.EndEditTimeSheetRecords(result);
        }
        
        private System.IAsyncResult OnBeginEditTimeSheetRecords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> recordsForEdit = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord>)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginEditTimeSheetRecords(recordsForEdit, callback, asyncState);
        }
        
        private object[] OnEndEditTimeSheetRecords(System.IAsyncResult result) {
            bool retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndEditTimeSheetRecords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditTimeSheetRecordsCompleted(object state) {
            if ((this.EditTimeSheetRecordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditTimeSheetRecordsCompleted(this, new EditTimeSheetRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditTimeSheetRecordsAsync(System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> recordsForEdit) {
            this.EditTimeSheetRecordsAsync(recordsForEdit, null);
        }
        
        public void EditTimeSheetRecordsAsync(System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> recordsForEdit, object userState) {
            if ((this.onBeginEditTimeSheetRecordsDelegate == null)) {
                this.onBeginEditTimeSheetRecordsDelegate = new BeginOperationDelegate(this.OnBeginEditTimeSheetRecords);
            }
            if ((this.onEndEditTimeSheetRecordsDelegate == null)) {
                this.onEndEditTimeSheetRecordsDelegate = new EndOperationDelegate(this.OnEndEditTimeSheetRecords);
            }
            if ((this.onEditTimeSheetRecordsCompletedDelegate == null)) {
                this.onEditTimeSheetRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditTimeSheetRecordsCompleted);
            }
            base.InvokeAsync(this.onBeginEditTimeSheetRecordsDelegate, new object[] {
                        recordsForEdit}, this.onEndEditTimeSheetRecordsDelegate, this.onEditTimeSheetRecordsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetTimeSheetApproveHistory(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeSheetApproveHistory(idTimeSheet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetTimeSheetApproveHistory(System.IAsyncResult result) {
            return base.Channel.EndGetTimeSheetApproveHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeSheetApproveHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetTimeSheetApproveHistory(idTimeSheet, callback, asyncState);
        }
        
        private object[] OnEndGetTimeSheetApproveHistory(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetTimeSheetApproveHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeSheetApproveHistoryCompleted(object state) {
            if ((this.GetTimeSheetApproveHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeSheetApproveHistoryCompleted(this, new GetTimeSheetApproveHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeSheetApproveHistoryAsync(int idTimeSheet) {
            this.GetTimeSheetApproveHistoryAsync(idTimeSheet, null);
        }
        
        public void GetTimeSheetApproveHistoryAsync(int idTimeSheet, object userState) {
            if ((this.onBeginGetTimeSheetApproveHistoryDelegate == null)) {
                this.onBeginGetTimeSheetApproveHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetTimeSheetApproveHistory);
            }
            if ((this.onEndGetTimeSheetApproveHistoryDelegate == null)) {
                this.onEndGetTimeSheetApproveHistoryDelegate = new EndOperationDelegate(this.OnEndGetTimeSheetApproveHistory);
            }
            if ((this.onGetTimeSheetApproveHistoryCompletedDelegate == null)) {
                this.onGetTimeSheetApproveHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeSheetApproveHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeSheetApproveHistoryDelegate, new object[] {
                        idTimeSheet}, this.onEndGetTimeSheetApproveHistoryDelegate, this.onGetTimeSheetApproveHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginCanTimeSheeEdit(System.Guid idRecord, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanTimeSheeEdit(idRecord, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndCanTimeSheeEdit(System.IAsyncResult result) {
            return base.Channel.EndCanTimeSheeEdit(result);
        }
        
        private System.IAsyncResult OnBeginCanTimeSheeEdit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid idRecord = ((System.Guid)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginCanTimeSheeEdit(idRecord, callback, asyncState);
        }
        
        private object[] OnEndCanTimeSheeEdit(System.IAsyncResult result) {
            bool retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndCanTimeSheeEdit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCanTimeSheeEditCompleted(object state) {
            if ((this.CanTimeSheeEditCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanTimeSheeEditCompleted(this, new CanTimeSheeEditCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanTimeSheeEditAsync(System.Guid idRecord) {
            this.CanTimeSheeEditAsync(idRecord, null);
        }
        
        public void CanTimeSheeEditAsync(System.Guid idRecord, object userState) {
            if ((this.onBeginCanTimeSheeEditDelegate == null)) {
                this.onBeginCanTimeSheeEditDelegate = new BeginOperationDelegate(this.OnBeginCanTimeSheeEdit);
            }
            if ((this.onEndCanTimeSheeEditDelegate == null)) {
                this.onEndCanTimeSheeEditDelegate = new EndOperationDelegate(this.OnEndCanTimeSheeEdit);
            }
            if ((this.onCanTimeSheeEditCompletedDelegate == null)) {
                this.onCanTimeSheeEditCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanTimeSheeEditCompleted);
            }
            base.InvokeAsync(this.onBeginCanTimeSheeEditDelegate, new object[] {
                        idRecord}, this.onEndCanTimeSheeEditDelegate, this.onCanTimeSheeEditCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginTimeSheetByName(TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet timeSheet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTimeSheetByName(timeSheet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoMessage TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndTimeSheetByName(System.IAsyncResult result) {
            return base.Channel.EndTimeSheetByName(result);
        }
        
        private System.IAsyncResult OnBeginTimeSheetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet timeSheet = ((TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginTimeSheetByName(timeSheet, callback, asyncState);
        }
        
        private object[] OnEndTimeSheetByName(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoMessage retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndTimeSheetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTimeSheetByNameCompleted(object state) {
            if ((this.TimeSheetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TimeSheetByNameCompleted(this, new TimeSheetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TimeSheetByNameAsync(TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet timeSheet) {
            this.TimeSheetByNameAsync(timeSheet, null);
        }
        
        public void TimeSheetByNameAsync(TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet timeSheet, object userState) {
            if ((this.onBeginTimeSheetByNameDelegate == null)) {
                this.onBeginTimeSheetByNameDelegate = new BeginOperationDelegate(this.OnBeginTimeSheetByName);
            }
            if ((this.onEndTimeSheetByNameDelegate == null)) {
                this.onEndTimeSheetByNameDelegate = new EndOperationDelegate(this.OnEndTimeSheetByName);
            }
            if ((this.onTimeSheetByNameCompletedDelegate == null)) {
                this.onTimeSheetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTimeSheetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginTimeSheetByNameDelegate, new object[] {
                        timeSheet}, this.onEndTimeSheetByNameDelegate, this.onTimeSheetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetYearsForExeptionDays(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetYearsForExeptionDays(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetYearsForExeptionDays(System.IAsyncResult result) {
            return base.Channel.EndGetYearsForExeptionDays(result);
        }
        
        private System.IAsyncResult OnBeginGetYearsForExeptionDays(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetYearsForExeptionDays(callback, asyncState);
        }
        
        private object[] OnEndGetYearsForExeptionDays(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetYearsForExeptionDays(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetYearsForExeptionDaysCompleted(object state) {
            if ((this.GetYearsForExeptionDaysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetYearsForExeptionDaysCompleted(this, new GetYearsForExeptionDaysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetYearsForExeptionDaysAsync() {
            this.GetYearsForExeptionDaysAsync(null);
        }
        
        public void GetYearsForExeptionDaysAsync(object userState) {
            if ((this.onBeginGetYearsForExeptionDaysDelegate == null)) {
                this.onBeginGetYearsForExeptionDaysDelegate = new BeginOperationDelegate(this.OnBeginGetYearsForExeptionDays);
            }
            if ((this.onEndGetYearsForExeptionDaysDelegate == null)) {
                this.onEndGetYearsForExeptionDaysDelegate = new EndOperationDelegate(this.OnEndGetYearsForExeptionDays);
            }
            if ((this.onGetYearsForExeptionDaysCompletedDelegate == null)) {
                this.onGetYearsForExeptionDaysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetYearsForExeptionDaysCompleted);
            }
            base.InvokeAsync(this.onBeginGetYearsForExeptionDaysDelegate, null, this.onEndGetYearsForExeptionDaysDelegate, this.onGetYearsForExeptionDaysCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetWorkScheduleList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWorkScheduleList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetWorkScheduleList(System.IAsyncResult result) {
            return base.Channel.EndGetWorkScheduleList(result);
        }
        
        private System.IAsyncResult OnBeginGetWorkScheduleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetWorkScheduleList(callback, asyncState);
        }
        
        private object[] OnEndGetWorkScheduleList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetWorkScheduleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWorkScheduleListCompleted(object state) {
            if ((this.GetWorkScheduleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWorkScheduleListCompleted(this, new GetWorkScheduleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWorkScheduleListAsync() {
            this.GetWorkScheduleListAsync(null);
        }
        
        public void GetWorkScheduleListAsync(object userState) {
            if ((this.onBeginGetWorkScheduleListDelegate == null)) {
                this.onBeginGetWorkScheduleListDelegate = new BeginOperationDelegate(this.OnBeginGetWorkScheduleList);
            }
            if ((this.onEndGetWorkScheduleListDelegate == null)) {
                this.onEndGetWorkScheduleListDelegate = new EndOperationDelegate(this.OnEndGetWorkScheduleList);
            }
            if ((this.onGetWorkScheduleListCompletedDelegate == null)) {
                this.onGetWorkScheduleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWorkScheduleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetWorkScheduleListDelegate, null, this.onEndGetWorkScheduleListDelegate, this.onGetWorkScheduleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetExeptionsDaysInYear(int year, int idWprkSchedule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExeptionsDaysInYear(year, idWprkSchedule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay> TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetExeptionsDaysInYear(System.IAsyncResult result) {
            return base.Channel.EndGetExeptionsDaysInYear(result);
        }
        
        private System.IAsyncResult OnBeginGetExeptionsDaysInYear(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int year = ((int)(inValues[0]));
            int idWprkSchedule = ((int)(inValues[1]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetExeptionsDaysInYear(year, idWprkSchedule, callback, asyncState);
        }
        
        private object[] OnEndGetExeptionsDaysInYear(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay> retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetExeptionsDaysInYear(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExeptionsDaysInYearCompleted(object state) {
            if ((this.GetExeptionsDaysInYearCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExeptionsDaysInYearCompleted(this, new GetExeptionsDaysInYearCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExeptionsDaysInYearAsync(int year, int idWprkSchedule) {
            this.GetExeptionsDaysInYearAsync(year, idWprkSchedule, null);
        }
        
        public void GetExeptionsDaysInYearAsync(int year, int idWprkSchedule, object userState) {
            if ((this.onBeginGetExeptionsDaysInYearDelegate == null)) {
                this.onBeginGetExeptionsDaysInYearDelegate = new BeginOperationDelegate(this.OnBeginGetExeptionsDaysInYear);
            }
            if ((this.onEndGetExeptionsDaysInYearDelegate == null)) {
                this.onEndGetExeptionsDaysInYearDelegate = new EndOperationDelegate(this.OnEndGetExeptionsDaysInYear);
            }
            if ((this.onGetExeptionsDaysInYearCompletedDelegate == null)) {
                this.onGetExeptionsDaysInYearCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExeptionsDaysInYearCompleted);
            }
            base.InvokeAsync(this.onBeginGetExeptionsDaysInYearDelegate, new object[] {
                        year,
                        idWprkSchedule}, this.onEndGetExeptionsDaysInYearDelegate, this.onGetExeptionsDaysInYearCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginInsertExeptionsDay(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertExeptionsDay(exceptionDay, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoMessage TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndInsertExeptionsDay(System.IAsyncResult result) {
            return base.Channel.EndInsertExeptionsDay(result);
        }
        
        private System.IAsyncResult OnBeginInsertExeptionsDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay = ((TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginInsertExeptionsDay(exceptionDay, callback, asyncState);
        }
        
        private object[] OnEndInsertExeptionsDay(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoMessage retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndInsertExeptionsDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertExeptionsDayCompleted(object state) {
            if ((this.InsertExeptionsDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertExeptionsDayCompleted(this, new InsertExeptionsDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertExeptionsDayAsync(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay) {
            this.InsertExeptionsDayAsync(exceptionDay, null);
        }
        
        public void InsertExeptionsDayAsync(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, object userState) {
            if ((this.onBeginInsertExeptionsDayDelegate == null)) {
                this.onBeginInsertExeptionsDayDelegate = new BeginOperationDelegate(this.OnBeginInsertExeptionsDay);
            }
            if ((this.onEndInsertExeptionsDayDelegate == null)) {
                this.onEndInsertExeptionsDayDelegate = new EndOperationDelegate(this.OnEndInsertExeptionsDay);
            }
            if ((this.onInsertExeptionsDayCompletedDelegate == null)) {
                this.onInsertExeptionsDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertExeptionsDayCompleted);
            }
            base.InvokeAsync(this.onBeginInsertExeptionsDayDelegate, new object[] {
                        exceptionDay}, this.onEndInsertExeptionsDayDelegate, this.onInsertExeptionsDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginEditExeptionsDay(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditExeptionsDay(exceptionDay, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoMessage TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndEditExeptionsDay(System.IAsyncResult result) {
            return base.Channel.EndEditExeptionsDay(result);
        }
        
        private System.IAsyncResult OnBeginEditExeptionsDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay = ((TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginEditExeptionsDay(exceptionDay, callback, asyncState);
        }
        
        private object[] OnEndEditExeptionsDay(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoMessage retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndEditExeptionsDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditExeptionsDayCompleted(object state) {
            if ((this.EditExeptionsDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditExeptionsDayCompleted(this, new EditExeptionsDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditExeptionsDayAsync(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay) {
            this.EditExeptionsDayAsync(exceptionDay, null);
        }
        
        public void EditExeptionsDayAsync(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, object userState) {
            if ((this.onBeginEditExeptionsDayDelegate == null)) {
                this.onBeginEditExeptionsDayDelegate = new BeginOperationDelegate(this.OnBeginEditExeptionsDay);
            }
            if ((this.onEndEditExeptionsDayDelegate == null)) {
                this.onEndEditExeptionsDayDelegate = new EndOperationDelegate(this.OnEndEditExeptionsDay);
            }
            if ((this.onEditExeptionsDayCompletedDelegate == null)) {
                this.onEditExeptionsDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditExeptionsDayCompleted);
            }
            base.InvokeAsync(this.onBeginEditExeptionsDayDelegate, new object[] {
                        exceptionDay}, this.onEndEditExeptionsDayDelegate, this.onEditExeptionsDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginDeleteExeptionsDay(int idExceptionDay, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteExeptionsDay(idExceptionDay, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoMessage TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndDeleteExeptionsDay(System.IAsyncResult result) {
            return base.Channel.EndDeleteExeptionsDay(result);
        }
        
        private System.IAsyncResult OnBeginDeleteExeptionsDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idExceptionDay = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginDeleteExeptionsDay(idExceptionDay, callback, asyncState);
        }
        
        private object[] OnEndDeleteExeptionsDay(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoMessage retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndDeleteExeptionsDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteExeptionsDayCompleted(object state) {
            if ((this.DeleteExeptionsDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteExeptionsDayCompleted(this, new DeleteExeptionsDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteExeptionsDayAsync(int idExceptionDay) {
            this.DeleteExeptionsDayAsync(idExceptionDay, null);
        }
        
        public void DeleteExeptionsDayAsync(int idExceptionDay, object userState) {
            if ((this.onBeginDeleteExeptionsDayDelegate == null)) {
                this.onBeginDeleteExeptionsDayDelegate = new BeginOperationDelegate(this.OnBeginDeleteExeptionsDay);
            }
            if ((this.onEndDeleteExeptionsDayDelegate == null)) {
                this.onEndDeleteExeptionsDayDelegate = new EndOperationDelegate(this.OnEndDeleteExeptionsDay);
            }
            if ((this.onDeleteExeptionsDayCompletedDelegate == null)) {
                this.onDeleteExeptionsDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteExeptionsDayCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteExeptionsDayDelegate, new object[] {
                        idExceptionDay}, this.onEndDeleteExeptionsDayDelegate, this.onDeleteExeptionsDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginTimeSheetApproval(int idTimeSheet, string employeeLogin, bool result, string comments, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTimeSheetApproval(idTimeSheet, employeeLogin, result, comments, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndTimeSheetApproval(System.IAsyncResult result) {
            return base.Channel.EndTimeSheetApproval(result);
        }
        
        private System.IAsyncResult OnBeginTimeSheetApproval(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            string employeeLogin = ((string)(inValues[1]));
            bool result = ((bool)(inValues[2]));
            string comments = ((string)(inValues[3]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginTimeSheetApproval(idTimeSheet, employeeLogin, result, comments, callback, asyncState);
        }
        
        private object[] OnEndTimeSheetApproval(System.IAsyncResult result) {
            bool retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndTimeSheetApproval(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTimeSheetApprovalCompleted(object state) {
            if ((this.TimeSheetApprovalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TimeSheetApprovalCompleted(this, new TimeSheetApprovalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TimeSheetApprovalAsync(int idTimeSheet, string employeeLogin, bool result, string comments) {
            this.TimeSheetApprovalAsync(idTimeSheet, employeeLogin, result, comments, null);
        }
        
        public void TimeSheetApprovalAsync(int idTimeSheet, string employeeLogin, bool result, string comments, object userState) {
            if ((this.onBeginTimeSheetApprovalDelegate == null)) {
                this.onBeginTimeSheetApprovalDelegate = new BeginOperationDelegate(this.OnBeginTimeSheetApproval);
            }
            if ((this.onEndTimeSheetApprovalDelegate == null)) {
                this.onEndTimeSheetApprovalDelegate = new EndOperationDelegate(this.OnEndTimeSheetApproval);
            }
            if ((this.onTimeSheetApprovalCompletedDelegate == null)) {
                this.onTimeSheetApprovalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTimeSheetApprovalCompleted);
            }
            base.InvokeAsync(this.onBeginTimeSheetApprovalDelegate, new object[] {
                        idTimeSheet,
                        employeeLogin,
                        result,
                        comments}, this.onEndTimeSheetApprovalDelegate, this.onTimeSheetApprovalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetApproverForTimeSheet(int idTimeSheet, int approverNum, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApproverForTimeSheet(idTimeSheet, approverNum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoApprover TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetApproverForTimeSheet(System.IAsyncResult result) {
            return base.Channel.EndGetApproverForTimeSheet(result);
        }
        
        private System.IAsyncResult OnBeginGetApproverForTimeSheet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            int approverNum = ((int)(inValues[1]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetApproverForTimeSheet(idTimeSheet, approverNum, callback, asyncState);
        }
        
        private object[] OnEndGetApproverForTimeSheet(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoApprover retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetApproverForTimeSheet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApproverForTimeSheetCompleted(object state) {
            if ((this.GetApproverForTimeSheetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApproverForTimeSheetCompleted(this, new GetApproverForTimeSheetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApproverForTimeSheetAsync(int idTimeSheet, int approverNum) {
            this.GetApproverForTimeSheetAsync(idTimeSheet, approverNum, null);
        }
        
        public void GetApproverForTimeSheetAsync(int idTimeSheet, int approverNum, object userState) {
            if ((this.onBeginGetApproverForTimeSheetDelegate == null)) {
                this.onBeginGetApproverForTimeSheetDelegate = new BeginOperationDelegate(this.OnBeginGetApproverForTimeSheet);
            }
            if ((this.onEndGetApproverForTimeSheetDelegate == null)) {
                this.onEndGetApproverForTimeSheetDelegate = new EndOperationDelegate(this.OnEndGetApproverForTimeSheet);
            }
            if ((this.onGetApproverForTimeSheetCompletedDelegate == null)) {
                this.onGetApproverForTimeSheetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApproverForTimeSheetCompleted);
            }
            base.InvokeAsync(this.onBeginGetApproverForTimeSheetDelegate, new object[] {
                        idTimeSheet,
                        approverNum}, this.onEndGetApproverForTimeSheetDelegate, this.onGetApproverForTimeSheetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetNextApproverForTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextApproverForTimeSheet(idTimeSheet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoApprover TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetNextApproverForTimeSheet(System.IAsyncResult result) {
            return base.Channel.EndGetNextApproverForTimeSheet(result);
        }
        
        private System.IAsyncResult OnBeginGetNextApproverForTimeSheet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetNextApproverForTimeSheet(idTimeSheet, callback, asyncState);
        }
        
        private object[] OnEndGetNextApproverForTimeSheet(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoApprover retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetNextApproverForTimeSheet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextApproverForTimeSheetCompleted(object state) {
            if ((this.GetNextApproverForTimeSheetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextApproverForTimeSheetCompleted(this, new GetNextApproverForTimeSheetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextApproverForTimeSheetAsync(int idTimeSheet) {
            this.GetNextApproverForTimeSheetAsync(idTimeSheet, null);
        }
        
        public void GetNextApproverForTimeSheetAsync(int idTimeSheet, object userState) {
            if ((this.onBeginGetNextApproverForTimeSheetDelegate == null)) {
                this.onBeginGetNextApproverForTimeSheetDelegate = new BeginOperationDelegate(this.OnBeginGetNextApproverForTimeSheet);
            }
            if ((this.onEndGetNextApproverForTimeSheetDelegate == null)) {
                this.onEndGetNextApproverForTimeSheetDelegate = new EndOperationDelegate(this.OnEndGetNextApproverForTimeSheet);
            }
            if ((this.onGetNextApproverForTimeSheetCompletedDelegate == null)) {
                this.onGetNextApproverForTimeSheetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextApproverForTimeSheetCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextApproverForTimeSheetDelegate, new object[] {
                        idTimeSheet}, this.onEndGetNextApproverForTimeSheetDelegate, this.onGetNextApproverForTimeSheetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginCanApprove(int idTimeSheet, string employeeLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanApprove(idTimeSheet, employeeLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndCanApprove(System.IAsyncResult result) {
            return base.Channel.EndCanApprove(result);
        }
        
        private System.IAsyncResult OnBeginCanApprove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            string employeeLogin = ((string)(inValues[1]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginCanApprove(idTimeSheet, employeeLogin, callback, asyncState);
        }
        
        private object[] OnEndCanApprove(System.IAsyncResult result) {
            bool retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndCanApprove(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCanApproveCompleted(object state) {
            if ((this.CanApproveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanApproveCompleted(this, new CanApproveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanApproveAsync(int idTimeSheet, string employeeLogin) {
            this.CanApproveAsync(idTimeSheet, employeeLogin, null);
        }
        
        public void CanApproveAsync(int idTimeSheet, string employeeLogin, object userState) {
            if ((this.onBeginCanApproveDelegate == null)) {
                this.onBeginCanApproveDelegate = new BeginOperationDelegate(this.OnBeginCanApprove);
            }
            if ((this.onEndCanApproveDelegate == null)) {
                this.onEndCanApproveDelegate = new EndOperationDelegate(this.OnEndCanApprove);
            }
            if ((this.onCanApproveCompletedDelegate == null)) {
                this.onCanApproveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanApproveCompleted);
            }
            base.InvokeAsync(this.onBeginCanApproveDelegate, new object[] {
                        idTimeSheet,
                        employeeLogin}, this.onEndCanApproveDelegate, this.onCanApproveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginGetTimeSheetApproveStep(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeSheetApproveStep(idTimeSheet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndGetTimeSheetApproveStep(System.IAsyncResult result) {
            return base.Channel.EndGetTimeSheetApproveStep(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeSheetApproveStep(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginGetTimeSheetApproveStep(idTimeSheet, callback, asyncState);
        }
        
        private object[] OnEndGetTimeSheetApproveStep(System.IAsyncResult result) {
            int retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndGetTimeSheetApproveStep(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeSheetApproveStepCompleted(object state) {
            if ((this.GetTimeSheetApproveStepCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeSheetApproveStepCompleted(this, new GetTimeSheetApproveStepCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeSheetApproveStepAsync(int idTimeSheet) {
            this.GetTimeSheetApproveStepAsync(idTimeSheet, null);
        }
        
        public void GetTimeSheetApproveStepAsync(int idTimeSheet, object userState) {
            if ((this.onBeginGetTimeSheetApproveStepDelegate == null)) {
                this.onBeginGetTimeSheetApproveStepDelegate = new BeginOperationDelegate(this.OnBeginGetTimeSheetApproveStep);
            }
            if ((this.onEndGetTimeSheetApproveStepDelegate == null)) {
                this.onEndGetTimeSheetApproveStepDelegate = new EndOperationDelegate(this.OnEndGetTimeSheetApproveStep);
            }
            if ((this.onGetTimeSheetApproveStepCompletedDelegate == null)) {
                this.onGetTimeSheetApproveStepCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeSheetApproveStepCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeSheetApproveStepDelegate, new object[] {
                        idTimeSheet}, this.onEndGetTimeSheetApproveStepDelegate, this.onGetTimeSheetApproveStepCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginSendMail(TimeSheetClient.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMail(approver, idTimeSheet, approveResult, comment, isApproveFinished, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndSendMail(System.IAsyncResult result) {
            return base.Channel.EndSendMail(result);
        }
        
        private System.IAsyncResult OnBeginSendMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TimeSheetClient.TimeSheetServiceReference.DtoApprover approver = ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(inValues[0]));
            int idTimeSheet = ((int)(inValues[1]));
            bool approveResult = ((bool)(inValues[2]));
            string comment = ((string)(inValues[3]));
            bool isApproveFinished = ((bool)(inValues[4]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginSendMail(approver, idTimeSheet, approveResult, comment, isApproveFinished, callback, asyncState);
        }
        
        private object[] OnEndSendMail(System.IAsyncResult result) {
            bool retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndSendMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendMailCompleted(object state) {
            if ((this.SendMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailAsync(TimeSheetClient.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished) {
            this.SendMailAsync(approver, idTimeSheet, approveResult, comment, isApproveFinished, null);
        }
        
        public void SendMailAsync(TimeSheetClient.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished, object userState) {
            if ((this.onBeginSendMailDelegate == null)) {
                this.onBeginSendMailDelegate = new BeginOperationDelegate(this.OnBeginSendMail);
            }
            if ((this.onEndSendMailDelegate == null)) {
                this.onEndSendMailDelegate = new EndOperationDelegate(this.OnEndSendMail);
            }
            if ((this.onSendMailCompletedDelegate == null)) {
                this.onSendMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailDelegate, new object[] {
                        approver,
                        idTimeSheet,
                        approveResult,
                        comment,
                        isApproveFinished}, this.onEndSendMailDelegate, this.onSendMailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginFioToDat(string fio, System.Nullable<int> sex, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFioToDat(fio, sex, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndFioToDat(System.IAsyncResult result) {
            return base.Channel.EndFioToDat(result);
        }
        
        private System.IAsyncResult OnBeginFioToDat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fio = ((string)(inValues[0]));
            System.Nullable<int> sex = ((System.Nullable<int>)(inValues[1]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginFioToDat(fio, sex, callback, asyncState);
        }
        
        private object[] OnEndFioToDat(System.IAsyncResult result) {
            string retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndFioToDat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFioToDatCompleted(object state) {
            if ((this.FioToDatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FioToDatCompleted(this, new FioToDatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FioToDatAsync(string fio, System.Nullable<int> sex) {
            this.FioToDatAsync(fio, sex, null);
        }
        
        public void FioToDatAsync(string fio, System.Nullable<int> sex, object userState) {
            if ((this.onBeginFioToDatDelegate == null)) {
                this.onBeginFioToDatDelegate = new BeginOperationDelegate(this.OnBeginFioToDat);
            }
            if ((this.onEndFioToDatDelegate == null)) {
                this.onEndFioToDatDelegate = new EndOperationDelegate(this.OnEndFioToDat);
            }
            if ((this.onFioToDatCompletedDelegate == null)) {
                this.onFioToDatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFioToDatCompleted);
            }
            base.InvokeAsync(this.onBeginFioToDatDelegate, new object[] {
                        fio,
                        sex}, this.onEndFioToDatDelegate, this.onFioToDatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginCreateTimeSheet(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateTimeSheet(idDepartment, dateBeginPeriod, dateEndPeriod, employeeLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoMessage TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndCreateTimeSheet(System.IAsyncResult result) {
            return base.Channel.EndCreateTimeSheet(result);
        }
        
        private System.IAsyncResult OnBeginCreateTimeSheet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idDepartment = ((int)(inValues[0]));
            System.DateTime dateBeginPeriod = ((System.DateTime)(inValues[1]));
            System.DateTime dateEndPeriod = ((System.DateTime)(inValues[2]));
            string employeeLogin = ((string)(inValues[3]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginCreateTimeSheet(idDepartment, dateBeginPeriod, dateEndPeriod, employeeLogin, callback, asyncState);
        }
        
        private object[] OnEndCreateTimeSheet(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoMessage retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndCreateTimeSheet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateTimeSheetCompleted(object state) {
            if ((this.CreateTimeSheetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateTimeSheetCompleted(this, new CreateTimeSheetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateTimeSheetAsync(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin) {
            this.CreateTimeSheetAsync(idDepartment, dateBeginPeriod, dateEndPeriod, employeeLogin, null);
        }
        
        public void CreateTimeSheetAsync(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, object userState) {
            if ((this.onBeginCreateTimeSheetDelegate == null)) {
                this.onBeginCreateTimeSheetDelegate = new BeginOperationDelegate(this.OnBeginCreateTimeSheet);
            }
            if ((this.onEndCreateTimeSheetDelegate == null)) {
                this.onEndCreateTimeSheetDelegate = new EndOperationDelegate(this.OnEndCreateTimeSheet);
            }
            if ((this.onCreateTimeSheetCompletedDelegate == null)) {
                this.onCreateTimeSheetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateTimeSheetCompleted);
            }
            base.InvokeAsync(this.onBeginCreateTimeSheetDelegate, new object[] {
                        idDepartment,
                        dateBeginPeriod,
                        dateEndPeriod,
                        employeeLogin}, this.onEndCreateTimeSheetDelegate, this.onCreateTimeSheetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginCreateTimeSheetByName(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> employees, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateTimeSheetByName(idDepartment, dateBeginPeriod, dateEndPeriod, employeeLogin, employees, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoMessage TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndCreateTimeSheetByName(System.IAsyncResult result) {
            return base.Channel.EndCreateTimeSheetByName(result);
        }
        
        private System.IAsyncResult OnBeginCreateTimeSheetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idDepartment = ((int)(inValues[0]));
            System.DateTime dateBeginPeriod = ((System.DateTime)(inValues[1]));
            System.DateTime dateEndPeriod = ((System.DateTime)(inValues[2]));
            string employeeLogin = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> employees = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee>)(inValues[4]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginCreateTimeSheetByName(idDepartment, dateBeginPeriod, dateEndPeriod, employeeLogin, employees, callback, asyncState);
        }
        
        private object[] OnEndCreateTimeSheetByName(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoMessage retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndCreateTimeSheetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateTimeSheetByNameCompleted(object state) {
            if ((this.CreateTimeSheetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateTimeSheetByNameCompleted(this, new CreateTimeSheetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateTimeSheetByNameAsync(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> employees) {
            this.CreateTimeSheetByNameAsync(idDepartment, dateBeginPeriod, dateEndPeriod, employeeLogin, employees, null);
        }
        
        public void CreateTimeSheetByNameAsync(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> employees, object userState) {
            if ((this.onBeginCreateTimeSheetByNameDelegate == null)) {
                this.onBeginCreateTimeSheetByNameDelegate = new BeginOperationDelegate(this.OnBeginCreateTimeSheetByName);
            }
            if ((this.onEndCreateTimeSheetByNameDelegate == null)) {
                this.onEndCreateTimeSheetByNameDelegate = new EndOperationDelegate(this.OnEndCreateTimeSheetByName);
            }
            if ((this.onCreateTimeSheetByNameCompletedDelegate == null)) {
                this.onCreateTimeSheetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateTimeSheetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginCreateTimeSheetByNameDelegate, new object[] {
                        idDepartment,
                        dateBeginPeriod,
                        dateEndPeriod,
                        employeeLogin,
                        employees}, this.onEndCreateTimeSheetByNameDelegate, this.onCreateTimeSheetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeSheetClient.TimeSheetServiceReference.TimeSheetService.BeginRefreshTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRefreshTimeSheet(idTimeSheet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeSheetClient.TimeSheetServiceReference.DtoMessage TimeSheetClient.TimeSheetServiceReference.TimeSheetService.EndRefreshTimeSheet(System.IAsyncResult result) {
            return base.Channel.EndRefreshTimeSheet(result);
        }
        
        private System.IAsyncResult OnBeginRefreshTimeSheet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idTimeSheet = ((int)(inValues[0]));
            return ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).BeginRefreshTimeSheet(idTimeSheet, callback, asyncState);
        }
        
        private object[] OnEndRefreshTimeSheet(System.IAsyncResult result) {
            TimeSheetClient.TimeSheetServiceReference.DtoMessage retVal = ((TimeSheetClient.TimeSheetServiceReference.TimeSheetService)(this)).EndRefreshTimeSheet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRefreshTimeSheetCompleted(object state) {
            if ((this.RefreshTimeSheetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RefreshTimeSheetCompleted(this, new RefreshTimeSheetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RefreshTimeSheetAsync(int idTimeSheet) {
            this.RefreshTimeSheetAsync(idTimeSheet, null);
        }
        
        public void RefreshTimeSheetAsync(int idTimeSheet, object userState) {
            if ((this.onBeginRefreshTimeSheetDelegate == null)) {
                this.onBeginRefreshTimeSheetDelegate = new BeginOperationDelegate(this.OnBeginRefreshTimeSheet);
            }
            if ((this.onEndRefreshTimeSheetDelegate == null)) {
                this.onEndRefreshTimeSheetDelegate = new EndOperationDelegate(this.OnEndRefreshTimeSheet);
            }
            if ((this.onRefreshTimeSheetCompletedDelegate == null)) {
                this.onRefreshTimeSheetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRefreshTimeSheetCompleted);
            }
            base.InvokeAsync(this.onBeginRefreshTimeSheetDelegate, new object[] {
                        idTimeSheet}, this.onEndRefreshTimeSheetDelegate, this.onRefreshTimeSheetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TimeSheetClient.TimeSheetServiceReference.TimeSheetService CreateChannel() {
            return new TimeSheetServiceClientChannel(this);
        }
        
        private class TimeSheetServiceClientChannel : ChannelBase<TimeSheetClient.TimeSheetServiceReference.TimeSheetService>, TimeSheetClient.TimeSheetServiceReference.TimeSheetService {
            
            public TimeSheetServiceClientChannel(System.ServiceModel.ClientBase<TimeSheetClient.TimeSheetServiceReference.TimeSheetService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCurrentApproverByLogin(string employeeLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeeLogin;
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentApproverByLogin", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetCurrentApproverByLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoApprover _result = ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(base.EndInvoke("GetCurrentApproverByLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDepartmentsList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDepartmentsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment> EndGetDepartmentsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDepartment>)(base.EndInvoke("GetDepartmentsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDepartmentEmployees(int idDepartment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idDepartment;
                System.IAsyncResult _result = base.BeginInvoke("GetDepartmentEmployees", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee> EndGetDepartmentEmployees(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoEmployee>)(base.EndInvoke("GetDepartmentEmployees", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmployeesForTimeSheet(int idDepartment, string employeeLogin, System.DateTime dateStart, System.DateTime dateEnd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = idDepartment;
                _args[1] = employeeLogin;
                _args[2] = dateStart;
                _args[3] = dateEnd;
                System.IAsyncResult _result = base.BeginInvoke("GetEmployeesForTimeSheet", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> EndGetEmployeesForTimeSheet(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee>)(base.EndInvoke("GetEmployeesForTimeSheet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDepartmentApprover(int idDepartment, int approveNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = idDepartment;
                _args[1] = approveNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetDepartmentApprover", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetDepartmentApprover(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoApprover _result = ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(base.EndInvoke("GetDepartmentApprover", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddEmployeeLogin(int idEmployee, string login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = idEmployee;
                _args[1] = login;
                System.IAsyncResult _result = base.BeginInvoke("AddEmployeeLogin", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddEmployeeLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddEmployeeLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddApproverForDepartment(int idEmployee, int idDepartment, int approveNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = idEmployee;
                _args[1] = idDepartment;
                _args[2] = approveNumber;
                System.IAsyncResult _result = base.BeginInvoke("AddApproverForDepartment", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddApproverForDepartment(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddApproverForDepartment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idTimeSheet;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeSheet", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet EndGetTimeSheet(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet _result = ((TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet)(base.EndInvoke("GetTimeSheet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeSheetList(int idDepartment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idDepartment;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeSheetList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet> EndGetTimeSheetList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet>)(base.EndInvoke("GetTimeSheetList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDayStatusList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDayStatusList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus> EndGetDayStatusList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoDayStatus>)(base.EndInvoke("GetDayStatusList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditTimeSheetRecords(System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetRecord> recordsForEdit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = recordsForEdit;
                System.IAsyncResult _result = base.BeginInvoke("EditTimeSheetRecords", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEditTimeSheetRecords(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EditTimeSheetRecords", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeSheetApproveHistory(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idTimeSheet;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeSheetApproveHistory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry> EndGetTimeSheetApproveHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoTimeSheetApproveHistiry>)(base.EndInvoke("GetTimeSheetApproveHistory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCanTimeSheeEdit(System.Guid idRecord, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idRecord;
                System.IAsyncResult _result = base.BeginInvoke("CanTimeSheeEdit", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCanTimeSheeEdit(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CanTimeSheeEdit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTimeSheetByName(TimeSheetClient.TimeSheetServiceReference.DtoTimeSheet timeSheet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = timeSheet;
                System.IAsyncResult _result = base.BeginInvoke("TimeSheetByName", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoMessage EndTimeSheetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoMessage _result = ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(base.EndInvoke("TimeSheetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetYearsForExeptionDays(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetYearsForExeptionDays", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndGetYearsForExeptionDays(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("GetYearsForExeptionDays", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWorkScheduleList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWorkScheduleList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule> EndGetWorkScheduleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoWorkShedule>)(base.EndInvoke("GetWorkScheduleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExeptionsDaysInYear(int year, int idWprkSchedule, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = year;
                _args[1] = idWprkSchedule;
                System.IAsyncResult _result = base.BeginInvoke("GetExeptionsDaysInYear", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay> EndGetExeptionsDaysInYear(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay>)(base.EndInvoke("GetExeptionsDaysInYear", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertExeptionsDay(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = exceptionDay;
                System.IAsyncResult _result = base.BeginInvoke("InsertExeptionsDay", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoMessage EndInsertExeptionsDay(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoMessage _result = ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(base.EndInvoke("InsertExeptionsDay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditExeptionsDay(TimeSheetClient.TimeSheetServiceReference.DtoExceptionDay exceptionDay, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = exceptionDay;
                System.IAsyncResult _result = base.BeginInvoke("EditExeptionsDay", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoMessage EndEditExeptionsDay(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoMessage _result = ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(base.EndInvoke("EditExeptionsDay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteExeptionsDay(int idExceptionDay, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idExceptionDay;
                System.IAsyncResult _result = base.BeginInvoke("DeleteExeptionsDay", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoMessage EndDeleteExeptionsDay(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoMessage _result = ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(base.EndInvoke("DeleteExeptionsDay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTimeSheetApproval(int idTimeSheet, string employeeLogin, bool result, string comments, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = idTimeSheet;
                _args[1] = employeeLogin;
                _args[2] = result;
                _args[3] = comments;
                System.IAsyncResult _result = base.BeginInvoke("TimeSheetApproval", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndTimeSheetApproval(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("TimeSheetApproval", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetApproverForTimeSheet(int idTimeSheet, int approverNum, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = idTimeSheet;
                _args[1] = approverNum;
                System.IAsyncResult _result = base.BeginInvoke("GetApproverForTimeSheet", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetApproverForTimeSheet(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoApprover _result = ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(base.EndInvoke("GetApproverForTimeSheet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNextApproverForTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idTimeSheet;
                System.IAsyncResult _result = base.BeginInvoke("GetNextApproverForTimeSheet", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoApprover EndGetNextApproverForTimeSheet(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoApprover _result = ((TimeSheetClient.TimeSheetServiceReference.DtoApprover)(base.EndInvoke("GetNextApproverForTimeSheet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCanApprove(int idTimeSheet, string employeeLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = idTimeSheet;
                _args[1] = employeeLogin;
                System.IAsyncResult _result = base.BeginInvoke("CanApprove", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCanApprove(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CanApprove", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeSheetApproveStep(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idTimeSheet;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeSheetApproveStep", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetTimeSheetApproveStep(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetTimeSheetApproveStep", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendMail(TimeSheetClient.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = approver;
                _args[1] = idTimeSheet;
                _args[2] = approveResult;
                _args[3] = comment;
                _args[4] = isApproveFinished;
                System.IAsyncResult _result = base.BeginInvoke("SendMail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendMail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendMail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFioToDat(string fio, System.Nullable<int> sex, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fio;
                _args[1] = sex;
                System.IAsyncResult _result = base.BeginInvoke("FioToDat", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFioToDat(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FioToDat", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateTimeSheet(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = idDepartment;
                _args[1] = dateBeginPeriod;
                _args[2] = dateEndPeriod;
                _args[3] = employeeLogin;
                System.IAsyncResult _result = base.BeginInvoke("CreateTimeSheet", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoMessage EndCreateTimeSheet(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoMessage _result = ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(base.EndInvoke("CreateTimeSheet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateTimeSheetByName(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod, string employeeLogin, System.Collections.ObjectModel.ObservableCollection<TimeSheetClient.TimeSheetServiceReference.DtoFactStaffEmployee> employees, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = idDepartment;
                _args[1] = dateBeginPeriod;
                _args[2] = dateEndPeriod;
                _args[3] = employeeLogin;
                _args[4] = employees;
                System.IAsyncResult _result = base.BeginInvoke("CreateTimeSheetByName", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoMessage EndCreateTimeSheetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoMessage _result = ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(base.EndInvoke("CreateTimeSheetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRefreshTimeSheet(int idTimeSheet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idTimeSheet;
                System.IAsyncResult _result = base.BeginInvoke("RefreshTimeSheet", _args, callback, asyncState);
                return _result;
            }
            
            public TimeSheetClient.TimeSheetServiceReference.DtoMessage EndRefreshTimeSheet(System.IAsyncResult result) {
                object[] _args = new object[0];
                TimeSheetClient.TimeSheetServiceReference.DtoMessage _result = ((TimeSheetClient.TimeSheetServiceReference.DtoMessage)(base.EndInvoke("RefreshTimeSheet", _args, result)));
                return _result;
            }
        }
    }
}
