//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeSheetUnitTestProject.TimeSheetServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoEmployee", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoFactStaffEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApprover))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover))]
    public partial class DtoEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItabNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SexBitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeLogin {
            get {
                return this.EmployeeLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeLoginField, value) != true)) {
                    this.EmployeeLoginField = value;
                    this.RaisePropertyChanged("EmployeeLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEmployee {
            get {
                return this.IdEmployeeField;
            }
            set {
                if ((this.IdEmployeeField.Equals(value) != true)) {
                    this.IdEmployeeField = value;
                    this.RaisePropertyChanged("IdEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItabN {
            get {
                return this.ItabNField;
            }
            set {
                if ((object.ReferenceEquals(this.ItabNField, value) != true)) {
                    this.ItabNField = value;
                    this.RaisePropertyChanged("ItabN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SexBit {
            get {
                return this.SexBitField;
            }
            set {
                if ((this.SexBitField.Equals(value) != true)) {
                    this.SexBitField = value;
                    this.RaisePropertyChanged("SexBit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoFactStaffEmployee", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApprover))]
    public partial class DtoFactStaffEmployee : TimeSheetUnitTestProject.TimeSheetServiceReference.DtoEmployee {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdFactStaffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoPost PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StaffRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoWorkShedule WorkSheduleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdFactStaff {
            get {
                return this.IdFactStaffField;
            }
            set {
                if ((this.IdFactStaffField.Equals(value) != true)) {
                    this.IdFactStaffField = value;
                    this.RaisePropertyChanged("IdFactStaff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoPost Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StaffRate {
            get {
                return this.StaffRateField;
            }
            set {
                if ((this.StaffRateField.Equals(value) != true)) {
                    this.StaffRateField = value;
                    this.RaisePropertyChanged("StaffRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoWorkShedule WorkShedule {
            get {
                return this.WorkSheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkSheduleField, value) != true)) {
                    this.WorkSheduleField = value;
                    this.RaisePropertyChanged("WorkShedule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetApprover", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoTimeSheetApprover : TimeSheetUnitTestProject.TimeSheetServiceReference.DtoFactStaffEmployee {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppoverNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppoverNumber {
            get {
                return this.AppoverNumberField;
            }
            set {
                if ((this.AppoverNumberField.Equals(value) != true)) {
                    this.AppoverNumberField = value;
                    this.RaisePropertyChanged("AppoverNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoApprover", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoApprover : TimeSheetUnitTestProject.TimeSheetServiceReference.DtoEmployee {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApproverDepartment[] DtoApproverDepartmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdministratorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApproverDepartment[] DtoApproverDepartments {
            get {
                return this.DtoApproverDepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DtoApproverDepartmentsField, value) != true)) {
                    this.DtoApproverDepartmentsField = value;
                    this.RaisePropertyChanged("DtoApproverDepartments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrator {
            get {
                return this.IsAdministratorField;
            }
            set {
                if ((this.IsAdministratorField.Equals(value) != true)) {
                    this.IsAdministratorField = value;
                    this.RaisePropertyChanged("IsAdministrator");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoApproverDepartment", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoApproverDepartment : TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDepartment {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApproveNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproveTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdApproverField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApproveNumber {
            get {
                return this.ApproveNumberField;
            }
            set {
                if ((this.ApproveNumberField.Equals(value) != true)) {
                    this.ApproveNumberField = value;
                    this.RaisePropertyChanged("ApproveNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApproveTypeName {
            get {
                return this.ApproveTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveTypeNameField, value) != true)) {
                    this.ApproveTypeNameField = value;
                    this.RaisePropertyChanged("ApproveTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdApprover {
            get {
                return this.IdApproverField;
            }
            set {
                if ((this.IdApproverField.Equals(value) != true)) {
                    this.IdApproverField = value;
                    this.RaisePropertyChanged("IdApprover");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPost", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoPost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMenagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostSmallNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPost {
            get {
                return this.IdPostField;
            }
            set {
                if ((this.IdPostField.Equals(value) != true)) {
                    this.IdPostField = value;
                    this.RaisePropertyChanged("IdPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMenager {
            get {
                return this.IsMenagerField;
            }
            set {
                if ((this.IsMenagerField.Equals(value) != true)) {
                    this.IsMenagerField = value;
                    this.RaisePropertyChanged("IsMenager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostFullName {
            get {
                return this.PostFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostFullNameField, value) != true)) {
                    this.PostFullNameField = value;
                    this.RaisePropertyChanged("PostFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostSmallName {
            get {
                return this.PostSmallNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostSmallNameField, value) != true)) {
                    this.PostSmallNameField = value;
                    this.RaisePropertyChanged("PostSmallName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoWorkShedule", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoWorkShedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdWorkSheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkSheduleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdWorkShedule {
            get {
                return this.IdWorkSheduleField;
            }
            set {
                if ((this.IdWorkSheduleField.Equals(value) != true)) {
                    this.IdWorkSheduleField = value;
                    this.RaisePropertyChanged("IdWorkShedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkSheduleName {
            get {
                return this.WorkSheduleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkSheduleNameField, value) != true)) {
                    this.WorkSheduleNameField = value;
                    this.RaisePropertyChanged("WorkSheduleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCategory", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategorySmallNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryFullName {
            get {
                return this.CategoryFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryFullNameField, value) != true)) {
                    this.CategoryFullNameField = value;
                    this.RaisePropertyChanged("CategoryFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategorySmallName {
            get {
                return this.CategorySmallNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorySmallNameField, value) != true)) {
                    this.CategorySmallNameField = value;
                    this.RaisePropertyChanged("CategorySmallName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCategory {
            get {
                return this.IdCategoryField;
            }
            set {
                if ((this.IdCategoryField.Equals(value) != true)) {
                    this.IdCategoryField = value;
                    this.RaisePropertyChanged("IdCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPPS {
            get {
                return this.IsPPSField;
            }
            set {
                if ((this.IsPPSField.Equals(value) != true)) {
                    this.IsPPSField = value;
                    this.RaisePropertyChanged("IsPPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((this.OrderByField.Equals(value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoDepartment", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApproverDepartment))]
    public partial class DtoDepartment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentSmallNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdManagerDepartmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentFullName {
            get {
                return this.DepartmentFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentFullNameField, value) != true)) {
                    this.DepartmentFullNameField = value;
                    this.RaisePropertyChanged("DepartmentFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentSmallName {
            get {
                return this.DepartmentSmallNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentSmallNameField, value) != true)) {
                    this.DepartmentSmallNameField = value;
                    this.RaisePropertyChanged("DepartmentSmallName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDepartment {
            get {
                return this.IdDepartmentField;
            }
            set {
                if ((this.IdDepartmentField.Equals(value) != true)) {
                    this.IdDepartmentField = value;
                    this.RaisePropertyChanged("IdDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdManagerDepartment {
            get {
                return this.IdManagerDepartmentField;
            }
            set {
                if ((this.IdManagerDepartmentField.Equals(value) != true)) {
                    this.IdManagerDepartmentField = value;
                    this.RaisePropertyChanged("IdManagerDepartment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheet", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoTimeSheet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApprover[] ApproversField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateBeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDepartment DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetEmployee[] EmployeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdTimeSheetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApprover[] Approvers {
            get {
                return this.ApproversField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproversField, value) != true)) {
                    this.ApproversField = value;
                    this.RaisePropertyChanged("Approvers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateBegin {
            get {
                return this.DateBeginField;
            }
            set {
                if ((this.DateBeginField.Equals(value) != true)) {
                    this.DateBeginField = value;
                    this.RaisePropertyChanged("DateBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateComposition {
            get {
                return this.DateCompositionField;
            }
            set {
                if ((this.DateCompositionField.Equals(value) != true)) {
                    this.DateCompositionField = value;
                    this.RaisePropertyChanged("DateComposition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDepartment Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetEmployee[] Employees {
            get {
                return this.EmployeesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeesField, value) != true)) {
                    this.EmployeesField = value;
                    this.RaisePropertyChanged("Employees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTimeSheet {
            get {
                return this.IdTimeSheetField;
            }
            set {
                if ((this.IdTimeSheetField.Equals(value) != true)) {
                    this.IdTimeSheetField = value;
                    this.RaisePropertyChanged("IdTimeSheet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetEmployee", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoTimeSheetEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoFactStaffEmployee FactStaffEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetRecord[] RecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoFactStaffEmployee FactStaffEmployee {
            get {
                return this.FactStaffEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.FactStaffEmployeeField, value) != true)) {
                    this.FactStaffEmployeeField = value;
                    this.RaisePropertyChanged("FactStaffEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetRecord[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetRecord", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoTimeSheetRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayAweekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDayStatus DayStaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdTimeSheetRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double JobTimeCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayAweek {
            get {
                return this.DayAweekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayAweekField, value) != true)) {
                    this.DayAweekField = value;
                    this.RaisePropertyChanged("DayAweek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDayStatus DayStays {
            get {
                return this.DayStaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DayStaysField, value) != true)) {
                    this.DayStaysField = value;
                    this.RaisePropertyChanged("DayStays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTimeSheetRecord {
            get {
                return this.IdTimeSheetRecordField;
            }
            set {
                if ((this.IdTimeSheetRecordField.Equals(value) != true)) {
                    this.IdTimeSheetRecordField = value;
                    this.RaisePropertyChanged("IdTimeSheetRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double JobTimeCount {
            get {
                return this.JobTimeCountField;
            }
            set {
                if ((this.JobTimeCountField.Equals(value) != true)) {
                    this.JobTimeCountField = value;
                    this.RaisePropertyChanged("JobTimeCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoDayStatus", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoDayStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullDayStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdDayStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmallDayStatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullDayStatusName {
            get {
                return this.FullDayStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullDayStatusNameField, value) != true)) {
                    this.FullDayStatusNameField = value;
                    this.RaisePropertyChanged("FullDayStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDayStatus {
            get {
                return this.IdDayStatusField;
            }
            set {
                if ((this.IdDayStatusField.Equals(value) != true)) {
                    this.IdDayStatusField = value;
                    this.RaisePropertyChanged("IdDayStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmallDayStatusName {
            get {
                return this.SmallDayStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SmallDayStatusNameField, value) != true)) {
                    this.SmallDayStatusNameField = value;
                    this.RaisePropertyChanged("SmallDayStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoMessage", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTimeSheetApproveHistiry", Namespace="http://schemas.datacontract.org/2004/07/TimeSheetMvcWebApplication.ClassesDTO")]
    [System.SerializableAttribute()]
    public partial class DtoTimeSheetApproveHistiry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppoverCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AppoverDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppoverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppoverStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppoverVisaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverComment {
            get {
                return this.AppoverCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverCommentField, value) != true)) {
                    this.AppoverCommentField = value;
                    this.RaisePropertyChanged("AppoverComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AppoverDate {
            get {
                return this.AppoverDateField;
            }
            set {
                if ((this.AppoverDateField.Equals(value) != true)) {
                    this.AppoverDateField = value;
                    this.RaisePropertyChanged("AppoverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverName {
            get {
                return this.AppoverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverNameField, value) != true)) {
                    this.AppoverNameField = value;
                    this.RaisePropertyChanged("AppoverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverStatus {
            get {
                return this.AppoverStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverStatusField, value) != true)) {
                    this.AppoverStatusField = value;
                    this.RaisePropertyChanged("AppoverStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppoverVisa {
            get {
                return this.AppoverVisaField;
            }
            set {
                if ((object.ReferenceEquals(this.AppoverVisaField, value) != true)) {
                    this.AppoverVisaField = value;
                    this.RaisePropertyChanged("AppoverVisa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="TimeSheetServiceReference.TimeSheetService")]
    public interface TimeSheetService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetWindowsUsername", ReplyAction="urn:TimeSheetService/GetWindowsUsernameResponse")]
        string GetWindowsUsername();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetWindowsUsername", ReplyAction="urn:TimeSheetService/GetWindowsUsernameResponse")]
        System.Threading.Tasks.Task<string> GetWindowsUsernameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetCurrentApprover", ReplyAction="urn:TimeSheetService/GetCurrentApproverResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover GetCurrentApprover();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetCurrentApprover", ReplyAction="urn:TimeSheetService/GetCurrentApproverResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover> GetCurrentApproverAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDepartmentsList", ReplyAction="urn:TimeSheetService/GetDepartmentsListResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDepartment[] GetDepartmentsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDepartmentsList", ReplyAction="urn:TimeSheetService/GetDepartmentsListResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDepartment[]> GetDepartmentsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDepartmentEmployees", ReplyAction="urn:TimeSheetService/GetDepartmentEmployeesResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoEmployee[] GetDepartmentEmployees(int idDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDepartmentEmployees", ReplyAction="urn:TimeSheetService/GetDepartmentEmployeesResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoEmployee[]> GetDepartmentEmployeesAsync(int idDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDepartmentApprover", ReplyAction="urn:TimeSheetService/GetDepartmentApproverResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover GetDepartmentApprover(int idDepartment, int approveNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDepartmentApprover", ReplyAction="urn:TimeSheetService/GetDepartmentApproverResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover> GetDepartmentApproverAsync(int idDepartment, int approveNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/AddEmployeeLogin", ReplyAction="urn:TimeSheetService/AddEmployeeLoginResponse")]
        void AddEmployeeLogin(int idEmployee, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/AddEmployeeLogin", ReplyAction="urn:TimeSheetService/AddEmployeeLoginResponse")]
        System.Threading.Tasks.Task AddEmployeeLoginAsync(int idEmployee, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/AddApproverForDepartment", ReplyAction="urn:TimeSheetService/AddApproverForDepartmentResponse")]
        void AddApproverForDepartment(int idEmployee, int idDepartment, int approveNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/AddApproverForDepartment", ReplyAction="urn:TimeSheetService/AddApproverForDepartmentResponse")]
        System.Threading.Tasks.Task AddApproverForDepartmentAsync(int idEmployee, int idDepartment, int approveNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheet", ReplyAction="urn:TimeSheetService/GetTimeSheetResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet GetTimeSheet(int idTimeSheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheet", ReplyAction="urn:TimeSheetService/GetTimeSheetResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet> GetTimeSheetAsync(int idTimeSheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheetList", ReplyAction="urn:TimeSheetService/GetTimeSheetListResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet[] GetTimeSheetList(int idDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheetList", ReplyAction="urn:TimeSheetService/GetTimeSheetListResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet[]> GetTimeSheetListAsync(int idDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDayStatusList", ReplyAction="urn:TimeSheetService/GetDayStatusListResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDayStatus[] GetDayStatusList();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetDayStatusList", ReplyAction="urn:TimeSheetService/GetDayStatusListResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDayStatus[]> GetDayStatusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/EditTimeSheetRecords", ReplyAction="urn:TimeSheetService/EditTimeSheetRecordsResponse")]
        bool EditTimeSheetRecords(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetRecord[] recordsForEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/EditTimeSheetRecords", ReplyAction="urn:TimeSheetService/EditTimeSheetRecordsResponse")]
        System.Threading.Tasks.Task<bool> EditTimeSheetRecordsAsync(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetRecord[] recordsForEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CreateTimeSheet1", ReplyAction="urn:TimeSheetService/CreateTimeSheet1Response")]
        void CreateTimeSheet1(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CreateTimeSheet1", ReplyAction="urn:TimeSheetService/CreateTimeSheet1Response")]
        System.Threading.Tasks.Task CreateTimeSheet1Async(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CreateTimeSheet", ReplyAction="urn:TimeSheetService/CreateTimeSheetResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoMessage CreateTimeSheet(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CreateTimeSheet", ReplyAction="urn:TimeSheetService/CreateTimeSheetResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoMessage> CreateTimeSheetAsync(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheetApproveHistory", ReplyAction="urn:TimeSheetService/GetTimeSheetApproveHistoryResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApproveHistiry[] GetTimeSheetApproveHistory(int idTimeSheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheetApproveHistory", ReplyAction="urn:TimeSheetService/GetTimeSheetApproveHistoryResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApproveHistiry[]> GetTimeSheetApproveHistoryAsync(int idTimeSheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CanTimeSheeEdit", ReplyAction="urn:TimeSheetService/CanTimeSheeEditResponse")]
        bool CanTimeSheeEdit(int idRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CanTimeSheeEdit", ReplyAction="urn:TimeSheetService/CanTimeSheeEditResponse")]
        System.Threading.Tasks.Task<bool> CanTimeSheeEditAsync(int idRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/TimeSheetApproval", ReplyAction="urn:TimeSheetService/TimeSheetApprovalResponse")]
        bool TimeSheetApproval(int idTimeSheet, int idApprover, bool result, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/TimeSheetApproval", ReplyAction="urn:TimeSheetService/TimeSheetApprovalResponse")]
        System.Threading.Tasks.Task<bool> TimeSheetApprovalAsync(int idTimeSheet, int idApprover, bool result, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetApproverForTimeSheet", ReplyAction="urn:TimeSheetService/GetApproverForTimeSheetResponse")]
        TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover GetApproverForTimeSheet(int idTimeSheet, int approverNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetApproverForTimeSheet", ReplyAction="urn:TimeSheetService/GetApproverForTimeSheetResponse")]
        System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover> GetApproverForTimeSheetAsync(int idTimeSheet, int approverNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/SendMail", ReplyAction="urn:TimeSheetService/SendMailResponse")]
        bool SendMail(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/SendMail", ReplyAction="urn:TimeSheetService/SendMailResponse")]
        System.Threading.Tasks.Task<bool> SendMailAsync(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CanApprove", ReplyAction="urn:TimeSheetService/CanApproveResponse")]
        bool CanApprove(int idTimeSheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/CanApprove", ReplyAction="urn:TimeSheetService/CanApproveResponse")]
        System.Threading.Tasks.Task<bool> CanApproveAsync(int idTimeSheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheetApproveStep", ReplyAction="urn:TimeSheetService/GetTimeSheetApproveStepResponse")]
        int GetTimeSheetApproveStep(int idTimeSheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TimeSheetService/GetTimeSheetApproveStep", ReplyAction="urn:TimeSheetService/GetTimeSheetApproveStepResponse")]
        System.Threading.Tasks.Task<int> GetTimeSheetApproveStepAsync(int idTimeSheet);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TimeSheetServiceChannel : TimeSheetUnitTestProject.TimeSheetServiceReference.TimeSheetService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeSheetServiceClient : System.ServiceModel.ClientBase<TimeSheetUnitTestProject.TimeSheetServiceReference.TimeSheetService>, TimeSheetUnitTestProject.TimeSheetServiceReference.TimeSheetService {
        
        public TimeSheetServiceClient() {
        }
        
        public TimeSheetServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimeSheetServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeSheetServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeSheetServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetWindowsUsername() {
            return base.Channel.GetWindowsUsername();
        }
        
        public System.Threading.Tasks.Task<string> GetWindowsUsernameAsync() {
            return base.Channel.GetWindowsUsernameAsync();
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover GetCurrentApprover() {
            return base.Channel.GetCurrentApprover();
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover> GetCurrentApproverAsync() {
            return base.Channel.GetCurrentApproverAsync();
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDepartment[] GetDepartmentsList() {
            return base.Channel.GetDepartmentsList();
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDepartment[]> GetDepartmentsListAsync() {
            return base.Channel.GetDepartmentsListAsync();
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoEmployee[] GetDepartmentEmployees(int idDepartment) {
            return base.Channel.GetDepartmentEmployees(idDepartment);
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoEmployee[]> GetDepartmentEmployeesAsync(int idDepartment) {
            return base.Channel.GetDepartmentEmployeesAsync(idDepartment);
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover GetDepartmentApprover(int idDepartment, int approveNumber) {
            return base.Channel.GetDepartmentApprover(idDepartment, approveNumber);
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover> GetDepartmentApproverAsync(int idDepartment, int approveNumber) {
            return base.Channel.GetDepartmentApproverAsync(idDepartment, approveNumber);
        }
        
        public void AddEmployeeLogin(int idEmployee, string login) {
            base.Channel.AddEmployeeLogin(idEmployee, login);
        }
        
        public System.Threading.Tasks.Task AddEmployeeLoginAsync(int idEmployee, string login) {
            return base.Channel.AddEmployeeLoginAsync(idEmployee, login);
        }
        
        public void AddApproverForDepartment(int idEmployee, int idDepartment, int approveNumber) {
            base.Channel.AddApproverForDepartment(idEmployee, idDepartment, approveNumber);
        }
        
        public System.Threading.Tasks.Task AddApproverForDepartmentAsync(int idEmployee, int idDepartment, int approveNumber) {
            return base.Channel.AddApproverForDepartmentAsync(idEmployee, idDepartment, approveNumber);
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet GetTimeSheet(int idTimeSheet) {
            return base.Channel.GetTimeSheet(idTimeSheet);
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet> GetTimeSheetAsync(int idTimeSheet) {
            return base.Channel.GetTimeSheetAsync(idTimeSheet);
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet[] GetTimeSheetList(int idDepartment) {
            return base.Channel.GetTimeSheetList(idDepartment);
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheet[]> GetTimeSheetListAsync(int idDepartment) {
            return base.Channel.GetTimeSheetListAsync(idDepartment);
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDayStatus[] GetDayStatusList() {
            return base.Channel.GetDayStatusList();
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoDayStatus[]> GetDayStatusListAsync() {
            return base.Channel.GetDayStatusListAsync();
        }
        
        public bool EditTimeSheetRecords(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetRecord[] recordsForEdit) {
            return base.Channel.EditTimeSheetRecords(recordsForEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditTimeSheetRecordsAsync(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetRecord[] recordsForEdit) {
            return base.Channel.EditTimeSheetRecordsAsync(recordsForEdit);
        }
        
        public void CreateTimeSheet1(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod) {
            base.Channel.CreateTimeSheet1(idDepartment, dateBeginPeriod, dateEndPeriod);
        }
        
        public System.Threading.Tasks.Task CreateTimeSheet1Async(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod) {
            return base.Channel.CreateTimeSheet1Async(idDepartment, dateBeginPeriod, dateEndPeriod);
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoMessage CreateTimeSheet(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod) {
            return base.Channel.CreateTimeSheet(idDepartment, dateBeginPeriod, dateEndPeriod);
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoMessage> CreateTimeSheetAsync(int idDepartment, System.DateTime dateBeginPeriod, System.DateTime dateEndPeriod) {
            return base.Channel.CreateTimeSheetAsync(idDepartment, dateBeginPeriod, dateEndPeriod);
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApproveHistiry[] GetTimeSheetApproveHistory(int idTimeSheet) {
            return base.Channel.GetTimeSheetApproveHistory(idTimeSheet);
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoTimeSheetApproveHistiry[]> GetTimeSheetApproveHistoryAsync(int idTimeSheet) {
            return base.Channel.GetTimeSheetApproveHistoryAsync(idTimeSheet);
        }
        
        public bool CanTimeSheeEdit(int idRecord) {
            return base.Channel.CanTimeSheeEdit(idRecord);
        }
        
        public System.Threading.Tasks.Task<bool> CanTimeSheeEditAsync(int idRecord) {
            return base.Channel.CanTimeSheeEditAsync(idRecord);
        }
        
        public bool TimeSheetApproval(int idTimeSheet, int idApprover, bool result, string comments) {
            return base.Channel.TimeSheetApproval(idTimeSheet, idApprover, result, comments);
        }
        
        public System.Threading.Tasks.Task<bool> TimeSheetApprovalAsync(int idTimeSheet, int idApprover, bool result, string comments) {
            return base.Channel.TimeSheetApprovalAsync(idTimeSheet, idApprover, result, comments);
        }
        
        public TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover GetApproverForTimeSheet(int idTimeSheet, int approverNum) {
            return base.Channel.GetApproverForTimeSheet(idTimeSheet, approverNum);
        }
        
        public System.Threading.Tasks.Task<TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover> GetApproverForTimeSheetAsync(int idTimeSheet, int approverNum) {
            return base.Channel.GetApproverForTimeSheetAsync(idTimeSheet, approverNum);
        }
        
        public bool SendMail(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished) {
            return base.Channel.SendMail(approver, idTimeSheet, approveResult, comment, isApproveFinished);
        }
        
        public System.Threading.Tasks.Task<bool> SendMailAsync(TimeSheetUnitTestProject.TimeSheetServiceReference.DtoApprover approver, int idTimeSheet, bool approveResult, string comment, bool isApproveFinished) {
            return base.Channel.SendMailAsync(approver, idTimeSheet, approveResult, comment, isApproveFinished);
        }
        
        public bool CanApprove(int idTimeSheet) {
            return base.Channel.CanApprove(idTimeSheet);
        }
        
        public System.Threading.Tasks.Task<bool> CanApproveAsync(int idTimeSheet) {
            return base.Channel.CanApproveAsync(idTimeSheet);
        }
        
        public int GetTimeSheetApproveStep(int idTimeSheet) {
            return base.Channel.GetTimeSheetApproveStep(idTimeSheet);
        }
        
        public System.Threading.Tasks.Task<int> GetTimeSheetApproveStepAsync(int idTimeSheet) {
            return base.Channel.GetTimeSheetApproveStepAsync(idTimeSheet);
        }
    }
}
